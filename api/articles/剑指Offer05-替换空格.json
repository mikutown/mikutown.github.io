{"title":"剑指Offer05.替换空格","slug":"剑指Offer05-替换空格","date":"2023-03-20T08:11:28.000Z","updated":"2023-03-20T08:16:16.183Z","comments":true,"path":"api/articles/剑指Offer05-替换空格.json","excerpt":"题目请实现一个函数，把字符串 s 中的每个空格替换成”%20”。","covers":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>请实现一个函数，把字符串 <code>s</code> 中的每个空格替换成”%20”。</p>\n <span id=\"more\"></span>\n\n<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;We are happy.&quot;\n输出：&quot;We%20are%20happy.&quot;</code></pre>\n\n<p><strong>限制：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">0 &lt;&#x3D; s 的长度 &lt;&#x3D; 10000</code></pre>\n\n\n\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>常规思路</li>\n</ul>\n<p>新建一个string类型的变量result，对输入的字符串s的每个字符进行判断，若字符为空格，则<code>result+=&quot;%20;&quot;</code>，否则<code>result+=s[i];</code>，C++代码实现如下：</p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    string replaceSpace(string s) &#123;\n        string result &#x3D; &quot;&quot;; &#x2F;&#x2F; 定义结果字符串result\n        int n &#x3D; s.length(); &#x2F;&#x2F; 获取输入字符串s的长度\n        for(int i &#x3D; 0; i &lt; n; i++) &#123; &#x2F;&#x2F; 进行遍历\n            if (s[i] &#x3D;&#x3D; &#39; &#39;) &#123; &#x2F;&#x2F; 若s[i]为空格，则result+&#x3D;&quot;%20&quot;;\n                result +&#x3D; &quot;%20&quot;;\n            &#125;\n            else &#123; &#x2F;&#x2F; 否则直接+&#x3D;s[i];\n                result +&#x3D; s[i];\n            &#125;\n        &#125;\n        return result; &#x2F;&#x2F; 最后返回结果值result\n    &#125;\n&#125;;</code></pre>\n\n","more":"<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;We are happy.&quot;\n输出：&quot;We%20are%20happy.&quot;</code></pre>\n\n<p><strong>限制：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">0 &lt;&#x3D; s 的长度 &lt;&#x3D; 10000</code></pre>\n\n\n\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>常规思路</li>\n</ul>\n<p>新建一个string类型的变量result，对输入的字符串s的每个字符进行判断，若字符为空格，则<code>result+=&quot;%20;&quot;</code>，否则<code>result+=s[i];</code>，C++代码实现如下：</p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    string replaceSpace(string s) &#123;\n        string result &#x3D; &quot;&quot;; &#x2F;&#x2F; 定义结果字符串result\n        int n &#x3D; s.length(); &#x2F;&#x2F; 获取输入字符串s的长度\n        for(int i &#x3D; 0; i &lt; n; i++) &#123; &#x2F;&#x2F; 进行遍历\n            if (s[i] &#x3D;&#x3D; &#39; &#39;) &#123; &#x2F;&#x2F; 若s[i]为空格，则result+&#x3D;&quot;%20&quot;;\n                result +&#x3D; &quot;%20&quot;;\n            &#125;\n            else &#123; &#x2F;&#x2F; 否则直接+&#x3D;s[i];\n                result +&#x3D; s[i];\n            &#125;\n        &#125;\n        return result; &#x2F;&#x2F; 最后返回结果值result\n    &#125;\n&#125;;</code></pre>","categories":[],"tags":[{"name":"leetcode","path":"api/tags/leetcode.json"},{"name":"算法","path":"api/tags/算法.json"}]}
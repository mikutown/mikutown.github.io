{"title":"算法练习-26-设计一个验证抛掷硬币的正反概率相等的计数器(1.2.10)","slug":"算法练习-26-设计一个验证抛掷硬币的正反概率相等的计数器(1.2.10)","date":"2021-01-29T15:19:47.000Z","updated":"2021-01-29T16:08:55.870Z","comments":true,"path":"api/articles/算法练习-26-设计一个验证抛掷硬币的正反概率相等的计数器(1.2.10).json","excerpt":"算法练习-26-设计一个验证抛掷硬币的正反概率相等的计数器(1.2.10)知识点计数器图的绘制","covers":["https://gitee.com/mikutown/pic/raw/master/img/ea372ff98abf8f4c8d2fd43ce868428b.png"],"content":"<h1 id=\"算法练习-26-设计一个验证抛掷硬币的正反概率相等的计数器-1-2-10\"><a href=\"#算法练习-26-设计一个验证抛掷硬币的正反概率相等的计数器-1-2-10\" class=\"headerlink\" title=\"算法练习-26-设计一个验证抛掷硬币的正反概率相等的计数器(1.2.10)\"></a>算法练习-26-设计一个验证抛掷硬币的正反概率相等的计数器(1.2.10)</h1><ul>\n<li>知识点<ul>\n<li>计数器</li>\n<li>图的绘制</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n\n<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><strong>1.2.10 编写一个类 VisualCounter，支持加一和减一操作。它的构造函数接受两个参数 N 和 max，其中 N 指定了操作的最大次数， max 指定了计数器的最大绝对值。作为副作用，用图像显示每次计数器变化后的值。</strong></p>\n<hr>\n<p><strong>1.2.10 Develop a class VisualCounter that allows both increment and decrement operations. Take two arguments N and max in the constructor, where N specifies the maximum number of operations and max specifies the maximum absolute value for the counter. As a side effect, create a plot showing the value of the counter each time its tally changes.</strong></p>\n<ul>\n<li>分析</li>\n</ul>\n<p>上一篇文章分析过了Counter计数器类的设计，API如下：<img src=\"https://gitee.com/mikutown/pic/raw/master/img/ea372ff98abf8f4c8d2fd43ce868428b.png\" loading=\"lazy\"></p>\n<p>这个计数器嵌入了二分法查找中，较直观的看出二分法查找的优秀性能。但做为开发者，为用户提供更好更直观的工具是我们不变的追求。因此一个可视化计数器的需求随之提出，之前的计数器只能加不能减，只适用于计算循环次数；可视化计数器能增加也能减少，适用于处理算法的平均性能。</p>\n<p>从题目的要求也能看出：<code> N 指定了操作的最大次数， max 指定了计数器的最大绝对值。</code></p>\n<p>可视化计数器适用于统计需要多次试验才能获取结果的算法情况。这里我们为了模拟一种需要可视化计数器的情况：<br><strong>抛掷一枚硬币，操作的次数为N，max表示计数器的最大绝对值</strong></p>\n<p>有了这么一个前提，那题目就会变得简单很多，我们可以考虑将N设置为10000，计数器的最大值<strong>max其实可以暂时设置为N&#x2F;2，因为概率大概为1&#x2F;2</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Practise_01_02_10</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VisualCounter</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> <span class=\"token class-name\">N</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> total<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">VisualCounter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> trails<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">setXscale</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> trails<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">setYscale</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>max<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPenRadius</span><span class=\"token punctuation\">(</span><span class=\"token number\">.005f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">N</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            total<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPenColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span>DARK_GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">point</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">N</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            total<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPenColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span>DARK_GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">point</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">VisualCounter</span> counter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VisualCounter</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StdRandom</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                counter<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                counter<span class=\"token punctuation\">.</span><span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>","more":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><strong>1.2.10 编写一个类 VisualCounter，支持加一和减一操作。它的构造函数接受两个参数 N 和 max，其中 N 指定了操作的最大次数， max 指定了计数器的最大绝对值。作为副作用，用图像显示每次计数器变化后的值。</strong></p>\n<hr>\n<p><strong>1.2.10 Develop a class VisualCounter that allows both increment and decrement operations. Take two arguments N and max in the constructor, where N specifies the maximum number of operations and max specifies the maximum absolute value for the counter. As a side effect, create a plot showing the value of the counter each time its tally changes.</strong></p>\n<ul>\n<li>分析</li>\n</ul>\n<p>上一篇文章分析过了Counter计数器类的设计，API如下：<img src=\"https://gitee.com/mikutown/pic/raw/master/img/ea372ff98abf8f4c8d2fd43ce868428b.png\"></p>\n<p>这个计数器嵌入了二分法查找中，较直观的看出二分法查找的优秀性能。但做为开发者，为用户提供更好更直观的工具是我们不变的追求。因此一个可视化计数器的需求随之提出，之前的计数器只能加不能减，只适用于计算循环次数；可视化计数器能增加也能减少，适用于处理算法的平均性能。</p>\n<p>从题目的要求也能看出：<code> N 指定了操作的最大次数， max 指定了计数器的最大绝对值。</code></p>\n<p>可视化计数器适用于统计需要多次试验才能获取结果的算法情况。这里我们为了模拟一种需要可视化计数器的情况：<br><strong>抛掷一枚硬币，操作的次数为N，max表示计数器的最大绝对值</strong></p>\n<p>有了这么一个前提，那题目就会变得简单很多，我们可以考虑将N设置为10000，计数器的最大值<strong>max其实可以暂时设置为N&#x2F;2，因为概率大概为1&#x2F;2</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Practise_01_02_10</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VisualCounter</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">long</span> <span class=\"token class-name\">N</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> total<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">VisualCounter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> trails<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">setXscale</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> trails<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">setYscale</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>max<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPenRadius</span><span class=\"token punctuation\">(</span><span class=\"token number\">.005f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">N</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            total<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPenColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span>DARK_GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">point</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">N</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            total<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPenColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span>DARK_GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdDraw</span><span class=\"token punctuation\">.</span><span class=\"token function\">point</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">VisualCounter</span> counter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VisualCounter</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StdRandom</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                counter<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                counter<span class=\"token punctuation\">.</span><span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>","categories":[],"tags":[{"name":"算法","path":"api/tags/算法.json"}]}
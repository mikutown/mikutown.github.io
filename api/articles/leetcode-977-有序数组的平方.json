{"title":"leetcode:977.有序数组的平方","slug":"leetcode-977-有序数组的平方","date":"2023-02-06T11:32:22.000Z","updated":"2023-02-06T11:34:27.885Z","comments":true,"path":"api/articles/leetcode-977-有序数组的平方.json","excerpt":"题目给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。","covers":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>给你一个按 <strong>非递减顺序</strong> 排序的整数数组 <code>nums</code>，返回 <strong>每个数字的平方</strong> 组成的新数组，要求也按 <strong>非递减顺序</strong> 排序。</p>\n<span id=\"more\"></span>\n\n<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：nums &#x3D; [-4,-1,0,3,10]\n输出：[0,1,9,16,100]\n解释：平方后，数组变为 [16,1,0,9,100]\n排序后，数组变为 [0,1,9,16,100]</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：nums &#x3D; [-7,-3,2,3,11]\n输出：[4,9,9,49,121]</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 104</code></li>\n<li><code>-104 &lt;= nums[i] &lt;= 104</code></li>\n<li><code>nums</code> 已按 <strong>非递减顺序</strong> 排序</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ol>\n<li>常规思路</li>\n</ol>\n<p>先对每个数组的元素进行平方赋值，然后对数组进行排序。</p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    vector&lt;int&gt; sortedSquares(vector&lt;int&gt;&amp; nums) &#123;\n        for (int i &#x3D; 0; i &lt; nums.size(); i++) &#123;\n            nums[i] &#x3D; nums[i] * nums[i];\n        &#125;\n        sort(nums.begin(), nums.end()); &#x2F;&#x2F;排序\n        return nums;\n    &#125;\n&#125;;</code></pre>\n\n","more":"<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：nums &#x3D; [-4,-1,0,3,10]\n输出：[0,1,9,16,100]\n解释：平方后，数组变为 [16,1,0,9,100]\n排序后，数组变为 [0,1,9,16,100]</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：nums &#x3D; [-7,-3,2,3,11]\n输出：[4,9,9,49,121]</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 104</code></li>\n<li><code>-104 &lt;= nums[i] &lt;= 104</code></li>\n<li><code>nums</code> 已按 <strong>非递减顺序</strong> 排序</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ol>\n<li>常规思路</li>\n</ol>\n<p>先对每个数组的元素进行平方赋值，然后对数组进行排序。</p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    vector&lt;int&gt; sortedSquares(vector&lt;int&gt;&amp; nums) &#123;\n        for (int i &#x3D; 0; i &lt; nums.size(); i++) &#123;\n            nums[i] &#x3D; nums[i] * nums[i];\n        &#125;\n        sort(nums.begin(), nums.end()); &#x2F;&#x2F;排序\n        return nums;\n    &#125;\n&#125;;</code></pre>","categories":[],"tags":[{"name":"leetcode","path":"api/tags/leetcode.json"},{"name":"算法","path":"api/tags/算法.json"}]}
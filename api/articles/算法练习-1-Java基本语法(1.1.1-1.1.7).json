{"title":"算法练习-1-Java基本语法(1.1.1-1.1.7)","slug":"算法练习-1-Java基本语法(1.1.1-1.1.7)","date":"2021-01-07T13:09:54.000Z","updated":"2021-01-09T13:34:36.000Z","comments":true,"path":"api/articles/算法练习-1-Java基本语法(1.1.1-1.1.7).json","excerpt":"算法练习-1-Java基本语法(1.1.1-1.1.7)《算法》（第四版）的第一章课后习题1.1.1-1.1.7，希望自己能坚持下去把这本书啃完！此博客的习题知识点：java基本语法斐波那契数列的java表示","covers":["https://gitee.com/mikutown/pic/raw/master/img/20210108020834.png"],"content":"<h1 id=\"算法练习-1-Java基本语法-1-1-1-1-1-7\"><a href=\"#算法练习-1-Java基本语法-1-1-1-1-1-7\" class=\"headerlink\" title=\"算法练习-1-Java基本语法(1.1.1-1.1.7)\"></a>算法练习-1-Java基本语法(1.1.1-1.1.7)</h1><p>《算法》（第四版）的第一章课后习题1.1.1-1.1.7，希望自己能坚持下去把这本书啃完！</p>\n<p>此博客的习题知识点：</p>\n<ul>\n<li>java基本语法</li>\n<li>斐波那契数列的java表示</li>\n</ul>\n<a id=\"more\"></a>\n\n<h2 id=\"1-1-1-1-1-7\"><a href=\"#1-1-1-1-1-7\" class=\"headerlink\" title=\"1.1.1-1.1.7\"></a>1.1.1-1.1.7</h2><p><strong>知识点</strong></p>\n<ul>\n<li>java的基本语法</li>\n<li>斐波那契数列的java表示</li>\n</ul>\n<h3 id=\"给出以下表达式的值：\"><a href=\"#给出以下表达式的值：\" class=\"headerlink\" title=\"给出以下表达式的值：\"></a>给出以下表达式的值：</h3><p>1.1.1</p>\n<p><strong>a.( 0 + 15 ) / 2<br>b.2.0e-6 * 100000000.1<br>c.true &amp;&amp; false || true &amp;&amp; true</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>practice<span class=\"token punctuation\">.</span>charpter01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***\n * @author leafii\n *\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> practice01 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">/**\n         * a.( 0 + 15 ) / 2\n         * b.2.0e-6 * 100000000.1\n         * c.true &amp;&amp; false || true &amp;&amp; true\n         */</span>\n        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">+</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2e-6</span> <span class=\"token operator\">*</span> <span class=\"token number\">100000000.1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> c <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a=\"</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b=\"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c=\"</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">a&#x3D;7    整除\nb&#x3D;200.0000002    2*10的-6 乘以 100000000.1 double类型\nc&#x3D;true   false &amp;&amp; true</code></pre>\n\n\n<h3 id=\"给出以下表达式的类型和值\"><a href=\"#给出以下表达式的类型和值\" class=\"headerlink\" title=\"给出以下表达式的类型和值:\"></a><strong>给出以下表达式的类型和值:</strong></h3><p>1.1.2</p>\n<p><strong>a. (1 + 2.236)/2<br>b. 1 + 2 + 3 + 4.0<br>c. 4.1 &gt;= 4<br>d. 1 + 2 + “3”</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>practice<span class=\"token punctuation\">.</span>charpter01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***\n * @author leafii\n *\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> practice01 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">/**\n         * a. (1 + 2.236)/2\n         * b. 1 + 2 + 3 + 4.0\n         * c. 4.1 >= 4\n         * d. 1 + 2 + \"3\"\n          */</span>\n        <span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2.236</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">4.0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> c <span class=\"token operator\">=</span> <span class=\"token number\">4.1</span> <span class=\"token operator\">>=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> d <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a=\"</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b=\"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c=\"</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d=\"</span> <span class=\"token operator\">+</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">a&#x3D;1.618    3.236&#x2F;2 double\nb&#x3D;10.0     double\t\nc&#x3D;true     \nd&#x3D;33     3 和 3 拼接</code></pre>\n<h3 id=\"编写一个程序\"><a href=\"#编写一个程序\" class=\"headerlink\" title=\"编写一个程序\"></a><strong>编写一个程序</strong></h3><p>1.1.3</p>\n<p><strong>从命令行得到三个整数参数。如果它们都相等则打印 equal，否则打印 not equal。</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>practice<span class=\"token punctuation\">.</span>charpter01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">In</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***\n * @author leafii\n *\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> practice01 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">/**\n         * 编写一个程序，从命令行得到三个整数参数。\n         * 如果它们都相等则打印 equal，\n         * 否则打印 not equal。\n         */</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//为了能多重输入，便于测试哦</span>\n            <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"equal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not equal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">12 23 34\nnot equal\n11 11 11\nequal</code></pre>\n<h3 id=\"下列语句各有什么问题-如果有的话\"><a href=\"#下列语句各有什么问题-如果有的话\" class=\"headerlink\" title=\"下列语句各有什么问题(如果有的话)?\"></a><strong>下列语句各有什么问题(如果有的话)?</strong></h3><p>1.1.4</p>\n<p><strong>a. if (a &gt; b) then c = 0;<br>b. if a &gt; b { c = 0; }<br>c. if (a &gt; b) c = 0;<br>d. if (a &gt; b) c = 0 else b = 0;</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">a. if (a &gt; b) then c &#x3D; 0;   &#x2F;&#x2F;java中不存在then关键字\nb. if a &gt; b &#123; c &#x3D; 0; &#125;   &#x2F;&#x2F;没有括号，应该是(a &gt; b)\nc. if (a &gt; b) c &#x3D; 0;    &#x2F;&#x2F;没问题，不过最好加括号\nd. if (a &gt; b) c &#x3D; 0 else b &#x3D; 0; &#x2F;&#x2F;有问题 c&#x3D;0没有分号，还有二义性，没加花括号</code></pre>\n<h3 id=\"编写一段程序\"><a href=\"#编写一段程序\" class=\"headerlink\" title=\"编写一段程序\"></a><strong>编写一段程序</strong></h3><p>1.1.5</p>\n<p><strong>如果 double 类型的变量 x 和 y 都严格位于 0 和 1 之间则打印 true，否则打印 false</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>practice<span class=\"token punctuation\">.</span>charpter01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">In</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***\n * @author leafii\n *\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> practice01 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">/**\n         如果 double 类型的变量 x 和 y 都严格位于 0 和 1 之间则打印 true，\n         否则打印 false\n         */</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">double</span> x <span class=\"token operator\">=</span> <span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">.</span><span class=\"token function\">readDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">double</span> y <span class=\"token operator\">=</span> <span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">.</span><span class=\"token function\">readDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">>=</span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;=</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> y<span class=\"token operator\">>=</span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> y<span class=\"token operator\">&lt;=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">0.1\n0.89\ntrue\n1.2\n0.1\nfalse\n0.3\n3.4\nfalse</code></pre>\n<h3 id=\"下面这段程序会打印出什么\"><a href=\"#下面这段程序会打印出什么\" class=\"headerlink\" title=\"下面这段程序会打印出什么?\"></a><strong>下面这段程序会打印出什么?</strong></h3><p>1.1.6</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> f <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> g <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    f <span class=\"token operator\">=</span> f <span class=\"token operator\">+</span> g<span class=\"token punctuation\">;</span>\n    g <span class=\"token operator\">=</span> f <span class=\"token operator\">-</span> g<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span></code></pre>\n<p>答：会打印出</p>\n<pre class=\"language-none\"><code class=\"language-none\">0\n1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n89\n144\n233\n377\n610</code></pre>\n<p>分析如下：</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20210108020834.png\" alt=\"image-20210108020834693\" loading=\"lazy\"></p>\n<p><strong>注：这段代码是用来展示斐波那契数列的哦</strong></p>\n<h3 id=\"分别给出以下代码段打印出的值\"><a href=\"#分别给出以下代码段打印出的值\" class=\"headerlink\" title=\"分别给出以下代码段打印出的值:\"></a><strong>分别给出以下代码段打印出的值:</strong></h3><p>1.1.7</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//a.</span>\n<span class=\"token keyword\">double</span> t <span class=\"token operator\">=</span> <span class=\"token number\">9.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">-</span> <span class=\"token number\">9.0</span><span class=\"token operator\">/</span>t<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">.001</span><span class=\"token punctuation\">)</span>\n    t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">9.0</span><span class=\"token operator\">/</span>t <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.5f\\n\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//b.</span>\n<span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        sum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//c. </span>\n<span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">*=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        sum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>答案：</p>\n<pre class=\"language-none\"><code class=\"language-none\">&#x2F;&#x2F;a. \n3.00009\n&#x2F;&#x2F;b.\n499500\n&#x2F;&#x2F;c.\n10000</code></pre>\n\n\n<hr>\n<p>参考：<a href=\"https://xiaozhuanlan.com/topic/0341275869\">算法练习(1):Java 基本语法(1.1.1-1.1.7) － 小专栏 (xiaozhuanlan.com)</a></p>\n","more":"<h2 id=\"1-1-1-1-1-7\"><a href=\"#1-1-1-1-1-7\" class=\"headerlink\" title=\"1.1.1-1.1.7\"></a>1.1.1-1.1.7</h2><p><strong>知识点</strong></p>\n<ul>\n<li>java的基本语法</li>\n<li>斐波那契数列的java表示</li>\n</ul>\n<h3 id=\"给出以下表达式的值：\"><a href=\"#给出以下表达式的值：\" class=\"headerlink\" title=\"给出以下表达式的值：\"></a>给出以下表达式的值：</h3><p>1.1.1</p>\n<p><strong>a.( 0 + 15 ) / 2<br>b.2.0e-6 * 100000000.1<br>c.true &amp;&amp; false || true &amp;&amp; true</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>practice<span class=\"token punctuation\">.</span>charpter01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***\n * @author leafii\n *\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> practice01 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">/**\n         * a.( 0 + 15 ) / 2\n         * b.2.0e-6 * 100000000.1\n         * c.true &amp;&amp; false || true &amp;&amp; true\n         */</span>\n        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">+</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2e-6</span> <span class=\"token operator\">*</span> <span class=\"token number\">100000000.1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> c <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a=\"</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b=\"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c=\"</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">a&#x3D;7    整除\nb&#x3D;200.0000002    2*10的-6 乘以 100000000.1 double类型\nc&#x3D;true   false &amp;&amp; true</code></pre>\n\n\n<h3 id=\"给出以下表达式的类型和值\"><a href=\"#给出以下表达式的类型和值\" class=\"headerlink\" title=\"给出以下表达式的类型和值:\"></a><strong>给出以下表达式的类型和值:</strong></h3><p>1.1.2</p>\n<p><strong>a. (1 + 2.236)/2<br>b. 1 + 2 + 3 + 4.0<br>c. 4.1 &gt;= 4<br>d. 1 + 2 + “3”</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>practice<span class=\"token punctuation\">.</span>charpter01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***\n * @author leafii\n *\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> practice01 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">/**\n         * a. (1 + 2.236)/2\n         * b. 1 + 2 + 3 + 4.0\n         * c. 4.1 >= 4\n         * d. 1 + 2 + \"3\"\n          */</span>\n        <span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2.236</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">4.0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> c <span class=\"token operator\">=</span> <span class=\"token number\">4.1</span> <span class=\"token operator\">>=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> d <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a=\"</span> <span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b=\"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c=\"</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d=\"</span> <span class=\"token operator\">+</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">a&#x3D;1.618    3.236&#x2F;2 double\nb&#x3D;10.0     double\t\nc&#x3D;true     \nd&#x3D;33     3 和 3 拼接</code></pre>\n<h3 id=\"编写一个程序\"><a href=\"#编写一个程序\" class=\"headerlink\" title=\"编写一个程序\"></a><strong>编写一个程序</strong></h3><p>1.1.3</p>\n<p><strong>从命令行得到三个整数参数。如果它们都相等则打印 equal，否则打印 not equal。</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>practice<span class=\"token punctuation\">.</span>charpter01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">In</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***\n * @author leafii\n *\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> practice01 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">/**\n         * 编写一个程序，从命令行得到三个整数参数。\n         * 如果它们都相等则打印 equal，\n         * 否则打印 not equal。\n         */</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//为了能多重输入，便于测试哦</span>\n            <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"equal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not equal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">12 23 34\nnot equal\n11 11 11\nequal</code></pre>\n<h3 id=\"下列语句各有什么问题-如果有的话\"><a href=\"#下列语句各有什么问题-如果有的话\" class=\"headerlink\" title=\"下列语句各有什么问题(如果有的话)?\"></a><strong>下列语句各有什么问题(如果有的话)?</strong></h3><p>1.1.4</p>\n<p><strong>a. if (a &gt; b) then c = 0;<br>b. if a &gt; b { c = 0; }<br>c. if (a &gt; b) c = 0;<br>d. if (a &gt; b) c = 0 else b = 0;</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">a. if (a &gt; b) then c &#x3D; 0;   &#x2F;&#x2F;java中不存在then关键字\nb. if a &gt; b &#123; c &#x3D; 0; &#125;   &#x2F;&#x2F;没有括号，应该是(a &gt; b)\nc. if (a &gt; b) c &#x3D; 0;    &#x2F;&#x2F;没问题，不过最好加括号\nd. if (a &gt; b) c &#x3D; 0 else b &#x3D; 0; &#x2F;&#x2F;有问题 c&#x3D;0没有分号，还有二义性，没加花括号</code></pre>\n<h3 id=\"编写一段程序\"><a href=\"#编写一段程序\" class=\"headerlink\" title=\"编写一段程序\"></a><strong>编写一段程序</strong></h3><p>1.1.5</p>\n<p><strong>如果 double 类型的变量 x 和 y 都严格位于 0 和 1 之间则打印 true，否则打印 false</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>practice<span class=\"token punctuation\">.</span>charpter01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">In</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***\n * @author leafii\n *\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> practice01 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">/**\n         如果 double 类型的变量 x 和 y 都严格位于 0 和 1 之间则打印 true，\n         否则打印 false\n         */</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">double</span> x <span class=\"token operator\">=</span> <span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">.</span><span class=\"token function\">readDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">double</span> y <span class=\"token operator\">=</span> <span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">.</span><span class=\"token function\">readDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">>=</span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;=</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> y<span class=\"token operator\">>=</span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> y<span class=\"token operator\">&lt;=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">0.1\n0.89\ntrue\n1.2\n0.1\nfalse\n0.3\n3.4\nfalse</code></pre>\n<h3 id=\"下面这段程序会打印出什么\"><a href=\"#下面这段程序会打印出什么\" class=\"headerlink\" title=\"下面这段程序会打印出什么?\"></a><strong>下面这段程序会打印出什么?</strong></h3><p>1.1.6</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> f <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> g <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    f <span class=\"token operator\">=</span> f <span class=\"token operator\">+</span> g<span class=\"token punctuation\">;</span>\n    g <span class=\"token operator\">=</span> f <span class=\"token operator\">-</span> g<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span></code></pre>\n<p>答：会打印出</p>\n<pre class=\"language-none\"><code class=\"language-none\">0\n1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n89\n144\n233\n377\n610</code></pre>\n<p>分析如下：</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20210108020834.png\" alt=\"image-20210108020834693\"></p>\n<p><strong>注：这段代码是用来展示斐波那契数列的哦</strong></p>\n<h3 id=\"分别给出以下代码段打印出的值\"><a href=\"#分别给出以下代码段打印出的值\" class=\"headerlink\" title=\"分别给出以下代码段打印出的值:\"></a><strong>分别给出以下代码段打印出的值:</strong></h3><p>1.1.7</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//a.</span>\n<span class=\"token keyword\">double</span> t <span class=\"token operator\">=</span> <span class=\"token number\">9.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">-</span> <span class=\"token number\">9.0</span><span class=\"token operator\">/</span>t<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">.001</span><span class=\"token punctuation\">)</span>\n    t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">9.0</span><span class=\"token operator\">/</span>t <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.5f\\n\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//b.</span>\n<span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        sum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//c. </span>\n<span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">*=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        sum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>答案：</p>\n<pre class=\"language-none\"><code class=\"language-none\">&#x2F;&#x2F;a. \n3.00009\n&#x2F;&#x2F;b.\n499500\n&#x2F;&#x2F;c.\n10000</code></pre>\n\n\n<hr>\n<p>参考：<a href=\"https://xiaozhuanlan.com/topic/0341275869\">算法练习(1):Java 基本语法(1.1.1-1.1.7) － 小专栏 (xiaozhuanlan.com)</a></p>","categories":[],"tags":[{"name":"算法","path":"api/tags/算法.json"}]}
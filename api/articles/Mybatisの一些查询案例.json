{"title":"Mybatisの一些查询案例","slug":"Mybatisの一些查询案例","date":"2020-04-21T13:07:08.000Z","updated":"2022-05-20T09:47:00.298Z","comments":true,"path":"api/articles/Mybatisの一些查询案例.json","excerpt":"准备工作将之前的项目复制一份，改名，然后将对应的pom文件中的<br> [Figure] 改成新的项目名称将新的项目导入到idea中，直接打开pom文件 一直点下一步即可注意：在编写测试方法时，测试类的名字为UserMapperTest，测试方法的方法名为testXxxx，这样取名符合编程规范","covers":["http://cdn.leafii.top/img/20220520174624.png","http://cdn.leafii.top/img/20220520174642.png"],"content":"<h4 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h4><ol>\n<li>将之前的项目复制一份，改名，然后将对应的pom文件中的<br><img src=\"http://cdn.leafii.top/img/20220520174624.png\" loading=\"lazy\"><br>改成新的项目名称</li>\n<li>将新的项目导入到idea中，直接打开pom文件 一直点下一步即可</li>\n</ol>\n<p><strong>注意：在编写测试方法时，测试类的名字为UserMapperTest，测试方法的方法名为testXxxx，这样取名符合编程规范</strong></p>\n<span id=\"more\"></span>\n\n<h1 id=\"Mybatis-案例\"><a href=\"#Mybatis-案例\" class=\"headerlink\" title=\"Mybatis 案例\"></a>Mybatis 案例</h1><h2 id=\"一、案例1：入门程序（略过）\"><a href=\"#一、案例1：入门程序（略过）\" class=\"headerlink\" title=\"一、案例1：入门程序（略过）\"></a>一、案例1：入门程序（略过）</h2><h2 id=\"二、案例2：两个以上sql-参数\"><a href=\"#二、案例2：两个以上sql-参数\" class=\"headerlink\" title=\"二、案例2：两个以上sql 参数\"></a>二、案例2：两个以上sql 参数</h2><p>数据库：</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span>  <span class=\"token keyword\">database</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span>         <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span>  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'用户名称'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>birthday<span class=\"token punctuation\">`</span></span>  <span class=\"token keyword\">date</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'生日'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>sex<span class=\"token punctuation\">`</span></span>       <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'性别'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>address<span class=\"token punctuation\">`</span></span>   <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'地址'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token operator\">=</span><span class=\"token number\">27</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王五'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'广州'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王六'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王八'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> employee<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span>\n\tname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre>\n\n<p>场景: 查在上海的女人</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> whrere sex <span class=\"token operator\">=</span> ? <span class=\"token operator\">and</span> address <span class=\"token operator\">=</span> ?</code></pre>\n\n<h3 id=\"1-通过Map-的方式\"><a href=\"#1-通过Map-的方式\" class=\"headerlink\" title=\"1. 通过Map 的方式\"></a>1. 通过Map 的方式</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserByAddrAndSexA<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       select * from user where sex = #&#123;sex&#125; and address = #&#123;address&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p> mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectUserByAddrAndSexA</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userList <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserByAddrAndSexA</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<h3 id=\"2-通过java-Bean-的方式\"><a href=\"#2-通过java-Bean-的方式\" class=\"headerlink\" title=\"2. 通过java Bean 的方式\"></a>2. 通过java Bean 的方式</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\">\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserByAddrAndSexB<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>net.suncaper.mybatisdemo.domain.User<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select * from user where sex = #&#123;sex&#125; and address = #&#123;address&#125;\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p> mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectUserByAddrAndSexB</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userList <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserByAddrAndSexB</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       </code></pre>\n\n<h3 id=\"3-通过java-Bean-命名式参数-的方式\"><a href=\"#3-通过java-Bean-命名式参数-的方式\" class=\"headerlink\" title=\"3. 通过java Bean + 命名式参数 的方式\"></a>3. 通过java Bean + 命名式参数 的方式</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserByAddrAndSexC<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       select * from user where sex = #&#123;u.sex&#125; and address = #&#123;u.address&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectUserByAddrAndSexC</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userList <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserByAddrAndSexC</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"4-通过-命名式参数-的方式\"><a href=\"#4-通过-命名式参数-的方式\" class=\"headerlink\" title=\"4. 通过  命名式参数 的方式\"></a>4. 通过  命名式参数 的方式</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserByAddrAndSexD<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       select * from user where sex = #&#123;a&#125; and address = #&#123;b&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectUserByAddrAndSexD</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> sex<span class=\"token punctuation\">,</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">String</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userList <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserByAddrAndSexD</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n\n\n<h2 id=\"三、案例3：以集合或数组作为参数\"><a href=\"#三、案例3：以集合或数组作为参数\" class=\"headerlink\" title=\"三、案例3：以集合或数组作为参数\"></a>三、案例3：以集合或数组作为参数</h2><blockquote>\n<p>查询广州、北京、上海、深圳的人</p>\n</blockquote>\n<blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserBySomeAddr<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       select * from user where address in\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>foreach</span> <span class=\"token attr-name\">collection</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addresses<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">open</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">close</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">separator</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>,<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addr<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n         #&#123;addr&#125;\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>foreach</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectUserBySomeAddr</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addresses\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> addresses<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userList<span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserBySomeAddr</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"广州\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"深圳\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"北京\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<h2 id=\"四、案例4：演示-和-的区别\"><a href=\"#四、案例4：演示-和-的区别\" class=\"headerlink\" title=\"四、案例4：演示# 和 $ 的区别\"></a>四、案例4：演示# 和 $ 的区别</h2><blockquote>\n<p>$ 只是字符串的拼接，不能防止SQL注入</p>\n<p><code>$&#123;value&#125;</code> 会被直接替换，而 <code>#&#123;value&#125;</code> 会被使用 <code>?</code>作为 预处理</p>\n</blockquote>\n<blockquote>\n<p>注：JDBC是通过设定传入数据类型进行防注入的</p>\n</blockquote>\n<blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserByName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n         select * from user where username = '$&#123;value &#125;'\n<span class=\"token comment\">&lt;!--或者username=#&#123;username&#125;--></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span>  <span class=\"token function\">selectUserByName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-none\"><code class=\"language-none\">List&lt;User&gt; users &#x3D; userMapper.selectUserByName(&quot;王八&quot;);</code></pre>\n<blockquote>\n<p>执行结果对比</p>\n</blockquote>\n<p><img src=\"http://cdn.leafii.top/img/20220520174642.png\" loading=\"lazy\"></p>\n<h2 id=\"五、案例5：模糊查询\"><a href=\"#五、案例5：模糊查询\" class=\"headerlink\" title=\"五、案例5：模糊查询\"></a>五、案例5：模糊查询</h2><blockquote>\n<p>场景:查询名字 包含”王“ 字混球</p>\n</blockquote>\n<h3 id=\"方式1：通过-符号（方便但是不安全）\"><a href=\"#方式1：通过-符号（方便但是不安全）\" class=\"headerlink\" title=\"方式1：通过$符号（方便但是不安全）\"></a>方式1：通过$符号（方便但是不安全）</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserLikeName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n     select * from user where username like '%$&#123;value&#125;%'\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//查询有\"王\"字</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span>  <span class=\"token function\">selectUserLikeName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserLikeName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"王\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><strong>功能没问题 但是不能防止SQL注入攻击</strong></p>\n<h3 id=\"方式2：通过字符串连接函数（安全但是不好看）\"><a href=\"#方式2：通过字符串连接函数（安全但是不好看）\" class=\"headerlink\" title=\"方式2：通过字符串连接函数（安全但是不好看）\"></a>方式2：通过字符串连接函数（安全但是不好看）</h3><blockquote>\n<p>使用数据库函数CONCAT<br>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserLikeName1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       select * from user where username like CONCAT('%',#&#123;value&#125;,'%')\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--使用#符号可以防止sql注入攻击--></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//查询有\"王\"字</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span>  <span class=\"token function\">selectUserLikeName1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserLikeName1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"王\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><strong>通过#符号的使用，防止了sql注入，可是依赖性太强</strong></p>\n<h3 id=\"方式3：通过-lt-bind-gt-标签（中规中矩，安全方便）\"><a href=\"#方式3：通过-lt-bind-gt-标签（中规中矩，安全方便）\" class=\"headerlink\" title=\"方式3：通过&lt;bind&gt; 标签（中规中矩，安全方便）\"></a>方式3：通过&lt;bind&gt; 标签（中规中矩，安全方便）</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserLikeName2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bind</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>%<span class=\"token punctuation\">'</span>+name+<span class=\"token punctuation\">'</span>%<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n       select * from user where username like  #&#123;item&#125;\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//查询有\"王\"字</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span>  <span class=\"token function\">selectUserLikeName2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserLikeName2</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"王\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><strong>既可以防止sql注入，又不依赖数据库 任何数据库都可以执行</strong></p>\n<h2 id=\"六、案例6：插入语句并获得主键\"><a href=\"#六、案例6：插入语句并获得主键\" class=\"headerlink\" title=\"六、案例6：插入语句并获得主键\"></a>六、案例6：插入语句并获得主键</h2><h3 id=\"方式1-通过useGeneratedKeys\"><a href=\"#方式1-通过useGeneratedKeys\" class=\"headerlink\" title=\"方式1: 通过useGeneratedKeys\"></a>方式1: 通过useGeneratedKeys</h3><blockquote>\n<p>通过 useGeneratedKeys拿到数据库自动增长的id值，赋给插入对象的主键字段（user 对象的id属性）</p>\n</blockquote>\n<blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insertUser<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">useGeneratedKeys</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keyProperty</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\ninsert into user(username,birthday,sex,address) values(#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;, #&#123;address&#125; )\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>段落引用</p>\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">void</span> <span class=\"token function\">insertUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"龙哥\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"重庆\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuserMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insertUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//持有持久化ID</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<h3 id=\"方式2-通过数据库函数实现\"><a href=\"#方式2-通过数据库函数实现\" class=\"headerlink\" title=\"方式2: 通过数据库函数实现\"></a>方式2: 通过数据库函数实现</h3><blockquote>\n<p>自动增长的id :  select last_insert_id()</p>\n<p>获取uuid: select uuid()</p>\n</blockquote>\n<blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!-- 字符串类型作为主键 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insertEmployee<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Employee<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>selectKey</span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keyProperty</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">order</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>BEFORE<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            select uuid()\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>selectKey</span><span class=\"token punctuation\">></span></span>\n        insert into employee(id,name) values(#&#123;id&#125;,#&#123;name&#125;)\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- int 类型作为主键 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insertUser1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>selectKey</span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_int<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keyProperty</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">order</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AFTER<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            select last_insert_id()\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>selectKey</span><span class=\"token punctuation\">></span></span>\n        insert into user(username,birthday,sex,address) values(#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;, #&#123;address&#125;)\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">void</span> <span class=\"token function\">insertEmployee</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Employee</span> employee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">insertUser1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"> <span class=\"token class-name\">Employee</span> employee <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Employee</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token comment\">/*  employee.setId(IDGener.getUUID()); 默认情况下，缺少主键不能插入数据库*/</span>\n employee<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"员工222\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n employeeMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insertEmployee</span><span class=\"token punctuation\">(</span>employee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>employee<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-------------------------------</span>\n <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"黄爷\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"重庆\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insertUser1</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \n <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<h2 id=\"七、案例7：更新和删除操作\"><a href=\"#七、案例7：更新和删除操作\" class=\"headerlink\" title=\"七、案例7：更新和删除操作\"></a>七、案例7：更新和删除操作</h2><blockquote>\n<p>通过删除和更新，事务处理</p>\n<p>默认情况下 sqlSession 是事务不自动提交，需要显式提交</p>\n</blockquote>\n<blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>delete</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deleteUserByName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      delete  from user where username = #&#123;username&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>delete</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>update</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>updateUserNameById<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      update  user set username = #&#123;username&#125; where id = #&#123;id&#125;\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>update</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteUserByName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">updateUserNameById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//true 自动提交 默认是true</span>\n\n<span class=\"token comment\">//在测试类中如果sqlSession为false，那么如果想要提交事务需要编写代码:</span>\n   <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDeleteUserByName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">boolean</span> isAuto <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            isAuto <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAutoCommit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            user<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"李四\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteUserByName</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">rollback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span>isAuto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testUpdateUserNameById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">boolean</span> isAuto <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            isAuto <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAutoCommit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            user<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            user<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"黄柯\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">updateUserNameById</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">rollback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span>isAuto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//结束</span></code></pre>","more":"<h1 id=\"Mybatis-案例\"><a href=\"#Mybatis-案例\" class=\"headerlink\" title=\"Mybatis 案例\"></a>Mybatis 案例</h1><h2 id=\"一、案例1：入门程序（略过）\"><a href=\"#一、案例1：入门程序（略过）\" class=\"headerlink\" title=\"一、案例1：入门程序（略过）\"></a>一、案例1：入门程序（略过）</h2><h2 id=\"二、案例2：两个以上sql-参数\"><a href=\"#二、案例2：两个以上sql-参数\" class=\"headerlink\" title=\"二、案例2：两个以上sql 参数\"></a>二、案例2：两个以上sql 参数</h2><p>数据库：</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span>  <span class=\"token keyword\">database</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span>         <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span>  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'用户名称'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>birthday<span class=\"token punctuation\">`</span></span>  <span class=\"token keyword\">date</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'生日'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>sex<span class=\"token punctuation\">`</span></span>       <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'性别'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>address<span class=\"token punctuation\">`</span></span>   <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'地址'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token operator\">=</span><span class=\"token number\">27</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王五'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'广州'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王六'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王八'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> employee<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span>\n\tname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre>\n\n<p>场景: 查在上海的女人</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> whrere sex <span class=\"token operator\">=</span> ? <span class=\"token operator\">and</span> address <span class=\"token operator\">=</span> ?</code></pre>\n\n<h3 id=\"1-通过Map-的方式\"><a href=\"#1-通过Map-的方式\" class=\"headerlink\" title=\"1. 通过Map 的方式\"></a>1. 通过Map 的方式</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserByAddrAndSexA<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       select * from user where sex = #&#123;sex&#125; and address = #&#123;address&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p> mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectUserByAddrAndSexA</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userList <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserByAddrAndSexA</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<h3 id=\"2-通过java-Bean-的方式\"><a href=\"#2-通过java-Bean-的方式\" class=\"headerlink\" title=\"2. 通过java Bean 的方式\"></a>2. 通过java Bean 的方式</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\">\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserByAddrAndSexB<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>net.suncaper.mybatisdemo.domain.User<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select * from user where sex = #&#123;sex&#125; and address = #&#123;address&#125;\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p> mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectUserByAddrAndSexB</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userList <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserByAddrAndSexB</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       </code></pre>\n\n<h3 id=\"3-通过java-Bean-命名式参数-的方式\"><a href=\"#3-通过java-Bean-命名式参数-的方式\" class=\"headerlink\" title=\"3. 通过java Bean + 命名式参数 的方式\"></a>3. 通过java Bean + 命名式参数 的方式</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserByAddrAndSexC<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       select * from user where sex = #&#123;u.sex&#125; and address = #&#123;u.address&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectUserByAddrAndSexC</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userList <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserByAddrAndSexC</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3 id=\"4-通过-命名式参数-的方式\"><a href=\"#4-通过-命名式参数-的方式\" class=\"headerlink\" title=\"4. 通过  命名式参数 的方式\"></a>4. 通过  命名式参数 的方式</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserByAddrAndSexD<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       select * from user where sex = #&#123;a&#125; and address = #&#123;b&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectUserByAddrAndSexD</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> sex<span class=\"token punctuation\">,</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">String</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userList <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserByAddrAndSexD</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n\n\n<h2 id=\"三、案例3：以集合或数组作为参数\"><a href=\"#三、案例3：以集合或数组作为参数\" class=\"headerlink\" title=\"三、案例3：以集合或数组作为参数\"></a>三、案例3：以集合或数组作为参数</h2><blockquote>\n<p>查询广州、北京、上海、深圳的人</p>\n</blockquote>\n<blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserBySomeAddr<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       select * from user where address in\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>foreach</span> <span class=\"token attr-name\">collection</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addresses<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">open</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">close</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">separator</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>,<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addr<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n         #&#123;addr&#125;\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>foreach</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectUserBySomeAddr</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addresses\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> addresses<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userList<span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserBySomeAddr</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"广州\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"深圳\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"北京\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<h2 id=\"四、案例4：演示-和-的区别\"><a href=\"#四、案例4：演示-和-的区别\" class=\"headerlink\" title=\"四、案例4：演示# 和 $ 的区别\"></a>四、案例4：演示# 和 $ 的区别</h2><blockquote>\n<p>$ 只是字符串的拼接，不能防止SQL注入</p>\n<p><code>$&#123;value&#125;</code> 会被直接替换，而 <code>#&#123;value&#125;</code> 会被使用 <code>?</code>作为 预处理</p>\n</blockquote>\n<blockquote>\n<p>注：JDBC是通过设定传入数据类型进行防注入的</p>\n</blockquote>\n<blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserByName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n         select * from user where username = '$&#123;value &#125;'\n<span class=\"token comment\">&lt;!--或者username=#&#123;username&#125;--></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span>  <span class=\"token function\">selectUserByName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-none\"><code class=\"language-none\">List&lt;User&gt; users &#x3D; userMapper.selectUserByName(&quot;王八&quot;);</code></pre>\n<blockquote>\n<p>执行结果对比</p>\n</blockquote>\n<p><img src=\"http://cdn.leafii.top/img/20220520174642.png\"></p>\n<h2 id=\"五、案例5：模糊查询\"><a href=\"#五、案例5：模糊查询\" class=\"headerlink\" title=\"五、案例5：模糊查询\"></a>五、案例5：模糊查询</h2><blockquote>\n<p>场景:查询名字 包含”王“ 字混球</p>\n</blockquote>\n<h3 id=\"方式1：通过-符号（方便但是不安全）\"><a href=\"#方式1：通过-符号（方便但是不安全）\" class=\"headerlink\" title=\"方式1：通过$符号（方便但是不安全）\"></a>方式1：通过$符号（方便但是不安全）</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserLikeName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n     select * from user where username like '%$&#123;value&#125;%'\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//查询有\"王\"字</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span>  <span class=\"token function\">selectUserLikeName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserLikeName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"王\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><strong>功能没问题 但是不能防止SQL注入攻击</strong></p>\n<h3 id=\"方式2：通过字符串连接函数（安全但是不好看）\"><a href=\"#方式2：通过字符串连接函数（安全但是不好看）\" class=\"headerlink\" title=\"方式2：通过字符串连接函数（安全但是不好看）\"></a>方式2：通过字符串连接函数（安全但是不好看）</h3><blockquote>\n<p>使用数据库函数CONCAT<br>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserLikeName1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       select * from user where username like CONCAT('%',#&#123;value&#125;,'%')\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--使用#符号可以防止sql注入攻击--></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//查询有\"王\"字</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span>  <span class=\"token function\">selectUserLikeName1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserLikeName1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"王\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><strong>通过#符号的使用，防止了sql注入，可是依赖性太强</strong></p>\n<h3 id=\"方式3：通过-lt-bind-gt-标签（中规中矩，安全方便）\"><a href=\"#方式3：通过-lt-bind-gt-标签（中规中矩，安全方便）\" class=\"headerlink\" title=\"方式3：通过&lt;bind&gt; 标签（中规中矩，安全方便）\"></a>方式3：通过&lt;bind&gt; 标签（中规中矩，安全方便）</h3><blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectUserLikeName2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bind</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>%<span class=\"token punctuation\">'</span>+name+<span class=\"token punctuation\">'</span>%<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n       select * from user where username like  #&#123;item&#125;\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//查询有\"王\"字</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span>  <span class=\"token function\">selectUserLikeName2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectUserLikeName2</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"王\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><strong>既可以防止sql注入，又不依赖数据库 任何数据库都可以执行</strong></p>\n<h2 id=\"六、案例6：插入语句并获得主键\"><a href=\"#六、案例6：插入语句并获得主键\" class=\"headerlink\" title=\"六、案例6：插入语句并获得主键\"></a>六、案例6：插入语句并获得主键</h2><h3 id=\"方式1-通过useGeneratedKeys\"><a href=\"#方式1-通过useGeneratedKeys\" class=\"headerlink\" title=\"方式1: 通过useGeneratedKeys\"></a>方式1: 通过useGeneratedKeys</h3><blockquote>\n<p>通过 useGeneratedKeys拿到数据库自动增长的id值，赋给插入对象的主键字段（user 对象的id属性）</p>\n</blockquote>\n<blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insertUser<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">useGeneratedKeys</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keyProperty</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\ninsert into user(username,birthday,sex,address) values(#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;, #&#123;address&#125; )\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>段落引用</p>\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">void</span> <span class=\"token function\">insertUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"龙哥\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"重庆\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuserMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insertUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//持有持久化ID</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<h3 id=\"方式2-通过数据库函数实现\"><a href=\"#方式2-通过数据库函数实现\" class=\"headerlink\" title=\"方式2: 通过数据库函数实现\"></a>方式2: 通过数据库函数实现</h3><blockquote>\n<p>自动增长的id :  select last_insert_id()</p>\n<p>获取uuid: select uuid()</p>\n</blockquote>\n<blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!-- 字符串类型作为主键 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insertEmployee<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Employee<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>selectKey</span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keyProperty</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">order</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>BEFORE<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            select uuid()\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>selectKey</span><span class=\"token punctuation\">></span></span>\n        insert into employee(id,name) values(#&#123;id&#125;,#&#123;name&#125;)\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- int 类型作为主键 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insertUser1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>selectKey</span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_int<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keyProperty</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">order</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AFTER<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            select last_insert_id()\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>selectKey</span><span class=\"token punctuation\">></span></span>\n        insert into user(username,birthday,sex,address) values(#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;, #&#123;address&#125;)\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">void</span> <span class=\"token function\">insertEmployee</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Employee</span> employee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">insertUser1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"> <span class=\"token class-name\">Employee</span> employee <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Employee</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token comment\">/*  employee.setId(IDGener.getUUID()); 默认情况下，缺少主键不能插入数据库*/</span>\n employee<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"员工222\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n employeeMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insertEmployee</span><span class=\"token punctuation\">(</span>employee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>employee<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-------------------------------</span>\n <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"黄爷\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"重庆\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insertUser1</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \n <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<h2 id=\"七、案例7：更新和删除操作\"><a href=\"#七、案例7：更新和删除操作\" class=\"headerlink\" title=\"七、案例7：更新和删除操作\"></a>七、案例7：更新和删除操作</h2><blockquote>\n<p>通过删除和更新，事务处理</p>\n<p>默认情况下 sqlSession 是事务不自动提交，需要显式提交</p>\n</blockquote>\n<blockquote>\n<p>mapper.xml</p>\n</blockquote>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>delete</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deleteUserByName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      delete  from user where username = #&#123;username&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>delete</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>update</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>updateUserNameById<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      update  user set username = #&#123;username&#125; where id = #&#123;id&#125;\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>update</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<blockquote>\n<p>mapper 接口的代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteUserByName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">updateUserNameById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<blockquote>\n<p>测试代码</p>\n</blockquote>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//true 自动提交 默认是true</span>\n\n<span class=\"token comment\">//在测试类中如果sqlSession为false，那么如果想要提交事务需要编写代码:</span>\n   <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testDeleteUserByName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">boolean</span> isAuto <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            isAuto <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAutoCommit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            user<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"李四\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteUserByName</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">rollback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span>isAuto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testUpdateUserNameById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">boolean</span> isAuto <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            isAuto <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAutoCommit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            user<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            user<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"黄柯\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">updateUserNameById</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">rollback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span>isAuto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//结束</span></code></pre>","categories":[],"tags":[{"name":"Mybatis","path":"api/tags/Mybatis.json"}]}
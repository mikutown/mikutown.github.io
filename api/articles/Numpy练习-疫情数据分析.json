{"title":"Numpy练习_疫情数据分析","slug":"Numpy练习-疫情数据分析","date":"2022-05-22T17:36:03.000Z","updated":"2022-05-24T16:23:43.672Z","comments":true,"path":"api/articles/Numpy练习-疫情数据分析.json","excerpt":"​        20年开始的新冠肺炎席卷全球，我们能从肺炎数据中发现什么规律呢？我提前给你准备了从 2020 年 1 月 22 日到 2020 年 7 月 27 日的数据。","covers":null,"content":"<p>​        20年开始的新冠肺炎席卷全球，我们能从肺炎数据中发现什么规律呢？我提前给你准备了从 2020 年 1 月 22 日到 2020 年 7 月 27 日的数据。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"疫情数据分析\"><a href=\"#疫情数据分析\" class=\"headerlink\" title=\"疫情数据分析\"></a>疫情数据分析</h1><h2 id=\"数据下载\"><a href=\"#数据下载\" class=\"headerlink\" title=\"数据下载\"></a>数据下载</h2><p>​        2020年1月22日到2020年7月27日的数据<a href=\"https://pan.baidu.com/s/1HX83ebLmbcGJmf5ErXZiVg\">下载链接</a>：提取码：5mrb</p>\n<h2 id=\"加载数据\"><a href=\"#加载数据\" class=\"headerlink\" title=\"加载数据\"></a>加载数据</h2><p>​        用下面的代码在你本地加载数据。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你下载的 day_wise.csv 数据\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ncovid <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"date\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"header\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>h <span class=\"token keyword\">for</span> h <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    split_row <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>\n    covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>split_row<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> split_row<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        确保你的文件引入正确</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 数据</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 数据太多了，我先打 5 行</span>\n<span class=\"token comment\"># print(covid[\"data\"]) # 如果你实在想看全部，就执行这一行</span>\n<span class=\"token comment\"># 日期数据</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 数据太多了，我先打 5 行</span>\n<span class=\"token comment\"># print(covid[\"date\"]) # 如果你实在想看全部，就执行这一行</span></code></pre>\n\n<p>​        了解了数据的大概样子，那么来使用你所学到的 Numpy 技能，我们来分析下面这几个问题。</p>\n<ol>\n<li>获取 2020 年 2 月 3 日的所有数据</li>\n<li>2020 年 1 月 24 日之前的累积确诊病例有多少个？</li>\n<li>2020 年 7 月 23 日的新增死亡数是多少？</li>\n<li>从 1 月 25 日到 7 月 22 日，一共增长了多少确诊病例？</li>\n<li>每天新增确诊数和新恢复数的比例？平均比例，标准差各是多少？</li>\n<li>画图展示新增确诊的变化曲线</li>\n<li>画图展示死亡率的变化曲线</li>\n</ol>\n<h2 id=\"某日所有数据\"><a href=\"#某日所有数据\" class=\"headerlink\" title=\"某日所有数据\"></a>某日所有数据</h2><ul>\n<li>获取 2020 年 2 月 3 日的所有数据</li>\n</ul>\n<p>​        解决这个问题之前，我们需要搞懂使用Numpy获取到特定数据的时候，数据的索引是什么。在Numpy中，我们用来索引的大概率是数字，所以我们得搞清楚对应的数字标号是什么。因为我在为你准备的covid数据中，把日期和标题都用Python列表装起来了，所以你可以通过<code>.index(&quot;xxx&quot;)</code>功能来获取到它的索引。</p>\n<p>​        我们需要思考的是：找到这一天所对应的索引。还好我已经把日期都用列表给存储起来了。看看日期的存储方式。将日期转换成<code>date_idx</code>之后，我们就能用这个index来获取到那一天的全部数据了。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"日期列表摘取：\"</span><span class=\"token punctuation\">,</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ndate_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-02-03\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"日期->索引转换：\"</span><span class=\"token punctuation\">,</span> date_idx<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> header<span class=\"token punctuation\">,</span> number <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">[</span>date_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">,</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span>\n</code></pre>\n\n<p>​        至于，这些人数为什么会是一个小数呢？因为 Numpy 在存储一批数据的时候，它会把数据都存成一个模式，在这套数据中，我们都是以小数（float64）的形式存储的， 所以你才会看到有小数点。</p>\n<h2 id=\"累计确诊\"><a href=\"#累计确诊\" class=\"headerlink\" title=\"累计确诊\"></a>累计确诊</h2><ul>\n<li>2020 年 1 月 24 日之前的累积确诊病例有多少个？</li>\n</ul>\n<p>​        有了上一个任务的基础，这个任务我们就更加细致地去获取某个具体的数值，我们确定完日期（row）的 index 之后，再确定标题 （column）的 index。 在这个案例中，我们要确定累积确诊数（Conformed）的索引。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">row_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-01-24\"</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 获取日期索引</span>\ncolumn_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"Confirmed\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 获取标题的索引</span>\nconfirmed0124 <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>row_idx<span class=\"token punctuation\">,</span> column_idx<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"截止 1 月 24 日的累积确诊数：\"</span><span class=\"token punctuation\">,</span> confirmed0124<span class=\"token punctuation\">)</span></code></pre>\n\n<h2 id=\"新增死亡\"><a href=\"#新增死亡\" class=\"headerlink\" title=\"新增死亡\"></a>新增死亡</h2><ul>\n<li>2020年7月23日的新增死亡数是多少？</li>\n</ul>\n<p>​        这还是一个在Numpy Array中选取数据的过程，我们要搞清楚具体的索引是什么。”New deaths”对应的就是新增死亡数，按照之前的流程把数据拿出来：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nrow_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-07-23\"</span><span class=\"token punctuation\">)</span>\ncolumn_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New deaths\"</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>row_idx<span class=\"token punctuation\">,</span>column_idx<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2020 年 7 月 23 日的新增死亡数是:\"</span><span class=\"token punctuation\">,</span>result<span class=\"token punctuation\">)</span></code></pre>\n\n<h2 id=\"总增长数\"><a href=\"#总增长数\" class=\"headerlink\" title=\"总增长数\"></a>总增长数</h2><ul>\n<li>从 1 月 25 日到 7 月 22 日，一共增长了多少确诊病例？</li>\n</ul>\n<p>​        获取数据都是小儿科，我们来点真正的数据分析。要基于原有的数据，进行多次加工，来获取新的结论和结果。在这个任务中，我们要进行一次累和的计算。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nrow1_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-01-25\"</span><span class=\"token punctuation\">)</span>\nrow2_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-07-22\"</span><span class=\"token punctuation\">)</span>\ncolumn_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New cases\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 注意要 row1_idx+1 得到从 01-25 这一天的新增</span>\n<span class=\"token comment\"># row2_idx+1 来包含 7 月 22 的结果</span>\nnew_cases <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>row1_idx<span class=\"token punctuation\">:</span>row2_idx<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>column_idx<span class=\"token punctuation\">]</span>\noverall <span class=\"token operator\">=</span> new_cases<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共新增：\"</span><span class=\"token punctuation\">,</span>overall<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        但这是通过将每日的新增进行求和，数据是不准确的，我们接下来按照累计确诊的个数计算</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">confirm_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"Confirmed\"</span><span class=\"token punctuation\">)</span>\nconfirmed <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>confirm_idx<span class=\"token punctuation\">]</span>\noverall2 <span class=\"token operator\">=</span> confirmed<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"另一版本的新增：\"</span><span class=\"token punctuation\">,</span>overall2<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">共新增： 15247802.0\n另一版本的新增： 15226291.0</code></pre>\n\n<p>​        可以看到，两个数据不一致，这是因为有人感染了不止一次，因此导致新增的数据里重复计算了，所以用新增数据计算的结果比累计确诊的方式来计算的要多。</p>\n<p>​        具体分析看看，具体是哪天的数据对不上，详细输出一下。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nrow1_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-01-25\"</span><span class=\"token punctuation\">)</span>\nrow2_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-07-22\"</span><span class=\"token punctuation\">)</span>\ncolumn_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New cases\"</span><span class=\"token punctuation\">)</span>\nconfirm_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"Confirmed\"</span><span class=\"token punctuation\">)</span>\nconfirmed <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>confirm_idx<span class=\"token punctuation\">]</span>\nnew_cases <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>column_idx<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>row1_idx<span class=\"token punctuation\">,</span>row2_idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    diff <span class=\"token operator\">=</span> new_cases<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>confirmed<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> confirmed<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> diff <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data index:\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span><span class=\"token string\">\"差异：\"</span><span class=\"token punctuation\">,</span>diff<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">data index: 62 差异： 15.0\ndata index: 81 差异： 21.0\n...\ndata index: 176 差异： 3.0\ndata index: 181 差异： 110.0</code></pre>\n\n<h2 id=\"确诊恢复比例\"><a href=\"#确诊恢复比例\" class=\"headerlink\" title=\"确诊恢复比例\"></a>确诊恢复比例</h2><ul>\n<li>每天新增确诊数和新恢复数的比例？平均比例，标准差各是多少？</li>\n</ul>\n<p>​        这一个任务，我们需要再计算计算，会要使用到 Numpy 的批量计算功能，首先确定要拿取到的数据是什么，然后再对这些数据进行计算。 按要求，我们要拿到新增确诊数（New cases），和新的恢复数（New recovered）,然后再相除，最后再计算平均值和标准差。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnew_cases_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New cases\"</span><span class=\"token punctuation\">)</span>\nnew_recovered_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New recovered\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#ratio</span>\nratio <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>new_cases_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>new_recovered_idx<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"比例样本：\"</span><span class=\"token punctuation\">,</span>ratio<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#比例样本： [         nan  49.5         47.83333333 164.33333333  52.61538462]</span></code></pre>\n\n<p>​        我靠，为什么有一个nan啊，nan在Numpy中表示的是 Not a Number， 说明计算有问题。我们单独打印一下，看看为什么出现 <code>nan</code>。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>new_cases_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>new_recovered_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.0</span>\n<span class=\"token comment\"># 0.0</span></code></pre>\n\n<p>​        原来是因为 <code>new_recovered_idx</code> 的第一个位置数据为 0，任何数除以 0 是不成立的，所以才会把这个计算给出一个 <code>nan</code> 的结果。 你看做数据分析还是挺有意思吧，会出现各种意想不到的状况。然后我们把 new_recovered 为零的数都剔除掉。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">not_zero_mask <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> new_recovered_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span>\nratio <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>not_zero_mask<span class=\"token punctuation\">,</span> new_cases_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> data<span class=\"token punctuation\">[</span>not_zero_mask<span class=\"token punctuation\">,</span> new_recovered_idx<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 平均比例, 标准差</span>\nratio_mean <span class=\"token operator\">=</span> ratio<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nratio_std <span class=\"token operator\">=</span> ratio<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"比例样本：\"</span><span class=\"token punctuation\">,</span>ratio<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"平均比例：\"</span><span class=\"token punctuation\">,</span> ratio_mean<span class=\"token punctuation\">,</span> <span class=\"token string\">\"；标准差：\"</span><span class=\"token punctuation\">,</span> ratio_std<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#比例样本： [ 49.5         47.83333333 164.33333333  52.61538462  89.88888889]</span>\n<span class=\"token comment\">#平均比例： 7.049556348053241 ；标准差： 19.094025710450307</span></code></pre>\n\n<p>​        得到计算结果后，我们还是能明显发现，被治好的人的确比新增的要多，这就说明，我们自己的存活率还是挺高的。</p>\n<h2 id=\"可视化数据\"><a href=\"#可视化数据\" class=\"headerlink\" title=\"可视化数据\"></a>可视化数据</h2><ul>\n<li>画图展示新增确诊的变化曲线</li>\n</ul>\n<p>​        有时候，光秃秃的数字并不能生动表现这些数字背后的规律。我们还可以把它画出来。至于如何画，我给你做了一个 <code>draw_line()</code> 的函数，这个函数的背后是 Python 的画图工具 <code>Matplotlib</code>. 不过在这个教程中，并不是重点，我会在<a href=\"https://mofanpy.com/learning-steps/\">之后的画图教程</a>中详细介绍。</p>\n<p>​        现在，我们就来做新增确诊的可视化数据吧。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">new_cases_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New cases\"</span><span class=\"token punctuation\">)</span>\ndraw_line<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> new_cases_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        画图部分省略</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>​        数据分析是一件非常有趣的事情。</p>\n","more":"<h1 id=\"疫情数据分析\"><a href=\"#疫情数据分析\" class=\"headerlink\" title=\"疫情数据分析\"></a>疫情数据分析</h1><h2 id=\"数据下载\"><a href=\"#数据下载\" class=\"headerlink\" title=\"数据下载\"></a>数据下载</h2><p>​        2020年1月22日到2020年7月27日的数据<a href=\"https://pan.baidu.com/s/1HX83ebLmbcGJmf5ErXZiVg\">下载链接</a>：提取码：5mrb</p>\n<h2 id=\"加载数据\"><a href=\"#加载数据\" class=\"headerlink\" title=\"加载数据\"></a>加载数据</h2><p>​        用下面的代码在你本地加载数据。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你下载的 day_wise.csv 数据\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ncovid <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"date\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"header\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>h <span class=\"token keyword\">for</span> h <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    split_row <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>\n    covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>split_row<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> split_row<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        确保你的文件引入正确</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 数据</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 数据太多了，我先打 5 行</span>\n<span class=\"token comment\"># print(covid[\"data\"]) # 如果你实在想看全部，就执行这一行</span>\n<span class=\"token comment\"># 日期数据</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 数据太多了，我先打 5 行</span>\n<span class=\"token comment\"># print(covid[\"date\"]) # 如果你实在想看全部，就执行这一行</span></code></pre>\n\n<p>​        了解了数据的大概样子，那么来使用你所学到的 Numpy 技能，我们来分析下面这几个问题。</p>\n<ol>\n<li>获取 2020 年 2 月 3 日的所有数据</li>\n<li>2020 年 1 月 24 日之前的累积确诊病例有多少个？</li>\n<li>2020 年 7 月 23 日的新增死亡数是多少？</li>\n<li>从 1 月 25 日到 7 月 22 日，一共增长了多少确诊病例？</li>\n<li>每天新增确诊数和新恢复数的比例？平均比例，标准差各是多少？</li>\n<li>画图展示新增确诊的变化曲线</li>\n<li>画图展示死亡率的变化曲线</li>\n</ol>\n<h2 id=\"某日所有数据\"><a href=\"#某日所有数据\" class=\"headerlink\" title=\"某日所有数据\"></a>某日所有数据</h2><ul>\n<li>获取 2020 年 2 月 3 日的所有数据</li>\n</ul>\n<p>​        解决这个问题之前，我们需要搞懂使用Numpy获取到特定数据的时候，数据的索引是什么。在Numpy中，我们用来索引的大概率是数字，所以我们得搞清楚对应的数字标号是什么。因为我在为你准备的covid数据中，把日期和标题都用Python列表装起来了，所以你可以通过<code>.index(&quot;xxx&quot;)</code>功能来获取到它的索引。</p>\n<p>​        我们需要思考的是：找到这一天所对应的索引。还好我已经把日期都用列表给存储起来了。看看日期的存储方式。将日期转换成<code>date_idx</code>之后，我们就能用这个index来获取到那一天的全部数据了。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"日期列表摘取：\"</span><span class=\"token punctuation\">,</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ndate_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-02-03\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"日期->索引转换：\"</span><span class=\"token punctuation\">,</span> date_idx<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> header<span class=\"token punctuation\">,</span> number <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">[</span>date_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">,</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span>\n</code></pre>\n\n<p>​        至于，这些人数为什么会是一个小数呢？因为 Numpy 在存储一批数据的时候，它会把数据都存成一个模式，在这套数据中，我们都是以小数（float64）的形式存储的， 所以你才会看到有小数点。</p>\n<h2 id=\"累计确诊\"><a href=\"#累计确诊\" class=\"headerlink\" title=\"累计确诊\"></a>累计确诊</h2><ul>\n<li>2020 年 1 月 24 日之前的累积确诊病例有多少个？</li>\n</ul>\n<p>​        有了上一个任务的基础，这个任务我们就更加细致地去获取某个具体的数值，我们确定完日期（row）的 index 之后，再确定标题 （column）的 index。 在这个案例中，我们要确定累积确诊数（Conformed）的索引。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">row_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-01-24\"</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 获取日期索引</span>\ncolumn_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"Confirmed\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 获取标题的索引</span>\nconfirmed0124 <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>row_idx<span class=\"token punctuation\">,</span> column_idx<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"截止 1 月 24 日的累积确诊数：\"</span><span class=\"token punctuation\">,</span> confirmed0124<span class=\"token punctuation\">)</span></code></pre>\n\n<h2 id=\"新增死亡\"><a href=\"#新增死亡\" class=\"headerlink\" title=\"新增死亡\"></a>新增死亡</h2><ul>\n<li>2020年7月23日的新增死亡数是多少？</li>\n</ul>\n<p>​        这还是一个在Numpy Array中选取数据的过程，我们要搞清楚具体的索引是什么。”New deaths”对应的就是新增死亡数，按照之前的流程把数据拿出来：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nrow_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-07-23\"</span><span class=\"token punctuation\">)</span>\ncolumn_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New deaths\"</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>row_idx<span class=\"token punctuation\">,</span>column_idx<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2020 年 7 月 23 日的新增死亡数是:\"</span><span class=\"token punctuation\">,</span>result<span class=\"token punctuation\">)</span></code></pre>\n\n<h2 id=\"总增长数\"><a href=\"#总增长数\" class=\"headerlink\" title=\"总增长数\"></a>总增长数</h2><ul>\n<li>从 1 月 25 日到 7 月 22 日，一共增长了多少确诊病例？</li>\n</ul>\n<p>​        获取数据都是小儿科，我们来点真正的数据分析。要基于原有的数据，进行多次加工，来获取新的结论和结果。在这个任务中，我们要进行一次累和的计算。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nrow1_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-01-25\"</span><span class=\"token punctuation\">)</span>\nrow2_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-07-22\"</span><span class=\"token punctuation\">)</span>\ncolumn_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New cases\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 注意要 row1_idx+1 得到从 01-25 这一天的新增</span>\n<span class=\"token comment\"># row2_idx+1 来包含 7 月 22 的结果</span>\nnew_cases <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>row1_idx<span class=\"token punctuation\">:</span>row2_idx<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>column_idx<span class=\"token punctuation\">]</span>\noverall <span class=\"token operator\">=</span> new_cases<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共新增：\"</span><span class=\"token punctuation\">,</span>overall<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        但这是通过将每日的新增进行求和，数据是不准确的，我们接下来按照累计确诊的个数计算</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">confirm_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"Confirmed\"</span><span class=\"token punctuation\">)</span>\nconfirmed <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>confirm_idx<span class=\"token punctuation\">]</span>\noverall2 <span class=\"token operator\">=</span> confirmed<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"另一版本的新增：\"</span><span class=\"token punctuation\">,</span>overall2<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">共新增： 15247802.0\n另一版本的新增： 15226291.0</code></pre>\n\n<p>​        可以看到，两个数据不一致，这是因为有人感染了不止一次，因此导致新增的数据里重复计算了，所以用新增数据计算的结果比累计确诊的方式来计算的要多。</p>\n<p>​        具体分析看看，具体是哪天的数据对不上，详细输出一下。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nrow1_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-01-25\"</span><span class=\"token punctuation\">)</span>\nrow2_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"2020-07-22\"</span><span class=\"token punctuation\">)</span>\ncolumn_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New cases\"</span><span class=\"token punctuation\">)</span>\nconfirm_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"Confirmed\"</span><span class=\"token punctuation\">)</span>\nconfirmed <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>confirm_idx<span class=\"token punctuation\">]</span>\nnew_cases <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>column_idx<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>row1_idx<span class=\"token punctuation\">,</span>row2_idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    diff <span class=\"token operator\">=</span> new_cases<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>confirmed<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> confirmed<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> diff <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data index:\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span><span class=\"token string\">\"差异：\"</span><span class=\"token punctuation\">,</span>diff<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">data index: 62 差异： 15.0\ndata index: 81 差异： 21.0\n...\ndata index: 176 差异： 3.0\ndata index: 181 差异： 110.0</code></pre>\n\n<h2 id=\"确诊恢复比例\"><a href=\"#确诊恢复比例\" class=\"headerlink\" title=\"确诊恢复比例\"></a>确诊恢复比例</h2><ul>\n<li>每天新增确诊数和新恢复数的比例？平均比例，标准差各是多少？</li>\n</ul>\n<p>​        这一个任务，我们需要再计算计算，会要使用到 Numpy 的批量计算功能，首先确定要拿取到的数据是什么，然后再对这些数据进行计算。 按要求，我们要拿到新增确诊数（New cases），和新的恢复数（New recovered）,然后再相除，最后再计算平均值和标准差。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnew_cases_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New cases\"</span><span class=\"token punctuation\">)</span>\nnew_recovered_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New recovered\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#ratio</span>\nratio <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>new_cases_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span>new_recovered_idx<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"比例样本：\"</span><span class=\"token punctuation\">,</span>ratio<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#比例样本： [         nan  49.5         47.83333333 164.33333333  52.61538462]</span></code></pre>\n\n<p>​        我靠，为什么有一个nan啊，nan在Numpy中表示的是 Not a Number， 说明计算有问题。我们单独打印一下，看看为什么出现 <code>nan</code>。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>new_cases_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>new_recovered_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.0</span>\n<span class=\"token comment\"># 0.0</span></code></pre>\n\n<p>​        原来是因为 <code>new_recovered_idx</code> 的第一个位置数据为 0，任何数除以 0 是不成立的，所以才会把这个计算给出一个 <code>nan</code> 的结果。 你看做数据分析还是挺有意思吧，会出现各种意想不到的状况。然后我们把 new_recovered 为零的数都剔除掉。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">not_zero_mask <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> new_recovered_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span>\nratio <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>not_zero_mask<span class=\"token punctuation\">,</span> new_cases_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> data<span class=\"token punctuation\">[</span>not_zero_mask<span class=\"token punctuation\">,</span> new_recovered_idx<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 平均比例, 标准差</span>\nratio_mean <span class=\"token operator\">=</span> ratio<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nratio_std <span class=\"token operator\">=</span> ratio<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"比例样本：\"</span><span class=\"token punctuation\">,</span>ratio<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"平均比例：\"</span><span class=\"token punctuation\">,</span> ratio_mean<span class=\"token punctuation\">,</span> <span class=\"token string\">\"；标准差：\"</span><span class=\"token punctuation\">,</span> ratio_std<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#比例样本： [ 49.5         47.83333333 164.33333333  52.61538462  89.88888889]</span>\n<span class=\"token comment\">#平均比例： 7.049556348053241 ；标准差： 19.094025710450307</span></code></pre>\n\n<p>​        得到计算结果后，我们还是能明显发现，被治好的人的确比新增的要多，这就说明，我们自己的存活率还是挺高的。</p>\n<h2 id=\"可视化数据\"><a href=\"#可视化数据\" class=\"headerlink\" title=\"可视化数据\"></a>可视化数据</h2><ul>\n<li>画图展示新增确诊的变化曲线</li>\n</ul>\n<p>​        有时候，光秃秃的数字并不能生动表现这些数字背后的规律。我们还可以把它画出来。至于如何画，我给你做了一个 <code>draw_line()</code> 的函数，这个函数的背后是 Python 的画图工具 <code>Matplotlib</code>. 不过在这个教程中，并不是重点，我会在<a href=\"https://mofanpy.com/learning-steps/\">之后的画图教程</a>中详细介绍。</p>\n<p>​        现在，我们就来做新增确诊的可视化数据吧。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">new_cases_idx <span class=\"token operator\">=</span> covid<span class=\"token punctuation\">[</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"New cases\"</span><span class=\"token punctuation\">)</span>\ndraw_line<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> new_cases_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        画图部分省略</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>​        数据分析是一件非常有趣的事情。</p>","categories":[],"tags":[{"name":"python","path":"api/tags/python.json"},{"name":"机器学习基础","path":"api/tags/机器学习基础.json"}]}
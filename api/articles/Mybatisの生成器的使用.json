{"title":"Mybatisの生成器的使用","slug":"Mybatisの生成器的使用","date":"2020-04-21T13:26:29.000Z","updated":"2021-01-02T20:10:46.000Z","comments":true,"path":"api/articles/Mybatisの生成器的使用.json","excerpt":"Mybatis生成器的使用新建项目","covers":["https://gitee.com/mikutown/pic/raw/master/img/20200421215307.png","https://gitee.com/mikutown/pic/raw/master/img/20200421215325.png","https://gitee.com/mikutown/pic/raw/master/img/20200421215342.png","https://gitee.com/mikutown/pic/raw/master/img/20200421215357.png","https://gitee.com/mikutown/pic/raw/master/img/20200421215423.png","https://gitee.com/mikutown/pic/raw/master/img/20200421215439.png","https://gitee.com/mikutown/pic/raw/master/img/20200421215455.png"],"content":"<h1 id=\"Mybatis生成器的使用\"><a href=\"#Mybatis生成器的使用\" class=\"headerlink\" title=\"Mybatis生成器的使用\"></a>Mybatis生成器的使用</h1><h2 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h2><a id=\"more\"></a>\n\n<ul>\n<li>项目的目录结构如下<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215307.png\" loading=\"lazy\"><h3 id=\"配置pom-xml\"><a href=\"#配置pom-xml\" class=\"headerlink\" title=\"配置pom.xml\"></a>配置pom.xml</h3></li>\n</ul>\n<ol>\n<li>进入mybatis-generator官网:<a href=\"http://mybatis.org/generator/\">官网</a></li>\n<li>进入mybatis-generator通过maven运行的网站：<a href=\"http://mybatis.org/generator/running/runningWithMaven.html\">点击进入</a></li>\n<li>将网站中的maven代码复制粘贴到pom中去!（前提是要把所有的需要的depend都添加进去并且配好编译环境=-=）<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project</span> <span class=\"token attr-name\">...</span><span class=\"token punctuation\">></span></span>\n     ...\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span>\n       ...\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">></span></span>\n        ...\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis.generator<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-generator-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.4.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span>\n        ...\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">></span></span>\n      ...\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span>\n    ...\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>在generator插件中加入mysql的dependicy，因为generator需要连接数据库，如下：<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis.generator<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-generator-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.4.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token comment\">&lt;!--生成器的配置文件 在mybatis-generator官网找--></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configurationFile</span><span class=\"token punctuation\">></span></span>$&#123;basedir&#125;/src/main/resources/mybatis/generator/generatorConfig.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configurationFile</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token comment\">&lt;!--重复生成覆盖原来的文件，映射文件不可行，依然是追加的方式，所以Mybatis-generator 不能运行两次--></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>overwrite</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>overwrite</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>mysql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mysql-connector-java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;mysqlversion&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>因为在pom中同时引入了两个相同的mysql包，因此我们在控制mysql包版本的时候会很不方便=-=，此时应该怎么办呢？新建一个mysqlDriver的变量，然后将之前的5.1.48都替换成${mysqlDriver),如下：<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>java.version</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>java.version</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mysqlversion</span><span class=\"token punctuation\">></span></span>5.1.48<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mysqlversion</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>在pom中编写以下代码<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--生成器的配置文件 在mybatis-generator官网找--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configurationFile</span><span class=\"token punctuation\">></span></span>$&#123;basedir&#125;/src/main/resources/generatorConfig.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configurationFile</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--重复生成覆盖原来的文件，映射文件不可行，依然是追加的方式，所以Mybatis-generator 不能运行两次--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>overwrite</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>overwrite</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependicies</span><span class=\"token punctuation\">></span></span>...</code></pre>\n</li>\n</ol>\n<hr>\n<h3 id=\"配置generatorConfig-xml\"><a href=\"#配置generatorConfig-xml\" class=\"headerlink\" title=\"配置generatorConfig.xml\"></a>配置generatorConfig.xml</h3><ol>\n<li>因为已经定义了生成器的配置文件，所以要在${basedir}/src/main/resources/generatorConfig.xml路径中新建一个对应的xml文件<img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215325.png\" loading=\"lazy\"></li>\n<li>但是一般我们工程量比较大，配置文件容易弄混，因此新建一个文件夹把这个新建的xml文件放进去，一般直接建好文件夹然后再去看配置文件，文件中的路径自己变成了相应的路径（idea可真是智能啊qwq）<img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215342.png\" loading=\"lazy\"></li>\n<li>进入官网，有个generatorConfig.xml常用的例子:<a href=\"http://mybatis.org/generator/configreference/xmlconfig.html\">网页链接</a>直接复制以下代码到generatorConfig.xml中(具体代码以网页为准，因为网页会有更新)<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">generatorConfiguration</span>\n  <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"</span>\n  <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>generatorConfiguration</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>classPathEntry</span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/Program Files/IBM/SQLLIB/java/db2java.zip<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>context</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DB2Tables<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetRuntime</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MyBatis3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>jdbcConnection</span> <span class=\"token attr-name\">driverClass</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>COM.ibm.db2.jdbc.app.DB2Driver<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">connectionURL</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc:db2:TEST<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">userId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>db2admin<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">password</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>db2admin<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>jdbcConnection</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>javaTypeResolver</span> <span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>forceBigDecimals<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>javaTypeResolver</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>javaModelGenerator</span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test.model<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\\MBGTestProject\\src<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>trimStrings<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>javaModelGenerator</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sqlMapGenerator</span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test.xml<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\\MBGTestProject\\src<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sqlMapGenerator</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>javaClientGenerator</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>XMLMAPPER<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test.dao<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\\MBGTestProject\\src<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>javaClientGenerator</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">schema</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DB2ADMIN<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tableName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ALLTYPES<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">domainObjectName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Customer<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>useActualColumnNames<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>generatedKey</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ID<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">sqlStatement</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DB2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">identity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>columnOverride</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DATE_FIELD<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>startDate<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ignoreColumn</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FRED<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>columnOverride</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LONG_VARCHAR_FIELD<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">jdbcType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>VARCHAR<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>context</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>generatorConfiguration</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>此时第一次加载会显示有一个dtd标红，fetch一下就好了，dtd正常显示可以多很多代码提示</li>\n<li>此时开始修改配置文件，删除整行都用commond+x，删除第7行的db2语句，修改第8行的id为MysqlTables，然后在下面设置jdbc连接的driver，username，password等参数，也可以将这些信息配置在pom文件中，但是不推荐<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>jdbcConnection</span> <span class=\"token attr-name\">driverClass</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.mysql.jdbc.Driver<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">connectionURL</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc:mysql://127.0.0.1:3306/mybatisdemo<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">userId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">password</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>jdbcConnection</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>修改实体类的位置，映射文件的位置，Dao接口的位置<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!--2.实体类的位置--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>javaModelGenerator</span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top.leafii.mybatisgenerator.domain<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>src/main/java<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>trimStrings<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>javaModelGenerator</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!--3.映射文件的位置--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sqlMapGenerator</span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top.leafii.mybatisgenerator.mapper<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>src/main/java<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sqlMapGenerator</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!--4.Dao接口的位置--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>javaClientGenerator</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>XMLMAPPER<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top.leafii.mybatisgenerator.mapper<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>src/main/java<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>javaClientGenerator</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>添加目标表的table标签<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">tableName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">domainObjectName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3 id=\"运行mybatis-generator\"><a href=\"#运行mybatis-generator\" class=\"headerlink\" title=\"运行mybatis-generator\"></a>运行mybatis-generator</h3></li>\n</ol>\n<ul>\n<li>点击右侧的Maven工具栏，点击mybatis-generator的build,此时运行显示运行成功<pre class=\"language-none\"><code class=\"language-none\">&#x2F;Library&#x2F;Java&#x2F;JavaVirtualMachines&#x2F;jdk1.8.0_221.jdk&#x2F;Contents&#x2F;Home&#x2F;bin&#x2F;java -Dmaven.multiModuleProjectDirectory&#x3D;&#x2F;Users&#x2F;leafii&#x2F;Documents&#x2F;JavaWeb&#x2F;mybatis_generator -Dmaven.home&#x3D;&#x2F;Users&#x2F;leafii&#x2F;maven&#x2F;apache-maven-3.6.2 -Dclassworlds.conf&#x3D;&#x2F;Users&#x2F;leafii&#x2F;maven&#x2F;apache-maven-3.6.2&#x2F;bin&#x2F;m2.conf &quot;-Dmaven.ext.class.path&#x3D;&#x2F;Applications&#x2F;IntelliJ IDEA.app&#x2F;Contents&#x2F;plugins&#x2F;maven&#x2F;lib&#x2F;maven-event-listener.jar&quot; &quot;-javaagent:&#x2F;Applications&#x2F;IntelliJ IDEA.app&#x2F;Contents&#x2F;lib&#x2F;idea_rt.jar&#x3D;61532:&#x2F;Applications&#x2F;IntelliJ IDEA.app&#x2F;Contents&#x2F;bin&quot; -Dfile.encoding&#x3D;UTF-8 -classpath &#x2F;Users&#x2F;leafii&#x2F;maven&#x2F;apache-maven-3.6.2&#x2F;boot&#x2F;plexus-classworlds-2.6.0.jar org.codehaus.classworlds.Launcher -Didea.version2019.2.4 -s &#x2F;Users&#x2F;leafii&#x2F;maven&#x2F;apache-maven-3.6.2&#x2F;conf&#x2F;settings.xml org.mybatis.generator:mybatis-generator-maven-plugin:1.3.7:generate\n[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for leafii.top:mybatis_generator:jar:1.0-SNAPSHOT\n[WARNING] &#39;build.plugins.plugin.version&#39; for org.apache.maven.plugins:maven-compiler-plugin is missing. @ line 58, column 21\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] --------------------&lt; leafii.top:mybatis_generator &gt;--------------------\n[INFO] Building mybatis_generator 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- mybatis-generator-maven-plugin:1.3.7:generate (default-cli) @ mybatis_generator ---\nWed Nov 13 09:59:14 CST 2019 WARN: Establishing SSL connection without server&#39;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&#39;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &#39;false&#39;. You need either to explicitly disable SSL by setting useSSL&#x3D;false, or set useSSL&#x3D;true and provide truststore for server certificate verification.\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.885 s\n[INFO] Finished at: 2019-11-13T09:59:14+08:00\n[INFO] ------------------------------------------------------------------------</code></pre>\n<h3 id=\"生成器优化\"><a href=\"#生成器优化\" class=\"headerlink\" title=\"生成器优化\"></a>生成器优化</h3></li>\n</ul>\n<ol>\n<li>此时打开生成的代码发现里面很多没用的注释，怎么办呢？可以通过修改generatorConfig.xml进行设置默认不添加注释，默认参数在这里寻找：<a href=\"http://mybatis.org/generator/configreference/commentGenerator.html\">网页链接</a><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215357.png\" loading=\"lazy\"><pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>commentGenerator</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>suppressAllComments<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>commentGenerator</span><span class=\"token punctuation\">></span></span></code></pre>\n插入位置为<img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215423.png\" loading=\"lazy\"></li>\n<li>如果不删除已经生成的实体类和接口还有xml，直接重新生成，会发现实体类和接口被重写了，但是xml文件没有被覆盖而是直接被追加了，也就是说把之前的代码追加在源文件里了（代码行数直接加倍了）</li>\n<li>在table部分修改xml代码如下，可以让生成的代码更加简洁，主要的功能还是需要我们自己去手写.<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">tableName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">domainObjectName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enableUpdateByExample</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enableSelectByExample</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enableCountByExample</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enableDeleteByExample</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre>\n<h3 id=\"Mybatis-generator代码的使用\"><a href=\"#Mybatis-generator代码的使用\" class=\"headerlink\" title=\"Mybatis-generator代码的使用\"></a>Mybatis-generator代码的使用</h3></li>\n<li>删除刚刚修改的table中添加的false选项的那几个代码，以便生成器生成功能全面的代码，点击build，生成代码</li>\n<li>打开UserMapper.java，按下commond+shift+T 设置JUNIT4，新建junit单元测试类，选择所有方法<img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215439.png\" loading=\"lazy\"></li>\n<li>在测试类中编写@Before和@After代码<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Before</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//读取资源文件</span>\n         inputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cfg/mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//创建SqlSessionFactory</span>\n         <span class=\"token class-name\">SqlSessionFactory</span> sqlSessionFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取SqlSession</span>\n         sqlSession <span class=\"token operator\">=</span> sqlSessionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//通过SqlSession进行crud操作</span>\n         userMapper <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@After</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">tearDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sqlSession<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n</code></pre></li>\n<li>进入第一个测试类,运行时记得一定要修改相关的配置文件，记得修改log4j配置文件中UserMapper的正确路径，一定要在mybatis.config.xml中正确映射UserMapper.xml，否则无法运行！<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">countByExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">long</span> count <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">countByExample</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre>\n执行结果：<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select count(*) from user \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: \nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: count(*)\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 1\n5</code></pre>\n<h3 id=\"关于UserExample\"><a href=\"#关于UserExample\" class=\"headerlink\" title=\"关于UserExample\"></a>关于UserExample</h3></li>\n</ol>\n<ul>\n<li>UserExample大多数时候是作为筛选条件=-=<h4 id=\"0-引子\"><a href=\"#0-引子\" class=\"headerlink\" title=\"0.引子\"></a>0.引子</h4></li>\n<li>在测试类里也可以使用UserExample类<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">countByExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">UserExample</span> userExample <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">long</span> count <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">countByExample</span><span class=\"token punctuation\">(</span>userExample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//若countByExample(null)则为查询全部</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select count(*) from user \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: \nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: count(*)\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 1\n5</code></pre>\n<h4 id=\"0-5-以下两个方法实现了相同的删除功能\"><a href=\"#0-5-以下两个方法实现了相同的删除功能\" class=\"headerlink\" title=\"0.5 以下两个方法实现了相同的删除功能\"></a>0.5 以下两个方法实现了相同的删除功能</h4><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteByExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">UserExample</span> userExample <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userExample<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">andIdEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteByExample</span><span class=\"token punctuation\">(</span>userExample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteByPrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteByPrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>*自动生成的代码不能实现批量删除=-= 我们自己写一个**</li>\n<li>Mapper.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> <span class=\"token function\">deleteByPrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//删除一个    </span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">deleteByPrimaryKeys</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ids\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//批量删除(Integer... id)写了之后就可以实现批量删除</span></code></pre></li>\n<li>Mapper.xml<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>delete</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deleteByPrimaryKeys<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n   delete from user\n   where id in <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>foreach</span> <span class=\"token attr-name\">collection</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ids<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">separator</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>,<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">open</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">close</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n   #&#123;id&#125;\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>foreach</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>delete</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>Test.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteByPrimaryKeys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteByPrimaryKeys</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: delete from user where id in ( ? , ? , ? , ? , ? ) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 1(Integer), 2(Integer), 3(Integer), 4(Integer), 5(Integer)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 4</code></pre>\n<h4 id=\"1-简单查询\"><a href=\"#1-简单查询\" class=\"headerlink\" title=\"1.简单查询\"></a>1.简单查询</h4><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//查询性别为“1”且address为上海的人</span>\n<span class=\"token class-name\">UserExample</span> userExample <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UserExample<span class=\"token punctuation\">.</span>Criteria</span> criteria <span class=\"token operator\">=</span> userExample<span class=\"token punctuation\">.</span><span class=\"token function\">createCriteria</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        criteria<span class=\"token punctuation\">.</span><span class=\"token function\">andAddressEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        criteria<span class=\"token punctuation\">.</span><span class=\"token function\">andSexEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectByExample</span><span class=\"token punctuation\">(</span>userExample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> u <span class=\"token operator\">:</span>\n                users<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username, birthday, sex, address from user WHERE ( address &#x3D; ? and sex &#x3D; ? ) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 上海(String), 1(String)\nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5, 王八, 2018-07-10, 1, 上海\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 1\nUser&#123;id&#x3D;5, username&#x3D;&#39;王八&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;上海&#39;&#125;</code></pre>\n<h4 id=\"2-复杂查询\"><a href=\"#2-复杂查询\" class=\"headerlink\" title=\"2.复杂查询\"></a>2.复杂查询</h4><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//查询address为北京或广州且sex为0的人</span>\n<span class=\"token class-name\">UserExample</span> userExample <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UserExample<span class=\"token punctuation\">.</span>Criteria</span> criteria <span class=\"token operator\">=</span> userExample<span class=\"token punctuation\">.</span><span class=\"token function\">createCriteria</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        criteria<span class=\"token punctuation\">.</span><span class=\"token function\">andAddressIn</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"广州\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">andSexEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectByExample</span><span class=\"token punctuation\">(</span>userExample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> u <span class=\"token operator\">:</span>\n                users<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username, birthday, sex, address from user WHERE ( address in ( ? , ? ) and sex &#x3D; ? ) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 上海(String), 广州(String), 0(String)\nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 2, 李四, 2018-07-10, 0, 上海\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 1\nUser&#123;id&#x3D;2, username&#x3D;&#39;李四&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;0&#39;, address&#x3D;&#39;上海&#39;&#125;</code></pre></li>\n<li>*注：userExample.createCriteria()与userExample.or()是等价的**</li>\n</ul>\n<h4 id=\"3-插入用户\"><a href=\"#3-插入用户\" class=\"headerlink\" title=\"3.插入用户\"></a>3.插入用户</h4><ul>\n<li>Test.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hjkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"青城山\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setBirthday</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insertSelective</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n以上的insert()和insertSelective()方法的区别在于，insert方法会直接将未设置的属性插入到数据库中，值为null，但是如果使用insertSelective方法，就不会插入那个属性，不会传值过去 可以看看运行结果：<br>insert：<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: insert into user (id, username, birthday, sex, address) values (?, ?, ?, ?, ?) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: null, hjkx(String), 2019-11-13(Date), null, 青城山(String)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 1</code></pre>\ninsertSelective<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: insert into user ( username, birthday, address ) values ( ?, ?, ? ) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: hjkx(String), 2019-11-13(Date), 青城山(String)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 1</code></pre>\n看看数据库：<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215455.png\" loading=\"lazy\"><br>原因是设置表格时sex的默认值为null，所以成了这样</li>\n</ul>\n<p><strong>总结：插入时使用insert而不是insertSelective</strong></p>\n<h4 id=\"4-更新性别\"><a href=\"#4-更新性别\" class=\"headerlink\" title=\"4.更新性别\"></a>4.更新性别</h4><ul>\n<li>将目标用户的属性修改</li>\n<li>Test.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateByPrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"垃圾\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"青城山\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setBirthday</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">updateByPrimaryKey</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: update user set username &#x3D; ?, birthday &#x3D; ?, sex &#x3D; ?, address &#x3D; ? where id &#x3D; ? \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 垃圾(String), 2019-11-13(Date), 1(String), 青城山(String), 27(Integer)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 1</code></pre></li>\n<li>*如果更新不要用这个方法，很危险，如果只设置了需要更新的字段，那么其他字段会变成null,应该使用updateByPrimaryKeySelective,这样只需要设置需要修改的字段和主键的值就可以**<br>Test.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateByPrimaryKeySelective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">updateByPrimaryKeySelective</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: update user SET sex &#x3D; ? where id &#x3D; ? \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 1(String), 27(Integer)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 1</code></pre>\n<h3 id=\"3-复杂更新\"><a href=\"#3-复杂更新\" class=\"headerlink\" title=\"3.复杂更新\"></a>3.复杂更新</h3></li>\n<li>Test.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateByExampleSelective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">UserExample</span> userExample <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userExample<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">andAddressEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">andSexEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//条件</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"乌鲁木齐\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//要更新的user</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">updateByExampleSelective</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span>userExample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: update user SET sex &#x3D; ?, address &#x3D; ? WHERE ( address &#x3D; ? and sex &#x3D; ? ) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 1(String), 乌鲁木齐(String), 上海(String), 0(String)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 2</code></pre>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3></li>\n<li>*插入数据时，使用insert方法，所有数据统统insert**</li>\n<li>*更新数据时，大部分情况使用updateByPrimaryKeySelective方法，无需设置无关字段，不会修改原来的值**</li>\n</ul>\n","more":"<ul>\n<li>项目的目录结构如下<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215307.png\"><h3 id=\"配置pom-xml\"><a href=\"#配置pom-xml\" class=\"headerlink\" title=\"配置pom.xml\"></a>配置pom.xml</h3></li>\n</ul>\n<ol>\n<li>进入mybatis-generator官网:<a href=\"http://mybatis.org/generator/\">官网</a></li>\n<li>进入mybatis-generator通过maven运行的网站：<a href=\"http://mybatis.org/generator/running/runningWithMaven.html\">点击进入</a></li>\n<li>将网站中的maven代码复制粘贴到pom中去!（前提是要把所有的需要的depend都添加进去并且配好编译环境=-=）<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project</span> <span class=\"token attr-name\">...</span><span class=\"token punctuation\">></span></span>\n     ...\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span>\n       ...\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">></span></span>\n        ...\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis.generator<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-generator-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.4.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span>\n        ...\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">></span></span>\n      ...\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span>\n    ...\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>在generator插件中加入mysql的dependicy，因为generator需要连接数据库，如下：<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis.generator<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-generator-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.4.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token comment\">&lt;!--生成器的配置文件 在mybatis-generator官网找--></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configurationFile</span><span class=\"token punctuation\">></span></span>$&#123;basedir&#125;/src/main/resources/mybatis/generator/generatorConfig.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configurationFile</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token comment\">&lt;!--重复生成覆盖原来的文件，映射文件不可行，依然是追加的方式，所以Mybatis-generator 不能运行两次--></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>overwrite</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>overwrite</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>mysql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mysql-connector-java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n                        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>$&#123;mysqlversion&#125;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>因为在pom中同时引入了两个相同的mysql包，因此我们在控制mysql包版本的时候会很不方便=-=，此时应该怎么办呢？新建一个mysqlDriver的变量，然后将之前的5.1.48都替换成${mysqlDriver),如下：<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>java.version</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>java.version</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mysqlversion</span><span class=\"token punctuation\">></span></span>5.1.48<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mysqlversion</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>在pom中编写以下代码<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--生成器的配置文件 在mybatis-generator官网找--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configurationFile</span><span class=\"token punctuation\">></span></span>$&#123;basedir&#125;/src/main/resources/generatorConfig.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configurationFile</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--重复生成覆盖原来的文件，映射文件不可行，依然是追加的方式，所以Mybatis-generator 不能运行两次--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>overwrite</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>overwrite</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependicies</span><span class=\"token punctuation\">></span></span>...</code></pre>\n</li>\n</ol>\n<hr>\n<h3 id=\"配置generatorConfig-xml\"><a href=\"#配置generatorConfig-xml\" class=\"headerlink\" title=\"配置generatorConfig.xml\"></a>配置generatorConfig.xml</h3><ol>\n<li>因为已经定义了生成器的配置文件，所以要在${basedir}/src/main/resources/generatorConfig.xml路径中新建一个对应的xml文件<img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215325.png\"></li>\n<li>但是一般我们工程量比较大，配置文件容易弄混，因此新建一个文件夹把这个新建的xml文件放进去，一般直接建好文件夹然后再去看配置文件，文件中的路径自己变成了相应的路径（idea可真是智能啊qwq）<img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215342.png\"></li>\n<li>进入官网，有个generatorConfig.xml常用的例子:<a href=\"http://mybatis.org/generator/configreference/xmlconfig.html\">网页链接</a>直接复制以下代码到generatorConfig.xml中(具体代码以网页为准，因为网页会有更新)<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">generatorConfiguration</span>\n  <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"</span>\n  <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>generatorConfiguration</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>classPathEntry</span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/Program Files/IBM/SQLLIB/java/db2java.zip<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>context</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DB2Tables<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetRuntime</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MyBatis3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>jdbcConnection</span> <span class=\"token attr-name\">driverClass</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>COM.ibm.db2.jdbc.app.DB2Driver<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">connectionURL</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc:db2:TEST<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">userId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>db2admin<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">password</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>db2admin<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>jdbcConnection</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>javaTypeResolver</span> <span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>forceBigDecimals<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>javaTypeResolver</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>javaModelGenerator</span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test.model<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\\MBGTestProject\\src<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>trimStrings<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>javaModelGenerator</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sqlMapGenerator</span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test.xml<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\\MBGTestProject\\src<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sqlMapGenerator</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>javaClientGenerator</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>XMLMAPPER<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test.dao<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\\MBGTestProject\\src<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>javaClientGenerator</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">schema</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DB2ADMIN<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tableName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ALLTYPES<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">domainObjectName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Customer<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>useActualColumnNames<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>generatedKey</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ID<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">sqlStatement</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DB2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">identity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>columnOverride</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DATE_FIELD<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>startDate<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ignoreColumn</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FRED<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>columnOverride</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LONG_VARCHAR_FIELD<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">jdbcType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>VARCHAR<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>context</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>generatorConfiguration</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>此时第一次加载会显示有一个dtd标红，fetch一下就好了，dtd正常显示可以多很多代码提示</li>\n<li>此时开始修改配置文件，删除整行都用commond+x，删除第7行的db2语句，修改第8行的id为MysqlTables，然后在下面设置jdbc连接的driver，username，password等参数，也可以将这些信息配置在pom文件中，但是不推荐<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>jdbcConnection</span> <span class=\"token attr-name\">driverClass</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.mysql.jdbc.Driver<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">connectionURL</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc:mysql://127.0.0.1:3306/mybatisdemo<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">userId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span>\n                        <span class=\"token attr-name\">password</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>jdbcConnection</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>修改实体类的位置，映射文件的位置，Dao接口的位置<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!--2.实体类的位置--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>javaModelGenerator</span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top.leafii.mybatisgenerator.domain<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>src/main/java<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>trimStrings<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>javaModelGenerator</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!--3.映射文件的位置--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sqlMapGenerator</span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top.leafii.mybatisgenerator.mapper<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>src/main/java<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sqlMapGenerator</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!--4.Dao接口的位置--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>javaClientGenerator</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>XMLMAPPER<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">targetPackage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top.leafii.mybatisgenerator.mapper<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">targetProject</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>src/main/java<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>enableSubPackages<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>javaClientGenerator</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>添加目标表的table标签<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">tableName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">domainObjectName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3 id=\"运行mybatis-generator\"><a href=\"#运行mybatis-generator\" class=\"headerlink\" title=\"运行mybatis-generator\"></a>运行mybatis-generator</h3></li>\n</ol>\n<ul>\n<li>点击右侧的Maven工具栏，点击mybatis-generator的build,此时运行显示运行成功<pre class=\"language-none\"><code class=\"language-none\">&#x2F;Library&#x2F;Java&#x2F;JavaVirtualMachines&#x2F;jdk1.8.0_221.jdk&#x2F;Contents&#x2F;Home&#x2F;bin&#x2F;java -Dmaven.multiModuleProjectDirectory&#x3D;&#x2F;Users&#x2F;leafii&#x2F;Documents&#x2F;JavaWeb&#x2F;mybatis_generator -Dmaven.home&#x3D;&#x2F;Users&#x2F;leafii&#x2F;maven&#x2F;apache-maven-3.6.2 -Dclassworlds.conf&#x3D;&#x2F;Users&#x2F;leafii&#x2F;maven&#x2F;apache-maven-3.6.2&#x2F;bin&#x2F;m2.conf &quot;-Dmaven.ext.class.path&#x3D;&#x2F;Applications&#x2F;IntelliJ IDEA.app&#x2F;Contents&#x2F;plugins&#x2F;maven&#x2F;lib&#x2F;maven-event-listener.jar&quot; &quot;-javaagent:&#x2F;Applications&#x2F;IntelliJ IDEA.app&#x2F;Contents&#x2F;lib&#x2F;idea_rt.jar&#x3D;61532:&#x2F;Applications&#x2F;IntelliJ IDEA.app&#x2F;Contents&#x2F;bin&quot; -Dfile.encoding&#x3D;UTF-8 -classpath &#x2F;Users&#x2F;leafii&#x2F;maven&#x2F;apache-maven-3.6.2&#x2F;boot&#x2F;plexus-classworlds-2.6.0.jar org.codehaus.classworlds.Launcher -Didea.version2019.2.4 -s &#x2F;Users&#x2F;leafii&#x2F;maven&#x2F;apache-maven-3.6.2&#x2F;conf&#x2F;settings.xml org.mybatis.generator:mybatis-generator-maven-plugin:1.3.7:generate\n[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for leafii.top:mybatis_generator:jar:1.0-SNAPSHOT\n[WARNING] &#39;build.plugins.plugin.version&#39; for org.apache.maven.plugins:maven-compiler-plugin is missing. @ line 58, column 21\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] --------------------&lt; leafii.top:mybatis_generator &gt;--------------------\n[INFO] Building mybatis_generator 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- mybatis-generator-maven-plugin:1.3.7:generate (default-cli) @ mybatis_generator ---\nWed Nov 13 09:59:14 CST 2019 WARN: Establishing SSL connection without server&#39;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&#39;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &#39;false&#39;. You need either to explicitly disable SSL by setting useSSL&#x3D;false, or set useSSL&#x3D;true and provide truststore for server certificate verification.\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.885 s\n[INFO] Finished at: 2019-11-13T09:59:14+08:00\n[INFO] ------------------------------------------------------------------------</code></pre>\n<h3 id=\"生成器优化\"><a href=\"#生成器优化\" class=\"headerlink\" title=\"生成器优化\"></a>生成器优化</h3></li>\n</ul>\n<ol>\n<li>此时打开生成的代码发现里面很多没用的注释，怎么办呢？可以通过修改generatorConfig.xml进行设置默认不添加注释，默认参数在这里寻找：<a href=\"http://mybatis.org/generator/configreference/commentGenerator.html\">网页链接</a><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215357.png\"><pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>commentGenerator</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>suppressAllComments<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>commentGenerator</span><span class=\"token punctuation\">></span></span></code></pre>\n插入位置为<img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215423.png\"></li>\n<li>如果不删除已经生成的实体类和接口还有xml，直接重新生成，会发现实体类和接口被重写了，但是xml文件没有被覆盖而是直接被追加了，也就是说把之前的代码追加在源文件里了（代码行数直接加倍了）</li>\n<li>在table部分修改xml代码如下，可以让生成的代码更加简洁，主要的功能还是需要我们自己去手写.<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">tableName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">domainObjectName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>User<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enableUpdateByExample</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enableSelectByExample</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enableCountByExample</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enableDeleteByExample</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre>\n<h3 id=\"Mybatis-generator代码的使用\"><a href=\"#Mybatis-generator代码的使用\" class=\"headerlink\" title=\"Mybatis-generator代码的使用\"></a>Mybatis-generator代码的使用</h3></li>\n<li>删除刚刚修改的table中添加的false选项的那几个代码，以便生成器生成功能全面的代码，点击build，生成代码</li>\n<li>打开UserMapper.java，按下commond+shift+T 设置JUNIT4，新建junit单元测试类，选择所有方法<img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215439.png\"></li>\n<li>在测试类中编写@Before和@After代码<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Before</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//读取资源文件</span>\n         inputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cfg/mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//创建SqlSessionFactory</span>\n         <span class=\"token class-name\">SqlSessionFactory</span> sqlSessionFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取SqlSession</span>\n         sqlSession <span class=\"token operator\">=</span> sqlSessionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//通过SqlSession进行crud操作</span>\n         userMapper <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@After</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">tearDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sqlSession<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n</code></pre></li>\n<li>进入第一个测试类,运行时记得一定要修改相关的配置文件，记得修改log4j配置文件中UserMapper的正确路径，一定要在mybatis.config.xml中正确映射UserMapper.xml，否则无法运行！<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">countByExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">long</span> count <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">countByExample</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre>\n执行结果：<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select count(*) from user \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: \nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: count(*)\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 1\n5</code></pre>\n<h3 id=\"关于UserExample\"><a href=\"#关于UserExample\" class=\"headerlink\" title=\"关于UserExample\"></a>关于UserExample</h3></li>\n</ol>\n<ul>\n<li>UserExample大多数时候是作为筛选条件=-=<h4 id=\"0-引子\"><a href=\"#0-引子\" class=\"headerlink\" title=\"0.引子\"></a>0.引子</h4></li>\n<li>在测试类里也可以使用UserExample类<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">countByExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">UserExample</span> userExample <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">long</span> count <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">countByExample</span><span class=\"token punctuation\">(</span>userExample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//若countByExample(null)则为查询全部</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select count(*) from user \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: \nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: count(*)\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 1\n5</code></pre>\n<h4 id=\"0-5-以下两个方法实现了相同的删除功能\"><a href=\"#0-5-以下两个方法实现了相同的删除功能\" class=\"headerlink\" title=\"0.5 以下两个方法实现了相同的删除功能\"></a>0.5 以下两个方法实现了相同的删除功能</h4><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteByExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">UserExample</span> userExample <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userExample<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">andIdEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteByExample</span><span class=\"token punctuation\">(</span>userExample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteByPrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteByPrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>*自动生成的代码不能实现批量删除=-= 我们自己写一个**</li>\n<li>Mapper.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> <span class=\"token function\">deleteByPrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//删除一个    </span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">deleteByPrimaryKeys</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ids\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//批量删除(Integer... id)写了之后就可以实现批量删除</span></code></pre></li>\n<li>Mapper.xml<pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>delete</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deleteByPrimaryKeys<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n   delete from user\n   where id in <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>foreach</span> <span class=\"token attr-name\">collection</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ids<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">separator</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>,<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">open</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">close</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n   #&#123;id&#125;\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>foreach</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>delete</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>Test.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteByPrimaryKeys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteByPrimaryKeys</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: delete from user where id in ( ? , ? , ? , ? , ? ) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 1(Integer), 2(Integer), 3(Integer), 4(Integer), 5(Integer)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 4</code></pre>\n<h4 id=\"1-简单查询\"><a href=\"#1-简单查询\" class=\"headerlink\" title=\"1.简单查询\"></a>1.简单查询</h4><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//查询性别为“1”且address为上海的人</span>\n<span class=\"token class-name\">UserExample</span> userExample <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UserExample<span class=\"token punctuation\">.</span>Criteria</span> criteria <span class=\"token operator\">=</span> userExample<span class=\"token punctuation\">.</span><span class=\"token function\">createCriteria</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        criteria<span class=\"token punctuation\">.</span><span class=\"token function\">andAddressEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        criteria<span class=\"token punctuation\">.</span><span class=\"token function\">andSexEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectByExample</span><span class=\"token punctuation\">(</span>userExample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> u <span class=\"token operator\">:</span>\n                users<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username, birthday, sex, address from user WHERE ( address &#x3D; ? and sex &#x3D; ? ) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 上海(String), 1(String)\nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5, 王八, 2018-07-10, 1, 上海\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 1\nUser&#123;id&#x3D;5, username&#x3D;&#39;王八&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;上海&#39;&#125;</code></pre>\n<h4 id=\"2-复杂查询\"><a href=\"#2-复杂查询\" class=\"headerlink\" title=\"2.复杂查询\"></a>2.复杂查询</h4><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//查询address为北京或广州且sex为0的人</span>\n<span class=\"token class-name\">UserExample</span> userExample <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UserExample<span class=\"token punctuation\">.</span>Criteria</span> criteria <span class=\"token operator\">=</span> userExample<span class=\"token punctuation\">.</span><span class=\"token function\">createCriteria</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        criteria<span class=\"token punctuation\">.</span><span class=\"token function\">andAddressIn</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"广州\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">andSexEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectByExample</span><span class=\"token punctuation\">(</span>userExample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> u <span class=\"token operator\">:</span>\n                users<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username, birthday, sex, address from user WHERE ( address in ( ? , ? ) and sex &#x3D; ? ) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 上海(String), 广州(String), 0(String)\nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 2, 李四, 2018-07-10, 0, 上海\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 1\nUser&#123;id&#x3D;2, username&#x3D;&#39;李四&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;0&#39;, address&#x3D;&#39;上海&#39;&#125;</code></pre></li>\n<li>*注：userExample.createCriteria()与userExample.or()是等价的**</li>\n</ul>\n<h4 id=\"3-插入用户\"><a href=\"#3-插入用户\" class=\"headerlink\" title=\"3.插入用户\"></a>3.插入用户</h4><ul>\n<li>Test.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hjkx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"青城山\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setBirthday</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insertSelective</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n以上的insert()和insertSelective()方法的区别在于，insert方法会直接将未设置的属性插入到数据库中，值为null，但是如果使用insertSelective方法，就不会插入那个属性，不会传值过去 可以看看运行结果：<br>insert：<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: insert into user (id, username, birthday, sex, address) values (?, ?, ?, ?, ?) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: null, hjkx(String), 2019-11-13(Date), null, 青城山(String)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 1</code></pre>\ninsertSelective<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: insert into user ( username, birthday, address ) values ( ?, ?, ? ) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: hjkx(String), 2019-11-13(Date), 青城山(String)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 1</code></pre>\n看看数据库：<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200421215455.png\"><br>原因是设置表格时sex的默认值为null，所以成了这样</li>\n</ul>\n<p><strong>总结：插入时使用insert而不是insertSelective</strong></p>\n<h4 id=\"4-更新性别\"><a href=\"#4-更新性别\" class=\"headerlink\" title=\"4.更新性别\"></a>4.更新性别</h4><ul>\n<li>将目标用户的属性修改</li>\n<li>Test.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateByPrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"垃圾\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"青城山\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setBirthday</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">updateByPrimaryKey</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: update user set username &#x3D; ?, birthday &#x3D; ?, sex &#x3D; ?, address &#x3D; ? where id &#x3D; ? \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 垃圾(String), 2019-11-13(Date), 1(String), 青城山(String), 27(Integer)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 1</code></pre></li>\n<li>*如果更新不要用这个方法，很危险，如果只设置了需要更新的字段，那么其他字段会变成null,应该使用updateByPrimaryKeySelective,这样只需要设置需要修改的字段和主键的值就可以**<br>Test.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateByPrimaryKeySelective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">updateByPrimaryKeySelective</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: update user SET sex &#x3D; ? where id &#x3D; ? \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 1(String), 27(Integer)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 1</code></pre>\n<h3 id=\"3-复杂更新\"><a href=\"#3-复杂更新\" class=\"headerlink\" title=\"3.复杂更新\"></a>3.复杂更新</h3></li>\n<li>Test.java<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateByExampleSelective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">UserExample</span> userExample <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userExample<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">andAddressEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上海\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">andSexEqualTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//条件</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"乌鲁木齐\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//要更新的user</span>\n        userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">updateByExampleSelective</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span>userExample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: update user SET sex &#x3D; ?, address &#x3D; ? WHERE ( address &#x3D; ? and sex &#x3D; ? ) \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 1(String), 乌鲁木齐(String), 上海(String), 0(String)\nDEBUG [main] - &lt;&#x3D;&#x3D;    Updates: 2</code></pre>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3></li>\n<li>*插入数据时，使用insert方法，所有数据统统insert**</li>\n<li>*更新数据时，大部分情况使用updateByPrimaryKeySelective方法，无需设置无关字段，不会修改原来的值**</li>\n</ul>","categories":[],"tags":[{"name":"Mybatis","path":"api/tags/Mybatis.json"}]}
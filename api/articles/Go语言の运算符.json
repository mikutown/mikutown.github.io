{"title":"Go语言の运算符","slug":"Go语言の运算符","date":"2021-01-09T13:43:50.000Z","updated":"2022-05-20T07:45:41.113Z","comments":true,"path":"api/articles/Go语言の运算符.json","excerpt":"Go语言の运算符本文介绍了Go语言的运算符","covers":["http://cdn.leafii.top/img/20220520154005.png","http://cdn.leafii.top/img/20220520154022.png","http://cdn.leafii.top/img/20220520154040.png","http://cdn.leafii.top/img/20220520154058.png","http://cdn.leafii.top/img/20220520154112.png","http://cdn.leafii.top/img/20220520154125.png","http://cdn.leafii.top/img/20220520154336.png","http://cdn.leafii.top/img/20220520154356.png","http://cdn.leafii.top/img/20220520154409.png","http://cdn.leafii.top/img/20220520154423.png","http://cdn.leafii.top/img/20220520154440.png","http://cdn.leafii.top/img/20220520154455.png","http://cdn.leafii.top/img/20220520154512.png","http://cdn.leafii.top/img/20220520154525.png"],"content":"<h1 id=\"Go语言の运算符\"><a href=\"#Go语言の运算符\" class=\"headerlink\" title=\"Go语言の运算符\"></a>Go语言の运算符</h1><p>本文介绍了Go语言的运算符</p>\n<span id=\"more\"></span>\n\n<h2 id=\"运算符的基本介绍\"><a href=\"#运算符的基本介绍\" class=\"headerlink\" title=\"运算符的基本介绍\"></a>运算符的基本介绍</h2><p>运算符是一种特殊的符号，用以表示数据的运算、赋值和比较等等</p>\n<ol>\n<li>算术运算符</li>\n<li>赋值运算符</li>\n<li>比较运算符&#x2F;关系运算符</li>\n<li>逻辑运算符</li>\n<li>位运算符</li>\n<li>其他运算符</li>\n</ol>\n<h2 id=\"算数运算符\"><a href=\"#算数运算符\" class=\"headerlink\" title=\"算数运算符\"></a>算数运算符</h2><p>算术运算符是对数值类型的变量进行运算的，比如：加减乘除。在Go程序中使用的非常多</p>\n<h3 id=\"算术运算符的一览表\"><a href=\"#算术运算符的一览表\" class=\"headerlink\" title=\"算术运算符的一览表\"></a>算术运算符的一览表</h3><table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>运算</th>\n<th>范例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>+</td>\n<td>正号</td>\n<td>+3</td>\n<td>3</td>\n</tr>\n<tr>\n<td>-</td>\n<td>负号</td>\n<td>-4</td>\n<td>-4</td>\n</tr>\n<tr>\n<td>+</td>\n<td>加</td>\n<td>5+5</td>\n<td>10</td>\n</tr>\n<tr>\n<td>-</td>\n<td>减</td>\n<td>6-4</td>\n<td>2</td>\n</tr>\n<tr>\n<td>*</td>\n<td>乘</td>\n<td>3*4</td>\n<td>12</td>\n</tr>\n<tr>\n<td>&#x2F;</td>\n<td>除</td>\n<td>5&#x2F;5</td>\n<td>1</td>\n</tr>\n<tr>\n<td>%</td>\n<td>取模（取余）</td>\n<td>7%5</td>\n<td>2</td>\n</tr>\n<tr>\n<td>++</td>\n<td>自增</td>\n<td>a&#x3D;2 a++</td>\n<td>a&#x3D;3</td>\n</tr>\n<tr>\n<td>–</td>\n<td>自减</td>\n<td>a&#x3D;2 a–</td>\n<td>a&#x3D;1</td>\n</tr>\n<tr>\n<td>+</td>\n<td>字符串相加</td>\n<td>“He” + “llo”</td>\n<td>“Hello”</td>\n</tr>\n</tbody></table>\n<h3 id=\"案例演示\"><a href=\"#案例演示\" class=\"headerlink\" title=\"案例演示\"></a>案例演示</h3><ul>\n<li>案例：演示算术运算符的使用。</li>\n</ul>\n<p>+，-，*，&#x2F;，%，++，–，重点讲解&#x2F;、%</p>\n<p>自增：++</p>\n<p>自减：–</p>\n<ul>\n<li>演示&#x2F;的使用的特点</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//重点讲解 / 、%</span>\n\t<span class=\"token comment\">//说明：如果运算的数都是整数，那么除后，去掉小数部分，保留整数部分</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> n1 <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span> <span class=\"token comment\">//</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>n1<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">//如果我们希望保留小数部分，则需要有浮点数参与运算</span>\n\t<span class=\"token keyword\">var</span> n2 <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">10.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>n2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><strong>运行结果</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">2\n2\n2.5</code></pre>\n\n<ul>\n<li>演示 % 的使用特点</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//演示 % 的使用</span>\n\t<span class=\"token comment\">// 看一个公式 a % b = a - a / b * b</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10 % 3 =\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// =-1</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-10 % 3 = \"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// =-10-(-10)/3*3=-10-(-9)=-1</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10 % -3 = \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// =1</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-10 % -3 = \"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//=-1</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><strong>运行结果</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">10 % 3 &#x3D; 1\n-10 % 3 &#x3D;  -1\n10 % -3 &#x3D;  1\n-10 % -3 &#x3D;  -1</code></pre>\n\n<ul>\n<li>++和–的使用</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//演示 ++ 和 -- 的使用</span>\n\t<span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\ti<span class=\"token operator\">++</span> <span class=\"token comment\">//等价 i = i + 1</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i=\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token comment\">//11</span>\n\ti<span class=\"token operator\">--</span> <span class=\"token comment\">//等价 i = i - 1</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i=\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 10</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><strong>运行结果</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">i&#x3D; 11\ni&#x3D; 10</code></pre>\n\n<h3 id=\"算术运算符使用的注意事项\"><a href=\"#算术运算符使用的注意事项\" class=\"headerlink\" title=\"算术运算符使用的注意事项\"></a>算术运算符使用的注意事项</h3><ol>\n<li>对于除号”&#x2F;“，它的整数除和小数除是有区别的：整数之间做除法时，只保留整数部分而舍弃小数部分。例如： x:&#x3D;19&#x2F;5, 结果是3</li>\n<li>当对一个数取模时，可以等价 a%b&#x3D;a-a&#x2F;b*b, 这样我们可以看到 取模的一个本质运算。</li>\n<li>Golang的自增自减只能当作一个独立语言使用时，不能这样使用：</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//在Golang中，++ 和 -- 只能独立使用</span>\n\t<span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span>\n\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span>\n\ta <span class=\"token operator\">=</span> i<span class=\"token operator\">++</span> <span class=\"token comment\">//错误 i++只能独立使用</span>\n\ta <span class=\"token operator\">=</span> i<span class=\"token operator\">--</span> <span class=\"token comment\">//错误 i--只能独立使用</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">++</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<ol start=\"4\">\n<li>Golang的++和–只能写在变量的后面，不能写在变量的前面，即：只有a++,a–；没有++a,–a</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ni<span class=\"token operator\">++</span>\n<span class=\"token operator\">++</span>i <span class=\"token comment\">//错误，在Golang没有 前++</span>\ni<span class=\"token operator\">--</span>\n<span class=\"token operator\">--</span>i <span class=\"token comment\">//错误，在Golang没有 前--</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i=\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></code></pre>\n\n<ol start=\"5\">\n<li>Golang的设计者去掉 c&#x2F;java 中的自增自减的容易混淆的写法，让Golang更加简洁，统一。（强制性的）</li>\n</ol>\n<h3 id=\"课堂练习1\"><a href=\"#课堂练习1\" class=\"headerlink\" title=\"课堂练习1\"></a>课堂练习1</h3><pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ni <span class=\"token operator\">=</span> i<span class=\"token operator\">++</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//问 结果是多少，为什么？</span>\n<span class=\"token comment\">//上面的代码报错，因为i=i++编译不通过</span></code></pre>\n\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">if</span> i<span class=\"token operator\">++</span> <span class=\"token operator\">></span> <span class=\"token number\">10</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//问 结果是多少，为什么？</span>\n<span class=\"token comment\">//上面的代码报错，因为i++ > 10编译不通过</span></code></pre>\n\n<h3 id=\"课堂练习2\"><a href=\"#课堂练习2\" class=\"headerlink\" title=\"课堂练习2\"></a>课堂练习2</h3><ol>\n<li>假如还有97天放假，问:97天相当于几个星期零几天?</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> day <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">97</span>\n<span class=\"token keyword\">var</span> week <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">97</span> <span class=\"token operator\">/</span> <span class=\"token number\">7</span>\n<span class=\"token keyword\">var</span> day <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">97</span> <span class=\"token operator\">%</span> <span class=\"token number\">7</span></code></pre>\n\n<ul>\n<li>解答</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> day <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">97</span>\n\t<span class=\"token keyword\">var</span> week <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> day <span class=\"token operator\">/</span> <span class=\"token number\">7</span>\n\t<span class=\"token keyword\">var</span> aday <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> day <span class=\"token operator\">%</span> <span class=\"token number\">7</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>week<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>aday<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**打印结果：13    6 **/</span></code></pre>\n\n<ol start=\"2\">\n<li>定义一个变量保存华氏温度，华氏温度转换摄氏温度的公式为5&#x2F;9*(华氏温度-100),请求出华氏温度对应的摄氏温度。</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> huashi <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">134.2</span>\n\t<span class=\"token keyword\">var</span> sheshi <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">5.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>huashi <span class=\"token operator\">-</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%v 对应的摄氏温度=%v\\n\"</span><span class=\"token punctuation\">,</span> huashi<span class=\"token punctuation\">,</span> sheshi<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**134.2 对应的摄氏温度=19**/</span></code></pre>\n\n<h2 id=\"关系运算符（比较运算符）\"><a href=\"#关系运算符（比较运算符）\" class=\"headerlink\" title=\"关系运算符（比较运算符）\"></a>关系运算符（比较运算符）</h2><h3 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h3><ol>\n<li>关系运算符的结果都是bool型，也就是 要么是true，要么是false</li>\n<li>关系表达式常用于<strong>if结构</strong>的条件中或<strong>循环结构</strong>的条件中</li>\n</ol>\n<h3 id=\"关系运算符一览图\"><a href=\"#关系运算符一览图\" class=\"headerlink\" title=\"关系运算符一览图\"></a>关系运算符一览图</h3><table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>运算</th>\n<th>范例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;&#x3D;</td>\n<td>相等于</td>\n<td>4&#x3D;&#x3D;3</td>\n<td>false</td>\n</tr>\n<tr>\n<td>!&#x3D;</td>\n<td>不等于</td>\n<td>4！&#x3D;3</td>\n<td>true</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于</td>\n<td>4&lt;3</td>\n<td>false</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>大于</td>\n<td>4&gt;3</td>\n<td>true</td>\n</tr>\n<tr>\n<td>&lt;&#x3D;</td>\n<td>小于等于</td>\n<td>4&lt;&#x3D;3</td>\n<td>false</td>\n</tr>\n<tr>\n<td>&gt;&#x3D;</td>\n<td>大于等于</td>\n<td>4&gt;&#x3D;3</td>\n<td>true</td>\n</tr>\n</tbody></table>\n<h3 id=\"案例演示-1\"><a href=\"#案例演示-1\" class=\"headerlink\" title=\"案例演示\"></a>案例演示</h3><pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//演示关系运算符的使用</span>\n\tvarn1int<span class=\"token operator\">=</span><span class=\"token number\">9</span>\n\tvarn2int<span class=\"token operator\">=</span><span class=\"token number\">8</span>\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">==</span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span>\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span><span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">!=</span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\n\tfmt <span class=\"token punctuation\">.</span><span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">></span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span><span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">>=</span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\n\tfmt <span class=\"token punctuation\">.</span><span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">&lt;</span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//flase</span>\n\tfmt <span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">&lt;=</span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//flase</span>\n\tflag<span class=\"token operator\">:=</span>n1<span class=\"token operator\">></span>n2\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" flag=\"</span><span class=\"token punctuation\">,</span> f1ag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span>\n </code></pre>\n\n<h3 id=\"关系运算符的细节说明\"><a href=\"#关系运算符的细节说明\" class=\"headerlink\" title=\"关系运算符的细节说明\"></a>关系运算符的细节说明</h3><ol>\n<li>关系运算符的结果都是bool型，也就是要么是true，要么是false。</li>\n<li>关系运算符组成的表达式，我们称为关系表达式：a&gt;b</li>\n<li>**比较运算符”&#x3D;&#x3D;”不能误写成”&#x3D;” **</li>\n</ol>\n<h2 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h2><h3 id=\"基本介绍-1\"><a href=\"#基本介绍-1\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h3><p>用于连接多个条件（一般来讲就是关系表达式），最终的结果也是一个bool值</p>\n<h3 id=\"逻辑运算的说明\"><a href=\"#逻辑运算的说明\" class=\"headerlink\" title=\"逻辑运算的说明\"></a>逻辑运算的说明</h3><p><strong>假定A值为true，B值为false</strong></p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&amp;&amp;</td>\n<td><strong>逻辑与</strong>运算符。如果两边的操作数都是true，则为true，否则为false</td>\n<td>（A&amp;&amp;B)为false</td>\n</tr>\n<tr>\n<td>||</td>\n<td><strong>逻辑或</strong>运算符。如果两边的操作数有一个true,则为true，否则为false。</td>\n<td>（A||B）为true</td>\n</tr>\n<tr>\n<td>！</td>\n<td><strong>逻辑非</strong>运算符。如果条件为true，则逻辑为false，否则为true。</td>\n<td>！(A&amp;&amp;B)为true</td>\n</tr>\n</tbody></table>\n<h3 id=\"案例演示-2\"><a href=\"#案例演示-2\" class=\"headerlink\" title=\"案例演示\"></a>案例演示</h3><pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//演示逻辑运算符的使用8&amp;</span>\n<span class=\"token keyword\">var</span> age <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\n<span class=\"token keyword\">if</span> age <span class=\"token operator\">></span><span class=\"token number\">30</span><span class=\"token operator\">&amp;&amp;</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">&#123;</span>\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">if</span> age <span class=\"token operator\">></span><span class=\"token number\">30</span><span class=\"token operator\">&amp;&amp;</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token punctuation\">&#123;</span>\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"ok2\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//演示逻辑运算符的使用</span>\n<span class=\"token keyword\">if</span> age<span class=\"token operator\">></span>38Ilage<span class=\"token operator\">&lt;</span>5e<span class=\"token punctuation\">&#123;</span>\n\tfmt <span class=\"token punctuation\">.</span> <span class=\"token function\">PrintIn</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"ok3\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">if</span> age<span class=\"token operator\">></span><span class=\"token number\">30</span><span class=\"token operator\">|</span>age<span class=\"token operator\">&lt;</span><span class=\"token number\">40</span><span class=\"token punctuation\">&#123;</span>\n\tfmt <span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"ok4\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n</code></pre>\n\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//演示逻辑运算符的使用!</span>\n<span class=\"token keyword\">if</span> age<span class=\"token operator\">></span><span class=\"token number\">30</span><span class=\"token punctuation\">&#123;</span>\n\tfmt <span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok5\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>age <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tfmt<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok6\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n</code></pre>\n\n<h3 id=\"注意事项和细节说明\"><a href=\"#注意事项和细节说明\" class=\"headerlink\" title=\"注意事项和细节说明\"></a>注意事项和细节说明</h3><ol>\n<li><p>&amp;&amp;也叫<strong>短路与</strong>：如果<strong>第一个条件为false</strong>，则第二个条件不会判断，最终结果为<strong>false</strong></p>\n</li>\n<li><p>||也叫<strong>短路或</strong>：如果<strong>第一个条件为true</strong>，则第二个条件不会判断，最终结果为<strong>true</strong></p>\n</li>\n<li><p>案例演示</p>\n</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//声明一个函数(测试)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"test...\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span><span class=\"token number\">10</span>\n\t<span class=\"token comment\">//短路与</span>\n\t<span class=\"token comment\">//说明因为i &lt; 9为false ,因此后面的test() 就不执行</span>\n\t<span class=\"token keyword\">if</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">9</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   \t \tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"ok..\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">//说明 因为 i > 9为true ,因此后面的test() 就不执行</span>\n\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">></span> <span class=\"token number\">9</span> <span class=\"token operator\">||</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"hello...\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h2 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h2><h3 id=\"基本的介绍\"><a href=\"#基本的介绍\" class=\"headerlink\" title=\"基本的介绍\"></a>基本的介绍</h3><p>赋值运算符就是将某个运算后的值，赋给指定的变量。</p>\n<h3 id=\"赋值运算符的分类\"><a href=\"#赋值运算符的分类\" class=\"headerlink\" title=\"赋值运算符的分类\"></a>赋值运算符的分类</h3><table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;</td>\n<td>简单的赋值运算符，将一个表达式的值赋给一个左值</td>\n<td>C&#x3D;A+B将A+B表达式结果赋值给C</td>\n</tr>\n<tr>\n<td>+&#x3D;</td>\n<td>相加后再赋值</td>\n<td>C+&#x3D;A 等于 C&#x3D;C+A</td>\n</tr>\n<tr>\n<td>-&#x3D;</td>\n<td>相减后再赋值</td>\n<td>C-&#x3D;A 等于 C&#x3D;C-A</td>\n</tr>\n<tr>\n<td>*&#x3D;</td>\n<td>相乘后再赋值</td>\n<td>C*&#x3D;A 等于 C&#x3D;C*A</td>\n</tr>\n<tr>\n<td>&#x2F;&#x3D;</td>\n<td>相除后再赋值</td>\n<td>C&#x2F;&#x3D;A 等于 C&#x3D;C&#x2F;A</td>\n</tr>\n<tr>\n<td>%&#x3D;</td>\n<td>求余后再赋值</td>\n<td>C%&#x3D;A 等于 C&#x3D;C%A</td>\n</tr>\n<tr>\n<td>&lt;&lt;&#x3D;</td>\n<td>左移后赋值</td>\n<td>C&lt;&lt;&#x3D;2 等于 C&#x3D;C&lt;&lt;2</td>\n</tr>\n<tr>\n<td>&gt;&gt;&#x3D;</td>\n<td>右移后赋值</td>\n<td>C&gt;&gt;&#x3D;2 等于 C&#x3D;C&gt;&gt;2</td>\n</tr>\n<tr>\n<td>&amp;&#x3D;</td>\n<td>按位与后赋值</td>\n<td>C&amp;&#x3D;2 等于 C&#x3D;C&amp;2</td>\n</tr>\n<tr>\n<td>^&#x3D;</td>\n<td>按位异或后赋值</td>\n<td>C^&#x3D;2 等于 C&#x3D;C^2</td>\n</tr>\n<tr>\n<td>|&#x3D;</td>\n<td>按位或后赋值</td>\n<td>C|&#x3D;2 等于 C&#x3D;C|2</td>\n</tr>\n</tbody></table>\n<p>**说明:**后半部分的赋值运算涉及到二进制相关知识哦！</p>\n<h3 id=\"赋值运算的案例演示\"><a href=\"#赋值运算的案例演示\" class=\"headerlink\" title=\"赋值运算的案例演示\"></a>赋值运算的案例演示</h3><ol>\n<li>赋值基本案例</li>\n<li>有两个变量，a和b，要求将其进行交换，最终打印结果</li>\n<li>+&#x3D;的使用案例</li>\n<li>案例</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//赋值运算符的使用演示</span>\n    <span class=\"token comment\">//var i int</span>\n    <span class=\"token comment\">// i = 10 // 基本赋值</span>\n    \n    <span class=\"token comment\">//有两个变量，a和b，要求将其进行交换，最终打印结果</span>\n    <span class=\"token comment\">// a = 9, b = 2 ==> a = 2 , b = 9</span>\n    a <span class=\"token operator\">:=</span> <span class=\"token number\">9</span>\n    b <span class=\"token operator\">:=</span> <span class=\"token number\">2</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"交换前的情况： a = %v, b = %v\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//定义一个临时变量</span>\n    t <span class=\"token operator\">:=</span> a\n    a <span class=\"token operator\">=</span> b\n    b <span class=\"token operator\">=</span> t\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"交换后的情况: a = %v, b = %v\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">//复合赋值的操作</span>\n    a <span class=\"token operator\">+=</span> <span class=\"token number\">17</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a+=17 --> a = a + 17 = %v\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"赋值运算符的特点\"><a href=\"#赋值运算符的特点\" class=\"headerlink\" title=\"赋值运算符的特点\"></a>赋值运算符的特点</h3><ol>\n<li>运算顺序从右往左</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> c <span class=\"token builtin\">int</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token comment\">// 赋值运算的执行顺序是从右向左</span></code></pre>\n\n<ol start=\"2\">\n<li>赋值运算符的左边 只能是变量，右边可以是变量，表达式，常量值！</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//赋值运算符的左边 只能是变量，右边可以是变量，表达式，常量值！</span>\n<span class=\"token comment\">//表达式:任何有值的都可以看做是表达式</span>\n<span class=\"token keyword\">var</span> d <span class=\"token builtin\">int</span>\nd <span class=\"token operator\">=</span> a <span class=\"token comment\">//</span>\nd <span class=\"token operator\">=</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token comment\">// =的右边是表达式</span>\nd <span class=\"token operator\">=</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">90</span> <span class=\"token comment\">// =的右边是表达式</span>\nd <span class=\"token operator\">=</span> <span class=\"token number\">890</span> <span class=\"token comment\">//890常量</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span></code></pre>\n\n<ol start=\"3\">\n<li>复合赋值运算符等价于下面的效果</li>\n</ol>\n<p>a +&#x3D; 3  &lt;&#x3D;&#x3D;&gt; a &#x3D; a + 3</p>\n<h3 id=\"面试题\"><a href=\"#面试题\" class=\"headerlink\" title=\"面试题\"></a>面试题</h3><p>有两个变量，a和b，要求将其进行交换，但是不允许使用中间变量，最终打印结果</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">9</span>\n\t<span class=\"token keyword\">var</span> b <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\ta <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b    \n\tb <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b   <span class=\"token comment\">//    = a+b-b = a</span>\n\ta <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b   <span class=\"token comment\">//    = a+b-a = b</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a = %v b = %v \"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>牛牛牛！</p>\n<h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h3><table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&amp;</td>\n<td>按位与运算符”&amp;”是双目运算符。其功能是参与运算的两数各对应的二进位相与。运算规则是:同时为1，结果为1,否则为0</td>\n</tr>\n<tr>\n<td>|</td>\n<td>按位或运算符川”是双目运算符。其功能是参 与运算的两数各对应的二进位相或.运算规则是:同时为1，结果为1,否则为0</td>\n</tr>\n<tr>\n<td>^</td>\n<td>按位异或运算符”是双目运算符。其功能是参与运算的两数各对应的二进位相异或。运算规则是:当二进位不同时，结果为1,否则为0</td>\n</tr>\n<tr>\n<td>&lt;&lt;</td>\n<td>左移运算符&lt;&lt;”是双目运算符。其功能把&lt;&lt;”左边的运算数的各二进位全部左移若干位，高位丢弃，低位补0。左移n位就是乘以2的n次方。</td>\n</tr>\n<tr>\n<td>&gt;&gt;</td>\n<td>右移运算符&gt;&gt;”是双目运算符。其功能是把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，右移n位就是除以2的n次方</td>\n</tr>\n</tbody></table>\n<h2 id=\"其他运算符说明\"><a href=\"#其他运算符说明\" class=\"headerlink\" title=\"其他运算符说明\"></a>其他运算符说明</h2><table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&amp;</td>\n<td>返回变量存储地址</td>\n<td>&amp;a;将给出变量a的实际地址</td>\n</tr>\n<tr>\n<td>*</td>\n<td>指针变量</td>\n<td>*a;是一个指针变量</td>\n</tr>\n</tbody></table>\n<p>举例说明：</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//演示一下 &amp; 和 * 的使用</span>\n    a <span class=\"token operator\">:=</span> <span class=\"token number\">100</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a的地址=\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">var</span> ptr <span class=\"token operator\">*</span><span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ptr指向的值是:\"</span> ，<span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"课堂案例\"><a href=\"#课堂案例\" class=\"headerlink\" title=\"课堂案例\"></a>课堂案例</h3><ul>\n<li>案例1：求两个数的最大值</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//求两个数的最大值</span>\n    <span class=\"token keyword\">var</span> n1 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token keyword\">var</span> n2 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\n    <span class=\"token keyword\">var</span> max <span class=\"token builtin\">int</span>\n    <span class=\"token keyword\">if</span> n1 <span class=\"token operator\">></span> n2<span class=\"token punctuation\">&#123;</span>\n        max <span class=\"token operator\">=</span> n1\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        max <span class=\"token operator\">=</span> n2\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max=\"</span><span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<ul>\n<li>案例2：求三个数的最大值</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//求两个数的最大值</span>\n    <span class=\"token keyword\">var</span> n1 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token keyword\">var</span> n2 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\n    <span class=\"token keyword\">var</span> max <span class=\"token builtin\">int</span>\n    <span class=\"token keyword\">if</span> n1 <span class=\"token operator\">></span> n2<span class=\"token punctuation\">&#123;</span>\n        max <span class=\"token operator\">=</span> n1\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        max <span class=\"token operator\">=</span> n2\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max=\"</span><span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//求三个数的最大值思路：先求两个数的最大值，再用第三个数与最大值相比，取较大的数。</span>\n    <span class=\"token keyword\">var</span> n3 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">45</span>\n    <span class=\"token keyword\">if</span> n3 <span class=\"token operator\">></span> max <span class=\"token punctuation\">&#123;</span>\n        max <span class=\"token operator\">=</span> n3\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"三个书中最大值是=\"</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h2 id=\"特别说明\"><a href=\"#特别说明\" class=\"headerlink\" title=\"特别说明\"></a>特别说明</h2><p>Go语言明确不支持三元运算符，官方<a href=\"https://golang.org/doc/faq#Does_Go_have_a_ternary_form\">说明</a></p>\n<p><img src=\"http://cdn.leafii.top/img/20220520154005.png\" loading=\"lazy\"></p>\n<p>演示在Go语言中实现三元运算符的效果：</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> n <span class=\"token builtin\">int</span>\n<span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">var</span> j <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">12</span>\n<span class=\"token comment\">//传统的三元运算</span>\n<span class=\"token comment\">//n = i > j ? i : j</span>\n<span class=\"token keyword\">if</span> i <span class=\"token operator\">></span> j <span class=\"token punctuation\">&#123;</span>\n    n <span class=\"token operator\">=</span> i\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    n <span class=\"token operator\">=</span> j\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">return</span> n <span class=\"token comment\">//12</span></code></pre>\n\n<h2 id=\"运算符的优先级\"><a href=\"#运算符的优先级\" class=\"headerlink\" title=\"运算符的优先级\"></a>运算符的优先级</h2><h3 id=\"运算符的优先级的一览表\"><a href=\"#运算符的优先级的一览表\" class=\"headerlink\" title=\"运算符的优先级的一览表\"></a>运算符的优先级的一览表</h3><p><img src=\"http://cdn.leafii.top/img/20220520154022.png\" loading=\"lazy\"></p>\n<h3 id=\"对上图的说明\"><a href=\"#对上图的说明\" class=\"headerlink\" title=\"对上图的说明\"></a>对上图的说明</h3><ol>\n<li>运算符有不同的优先级，所谓优先级就是表达式运算中的运算顺序。如右表，上一行运算符总优先于下一行。</li>\n<li>只有单目运算符、赋值运算符是从右向左运算的。</li>\n<li>梳理一个大概的优先级：<ol>\n<li>括号，++，–</li>\n<li>单目运算</li>\n<li>算术运算符</li>\n<li>移位运算</li>\n<li>关系运算符</li>\n<li>位运算符</li>\n<li>逻辑运算符</li>\n<li>赋值运算符</li>\n<li>逗号</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"键盘输入语句\"><a href=\"#键盘输入语句\" class=\"headerlink\" title=\"键盘输入语句\"></a>键盘输入语句</h2><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>在编程中，需要接收用户输入的数据，就可以使用键盘输入语句来获取。InputDemo.go</p>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ol>\n<li>导入fmt包</li>\n<li>调用fmt包的fmt.Scanln()或者fmt.Scanf()</li>\n</ol>\n<p><img src=\"http://cdn.leafii.top/img/20220520154040.png\" loading=\"lazy\"></p>\n<p><img src=\"http://cdn.leafii.top/img/20220520154058.png\" loading=\"lazy\"></p>\n<h3 id=\"案例演示-3\"><a href=\"#案例演示-3\" class=\"headerlink\" title=\"案例演示\"></a>案例演示</h3><ul>\n<li>要求：可以从控制台接收用户信息，【姓名，年龄，薪水，是否通过考试】</li>\n</ul>\n<ol>\n<li>使用fmt.Scanln()获取</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//要求：可以从控制台接收用户信息，</span>\n<span class=\"token comment\">//【姓名，年龄，薪水，是否通过考试】</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//1. 先声明需要的变量</span>\n<span class=\"token keyword\">var</span> name <span class=\"token builtin\">string</span>\n<span class=\"token keyword\">var</span> age <span class=\"token builtin\">byte</span>\n<span class=\"token keyword\">var</span> sal <span class=\"token builtin\">float32</span>\n<span class=\"token keyword\">var</span> isPass <span class=\"token builtin\">bool</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入姓名\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//当程序执行到 fmt.Scanln(&amp;name),程序会停止在这里，等待用户输入，并回车</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入年龄\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入薪水\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sal<span class=\"token punctuation\">)</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入是否通过考试\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>isPass<span class=\"token punctuation\">)</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名字是 %v \\n年龄是 %v \\n薪水是 %v \\n是否通过考试 %v\\n\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sal<span class=\"token punctuation\">,</span> isPass<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">请输入姓名\nleafii\n请输入年龄\n23\n请输入薪水\n60000\n请输入是否通过考试\ntrue\n名字是 leafii\n年龄是 23\n薪水是 60000\n是否通过考试 true</code></pre>\n\n<ol start=\"2\">\n<li>使用fmt.Scanf()获取</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//要求：可以从控制台接收用户信息，</span>\n<span class=\"token comment\">//【姓名，年龄，薪水，是否通过考试】</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//1. 先声明需要的变量</span>\n\t<span class=\"token keyword\">var</span> name <span class=\"token builtin\">string</span>\n\t<span class=\"token keyword\">var</span> age <span class=\"token builtin\">byte</span>\n\t<span class=\"token keyword\">var</span> sal <span class=\"token builtin\">float32</span>\n\t<span class=\"token keyword\">var</span> isPass <span class=\"token builtin\">bool</span>\n\t<span class=\"token comment\">//方式2：fmt.Scanf，可以按指定的格式输入</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你的姓名，年龄，薪水，是否通过考试，使用空格隔开\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s %d %f %t\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>sal<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>isPass<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名字是 %v \\n年龄是 %v \\n薪水是 %v \\n是否通过考试 %v\\n\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sal<span class=\"token punctuation\">,</span> isPass<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">请输入你的姓名，年龄，薪水，是否通过考试，使用空格隔开\nleafii 23 60000 true\n名字是 leafii\n年龄是 23\n薪水是 60000\n是否通过考试 true</code></pre>\n\n<h2 id=\"进制\"><a href=\"#进制\" class=\"headerlink\" title=\"进制\"></a>进制</h2><p>对于整数，有四种表示方式：</p>\n<ul>\n<li>二进制：0，1，满2进1。在Golang中，不能直接使用二进制来表示一个整数，它沿用了c的特点</li>\n<li>十进制：0-9，满10进1.</li>\n<li>八进制：0-7，满8进1.以数字0开头表示。</li>\n<li>十六进制：0-9及A-F，满16进1。以0x 或0X开头表示。（A到F不区分大小写）</li>\n</ul>\n<h3 id=\"进制的图示\"><a href=\"#进制的图示\" class=\"headerlink\" title=\"进制的图示\"></a>进制的图示</h3><table>\n<thead>\n<tr>\n<th>十进制</th>\n<th>十六进制</th>\n<th>八进制</th>\n<th>二进制</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>2</td>\n<td>10</td>\n</tr>\n<tr>\n<td>3</td>\n<td>3</td>\n<td>3</td>\n<td>11</td>\n</tr>\n<tr>\n<td>4</td>\n<td>4</td>\n<td>4</td>\n<td>100</td>\n</tr>\n<tr>\n<td>5</td>\n<td>5</td>\n<td>5</td>\n<td>101</td>\n</tr>\n<tr>\n<td>6</td>\n<td>6</td>\n<td>6</td>\n<td>110</td>\n</tr>\n<tr>\n<td>7</td>\n<td>7</td>\n<td>7</td>\n<td>111</td>\n</tr>\n<tr>\n<td>8</td>\n<td>8</td>\n<td>10</td>\n<td>1000</td>\n</tr>\n<tr>\n<td>9</td>\n<td>9</td>\n<td>11</td>\n<td>1001</td>\n</tr>\n<tr>\n<td>10</td>\n<td>A</td>\n<td>12</td>\n<td>1010</td>\n</tr>\n<tr>\n<td>11</td>\n<td>B</td>\n<td>13</td>\n<td>1011</td>\n</tr>\n<tr>\n<td>12</td>\n<td>C</td>\n<td>14</td>\n<td>1100</td>\n</tr>\n<tr>\n<td>13</td>\n<td>D</td>\n<td>15</td>\n<td>1101</td>\n</tr>\n<tr>\n<td>14</td>\n<td>E</td>\n<td>16</td>\n<td>1110</td>\n</tr>\n<tr>\n<td>15</td>\n<td>F</td>\n<td>17</td>\n<td>1111</td>\n</tr>\n<tr>\n<td>16</td>\n<td>10</td>\n<td>20</td>\n<td>10000</td>\n</tr>\n<tr>\n<td>17</td>\n<td>11</td>\n<td>21</td>\n<td>10001</td>\n</tr>\n</tbody></table>\n<h3 id=\"进制转换的介绍\"><a href=\"#进制转换的介绍\" class=\"headerlink\" title=\"进制转换的介绍\"></a>进制转换的介绍</h3><p>总览:</p>\n<p><img src=\"http://cdn.leafii.top/img/20220520154112.png\" loading=\"lazy\"></p>\n<h3 id=\"其他进制转十进制\"><a href=\"#其他进制转十进制\" class=\"headerlink\" title=\"其他进制转十进制\"></a>其他进制转十进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154125.png\" loading=\"lazy\"></p>\n<h3 id=\"二进制如何转十进制\"><a href=\"#二进制如何转十进制\" class=\"headerlink\" title=\"二进制如何转十进制\"></a>二进制如何转十进制</h3><p>134 &#x3D; 4 * 1 + 3 * 10 + 10 * 10 &#x3D; 4 + 30 + 100 &#x3D; 134</p>\n<ul>\n<li><p><strong>规则：</strong>从最低位开始（右边），将每个位上的数提取出来，乘以2的（位数-1）次方然后<strong>求和</strong>。</p>\n</li>\n<li><p>案例： 请将二进制：1011转成十进制的数</p>\n</li>\n</ul>\n<p>1011 &#x3D; 1 * 1 + 1 * 2 + 0 * 2  * 2 + 1 * 2 * 2 * 2 &#x3D; 1 + 2 + 0 + 8 &#x3D; 11</p>\n<h3 id=\"八进制转换成十进制实例\"><a href=\"#八进制转换成十进制实例\" class=\"headerlink\" title=\"八进制转换成十进制实例\"></a>八进制转换成十进制实例</h3><ul>\n<li><p><strong>规则：</strong>从最低位开始（右边），将每个位上的数提取出来，乘以8的（位数-1）次方然后<strong>求和</strong>。</p>\n</li>\n<li><p>案例:请将0123转成十进制的数</p>\n</li>\n</ul>\n<p>0123 &#x3D; 3 * 1 + 2 * 8 + 1 * 8 * 8 + 0 * 8 * 8 * 8 &#x3D; 3 + 16 + 64 &#x3D; 83</p>\n<h3 id=\"十六进制转成十进制\"><a href=\"#十六进制转成十进制\" class=\"headerlink\" title=\"十六进制转成十进制\"></a>十六进制转成十进制</h3><ul>\n<li><p><strong>规则：</strong>从最低位开始（右边），将每个位上的数提取出来，乘以16的（位数-1）次方然后<strong>求和</strong>。</p>\n</li>\n<li><p>案例：请将0x34A转成十进制的数</p>\n</li>\n</ul>\n<p>0x34A &#x3D; 10 * 1 + 4 * 16 + 3 * 16 * 16 &#x3D; 10 + 64 + 768 &#x3D; 842</p>\n<h3 id=\"其他进制转成10进制的课堂练习\"><a href=\"#其他进制转成10进制的课堂练习\" class=\"headerlink\" title=\"其他进制转成10进制的课堂练习\"></a>其他进制转成10进制的课堂练习</h3><ul>\n<li><p>课堂练习: 请将</p>\n<ul>\n<li>二进制： 110001100 转成十进制</li>\n</ul>\n<p>110001100(2) &#x3D;1 * 2 <sup>2</sup>+ 1 * 2 <sup>3</sup> + 1 * 2<sup>7</sup> + 1 * 2<sup>8</sup> &#x3D; 396</p>\n<ul>\n<li>八进制： 02456 转成十进制</li>\n</ul>\n<p>02456(8) &#x3D; 6 * 1 + 5 * 8 + 4 * 8<sup>2</sup> + 2 * 8<sup>3</sup> &#x3D;  1326 </p>\n<ul>\n<li>十六进制： 0xA45 转成十进制</li>\n</ul>\n<p>0xA45 (16) &#x3D;  5 * 1 + 4 * 16 + 10 * 16<sup>2</sup> &#x3D; 2629</p>\n</li>\n</ul>\n<h3 id=\"十进制如何转成其他进制\"><a href=\"#十进制如何转成其他进制\" class=\"headerlink\" title=\"十进制如何转成其他进制\"></a>十进制如何转成其他进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154336.png\" loading=\"lazy\"></p>\n<h3 id=\"十进制如何转二进制\"><a href=\"#十进制如何转二进制\" class=\"headerlink\" title=\"十进制如何转二进制\"></a>十进制如何转二进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154356.png\" loading=\"lazy\"></p>\n<h3 id=\"十进制转成八进制\"><a href=\"#十进制转成八进制\" class=\"headerlink\" title=\"十进制转成八进制\"></a>十进制转成八进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154409.png\" loading=\"lazy\"></p>\n<h3 id=\"十进制转十六进制\"><a href=\"#十进制转十六进制\" class=\"headerlink\" title=\"十进制转十六进制\"></a>十进制转十六进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154423.png\" loading=\"lazy\"></p>\n<h3 id=\"课堂练习\"><a href=\"#课堂练习\" class=\"headerlink\" title=\"课堂练习\"></a>课堂练习</h3><ul>\n<li><p>请将</p>\n<ul>\n<li>123 转成二进制</li>\n</ul>\n<p>123（10） &#x3D;   1111011 (2)</p>\n<ul>\n<li>678转成八进制</li>\n</ul>\n<p>678(10) &#x3D; 1246(8)</p>\n<ul>\n<li>8912 转成十六进制</li>\n</ul>\n<p>8912(10) &#x3D; 22D0(16)</p>\n</li>\n</ul>\n<h3 id=\"二进制如何转成八进制、十六进制\"><a href=\"#二进制如何转成八进制、十六进制\" class=\"headerlink\" title=\"二进制如何转成八进制、十六进制\"></a>二进制如何转成八进制、十六进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154440.png\" loading=\"lazy\"></p>\n<h3 id=\"二进制转换成八进制\"><a href=\"#二进制转换成八进制\" class=\"headerlink\" title=\"二进制转换成八进制\"></a>二进制转换成八进制</h3><ul>\n<li><p>**规则:**将二进制数每三位一组(从低位开始组合),转成对应的八进制数即可。</p>\n</li>\n<li><p>案例:请将二进制: 11010101 转成八进制<br>11010101&#x3D; 0325</p>\n</li>\n</ul>\n<h3 id=\"二进制转成十六进制\"><a href=\"#二进制转成十六进制\" class=\"headerlink\" title=\"二进制转成十六进制\"></a>二进制转成十六进制</h3><ul>\n<li><p>**规则:**将二进制数每四位一组(从低位开始组合),转成对应的十六进制数即可。</p>\n</li>\n<li><p>案例:请将二进制: 11010101 转成十六进制</p>\n<p>11010101 &#x3D; 0xD5</p>\n</li>\n<li><p>课堂练习：请将</p>\n<ul>\n<li>二进制：11100101 转成 八进制</li>\n<li>二进制： 1110010110 转成 十六进制</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"八进制、十六进制转成二进制\"><a href=\"#八进制、十六进制转成二进制\" class=\"headerlink\" title=\"八进制、十六进制转成二进制\"></a>八进制、十六进制转成二进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154455.png\" loading=\"lazy\"></p>\n<h3 id=\"八进制转成二进制\"><a href=\"#八进制转成二进制\" class=\"headerlink\" title=\"八进制转成二进制\"></a>八进制转成二进制</h3><ul>\n<li><p><strong>规则：</strong>将八进制数每一位，转成对应的一个3位的二进制数即可。</p>\n</li>\n<li><p>案例：请将0237转换成二进制</p>\n<p>0237（8） &#x3D; 10011111（2）</p>\n</li>\n</ul>\n<h3 id=\"十六进制转成二进制\"><a href=\"#十六进制转成二进制\" class=\"headerlink\" title=\"十六进制转成二进制\"></a>十六进制转成二进制</h3><ul>\n<li><p><strong>规则：将十六进制数每一位，转成对应的一个4位的二进制数即可。</strong></p>\n</li>\n<li><p>案例：请将0x237转成二进制</p>\n<p>0x237(16) &#x3D; 1000110111(2)</p>\n</li>\n</ul>\n<h2 id=\"位运算\"><a href=\"#位运算\" class=\"headerlink\" title=\"位运算\"></a>位运算</h2><h3 id=\"位运算的思考题\"><a href=\"#位运算的思考题\" class=\"headerlink\" title=\"位运算的思考题\"></a>位运算的思考题</h3><ol>\n<li>请看下面的代码段，回答a,b,c,d结果是多少？</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">var</span> b <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">var</span> c <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">var</span> d <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span>\n    <span class=\"token comment\">//a b c d结果是多少？</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a=\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b=\"</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c=\"</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d=\"</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/*\na= 0\nb= -1\nc= 4\nd= -4\n*/</span></code></pre>\n\n<ol start=\"2\">\n<li>请回答在Golang中，下面的表达式运算的结果是：</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">&amp;</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token operator\">&amp;</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">^</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**\n2\n3\n5\n-2\n*/</span></code></pre>\n\n<h3 id=\"二进制在运算中的说明\"><a href=\"#二进制在运算中的说明\" class=\"headerlink\" title=\"二进制在运算中的说明\"></a>二进制在运算中的说明</h3><p>二进制是逢2进位的进位制，0、1是基本算符。</p>\n<p>现代的电子计算机技术全部采用的是二进制，因为它只使用0、1两个数学符号，非常简单方便，易于用电子方式实现。计算机内部处理的信息，都是采用二进制数来表示的。二进制（Binary）数用0和1两个数字及其组合来表示任何数。进位规则是“逢2进1“，数字1在不同的位上代表不同的值，按从右至左的次序，这个值以二倍递增。</p>\n<p>在计算机的内部，运行各种运算时，都是以二进制的方式来运行。</p>\n<h3 id=\"原码、反码、补码\"><a href=\"#原码、反码、补码\" class=\"headerlink\" title=\"原码、反码、补码\"></a>原码、反码、补码</h3><p><img src=\"http://cdn.leafii.top/img/20220520154512.png\" loading=\"lazy\"></p>\n<h3 id=\"位运算符和移位运算符\"><a href=\"#位运算符和移位运算符\" class=\"headerlink\" title=\"位运算符和移位运算符\"></a>位运算符和移位运算符</h3><ul>\n<li>Golang有3个位运算<ul>\n<li>按位与&amp;    ：    两位全为1，结果为1，否则为0</li>\n<li>按位或|    ：    两位有一个为1，结果为1，否则为0</li>\n<li>按位异或^    ：    两位一个为0，一个为1，结果为1，否则为0</li>\n</ul>\n</li>\n<li>案例练习</li>\n</ul>\n<p>2&amp;3&#x3D;?  2|3&#x3D;?  2^3&#x3D;?</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//2&amp;3=?  2|3=?  2^3=?</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">&amp;</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//2</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//3</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//3</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//-4</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><img src=\"http://cdn.leafii.top/img/20220520154525.png\" loading=\"lazy\"></p>\n<ul>\n<li><p>Golang中有两个移位运算符：</p>\n<ul>\n<li>右移运算符   &gt;&gt;:    低位溢出，符号位不变，并用符号位补溢出的高位</li>\n<li>左移运算符    &lt;&lt;:    符号位不变，低位补0</li>\n</ul>\n</li>\n<li><p>案例演示</p>\n<p>a :&#x3D; 1 &gt;&gt; 2   &#x2F;&#x2F;  0000 0001 &#x3D;&gt; 0000 0000  &#x3D; 0</p>\n<p>c :&#x3D; 1 &lt;&lt; 2 &#x2F;&#x2F; 0000 0001 &#x3D;&#x3D;&gt; 0000 0100 &#x3D;&gt; 4</p>\n</li>\n</ul>\n","more":"<h2 id=\"运算符的基本介绍\"><a href=\"#运算符的基本介绍\" class=\"headerlink\" title=\"运算符的基本介绍\"></a>运算符的基本介绍</h2><p>运算符是一种特殊的符号，用以表示数据的运算、赋值和比较等等</p>\n<ol>\n<li>算术运算符</li>\n<li>赋值运算符</li>\n<li>比较运算符&#x2F;关系运算符</li>\n<li>逻辑运算符</li>\n<li>位运算符</li>\n<li>其他运算符</li>\n</ol>\n<h2 id=\"算数运算符\"><a href=\"#算数运算符\" class=\"headerlink\" title=\"算数运算符\"></a>算数运算符</h2><p>算术运算符是对数值类型的变量进行运算的，比如：加减乘除。在Go程序中使用的非常多</p>\n<h3 id=\"算术运算符的一览表\"><a href=\"#算术运算符的一览表\" class=\"headerlink\" title=\"算术运算符的一览表\"></a>算术运算符的一览表</h3><table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>运算</th>\n<th>范例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>+</td>\n<td>正号</td>\n<td>+3</td>\n<td>3</td>\n</tr>\n<tr>\n<td>-</td>\n<td>负号</td>\n<td>-4</td>\n<td>-4</td>\n</tr>\n<tr>\n<td>+</td>\n<td>加</td>\n<td>5+5</td>\n<td>10</td>\n</tr>\n<tr>\n<td>-</td>\n<td>减</td>\n<td>6-4</td>\n<td>2</td>\n</tr>\n<tr>\n<td>*</td>\n<td>乘</td>\n<td>3*4</td>\n<td>12</td>\n</tr>\n<tr>\n<td>&#x2F;</td>\n<td>除</td>\n<td>5&#x2F;5</td>\n<td>1</td>\n</tr>\n<tr>\n<td>%</td>\n<td>取模（取余）</td>\n<td>7%5</td>\n<td>2</td>\n</tr>\n<tr>\n<td>++</td>\n<td>自增</td>\n<td>a&#x3D;2 a++</td>\n<td>a&#x3D;3</td>\n</tr>\n<tr>\n<td>–</td>\n<td>自减</td>\n<td>a&#x3D;2 a–</td>\n<td>a&#x3D;1</td>\n</tr>\n<tr>\n<td>+</td>\n<td>字符串相加</td>\n<td>“He” + “llo”</td>\n<td>“Hello”</td>\n</tr>\n</tbody></table>\n<h3 id=\"案例演示\"><a href=\"#案例演示\" class=\"headerlink\" title=\"案例演示\"></a>案例演示</h3><ul>\n<li>案例：演示算术运算符的使用。</li>\n</ul>\n<p>+，-，*，&#x2F;，%，++，–，重点讲解&#x2F;、%</p>\n<p>自增：++</p>\n<p>自减：–</p>\n<ul>\n<li>演示&#x2F;的使用的特点</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//重点讲解 / 、%</span>\n\t<span class=\"token comment\">//说明：如果运算的数都是整数，那么除后，去掉小数部分，保留整数部分</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> n1 <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span> <span class=\"token comment\">//</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>n1<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">//如果我们希望保留小数部分，则需要有浮点数参与运算</span>\n\t<span class=\"token keyword\">var</span> n2 <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">10.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>n2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><strong>运行结果</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">2\n2\n2.5</code></pre>\n\n<ul>\n<li>演示 % 的使用特点</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//演示 % 的使用</span>\n\t<span class=\"token comment\">// 看一个公式 a % b = a - a / b * b</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10 % 3 =\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// =-1</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-10 % 3 = \"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// =-10-(-10)/3*3=-10-(-9)=-1</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10 % -3 = \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// =1</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-10 % -3 = \"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//=-1</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><strong>运行结果</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">10 % 3 &#x3D; 1\n-10 % 3 &#x3D;  -1\n10 % -3 &#x3D;  1\n-10 % -3 &#x3D;  -1</code></pre>\n\n<ul>\n<li>++和–的使用</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//演示 ++ 和 -- 的使用</span>\n\t<span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\ti<span class=\"token operator\">++</span> <span class=\"token comment\">//等价 i = i + 1</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i=\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token comment\">//11</span>\n\ti<span class=\"token operator\">--</span> <span class=\"token comment\">//等价 i = i - 1</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i=\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 10</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><strong>运行结果</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">i&#x3D; 11\ni&#x3D; 10</code></pre>\n\n<h3 id=\"算术运算符使用的注意事项\"><a href=\"#算术运算符使用的注意事项\" class=\"headerlink\" title=\"算术运算符使用的注意事项\"></a>算术运算符使用的注意事项</h3><ol>\n<li>对于除号”&#x2F;“，它的整数除和小数除是有区别的：整数之间做除法时，只保留整数部分而舍弃小数部分。例如： x:&#x3D;19&#x2F;5, 结果是3</li>\n<li>当对一个数取模时，可以等价 a%b&#x3D;a-a&#x2F;b*b, 这样我们可以看到 取模的一个本质运算。</li>\n<li>Golang的自增自减只能当作一个独立语言使用时，不能这样使用：</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//在Golang中，++ 和 -- 只能独立使用</span>\n\t<span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span>\n\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span>\n\ta <span class=\"token operator\">=</span> i<span class=\"token operator\">++</span> <span class=\"token comment\">//错误 i++只能独立使用</span>\n\ta <span class=\"token operator\">=</span> i<span class=\"token operator\">--</span> <span class=\"token comment\">//错误 i--只能独立使用</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">++</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<ol start=\"4\">\n<li>Golang的++和–只能写在变量的后面，不能写在变量的前面，即：只有a++,a–；没有++a,–a</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ni<span class=\"token operator\">++</span>\n<span class=\"token operator\">++</span>i <span class=\"token comment\">//错误，在Golang没有 前++</span>\ni<span class=\"token operator\">--</span>\n<span class=\"token operator\">--</span>i <span class=\"token comment\">//错误，在Golang没有 前--</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i=\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></code></pre>\n\n<ol start=\"5\">\n<li>Golang的设计者去掉 c&#x2F;java 中的自增自减的容易混淆的写法，让Golang更加简洁，统一。（强制性的）</li>\n</ol>\n<h3 id=\"课堂练习1\"><a href=\"#课堂练习1\" class=\"headerlink\" title=\"课堂练习1\"></a>课堂练习1</h3><pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ni <span class=\"token operator\">=</span> i<span class=\"token operator\">++</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//问 结果是多少，为什么？</span>\n<span class=\"token comment\">//上面的代码报错，因为i=i++编译不通过</span></code></pre>\n\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">if</span> i<span class=\"token operator\">++</span> <span class=\"token operator\">></span> <span class=\"token number\">10</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//问 结果是多少，为什么？</span>\n<span class=\"token comment\">//上面的代码报错，因为i++ > 10编译不通过</span></code></pre>\n\n<h3 id=\"课堂练习2\"><a href=\"#课堂练习2\" class=\"headerlink\" title=\"课堂练习2\"></a>课堂练习2</h3><ol>\n<li>假如还有97天放假，问:97天相当于几个星期零几天?</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> day <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">97</span>\n<span class=\"token keyword\">var</span> week <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">97</span> <span class=\"token operator\">/</span> <span class=\"token number\">7</span>\n<span class=\"token keyword\">var</span> day <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">97</span> <span class=\"token operator\">%</span> <span class=\"token number\">7</span></code></pre>\n\n<ul>\n<li>解答</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> day <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">97</span>\n\t<span class=\"token keyword\">var</span> week <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> day <span class=\"token operator\">/</span> <span class=\"token number\">7</span>\n\t<span class=\"token keyword\">var</span> aday <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> day <span class=\"token operator\">%</span> <span class=\"token number\">7</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>week<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>aday<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**打印结果：13    6 **/</span></code></pre>\n\n<ol start=\"2\">\n<li>定义一个变量保存华氏温度，华氏温度转换摄氏温度的公式为5&#x2F;9*(华氏温度-100),请求出华氏温度对应的摄氏温度。</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> huashi <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">134.2</span>\n\t<span class=\"token keyword\">var</span> sheshi <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">5.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>huashi <span class=\"token operator\">-</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%v 对应的摄氏温度=%v\\n\"</span><span class=\"token punctuation\">,</span> huashi<span class=\"token punctuation\">,</span> sheshi<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**134.2 对应的摄氏温度=19**/</span></code></pre>\n\n<h2 id=\"关系运算符（比较运算符）\"><a href=\"#关系运算符（比较运算符）\" class=\"headerlink\" title=\"关系运算符（比较运算符）\"></a>关系运算符（比较运算符）</h2><h3 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h3><ol>\n<li>关系运算符的结果都是bool型，也就是 要么是true，要么是false</li>\n<li>关系表达式常用于<strong>if结构</strong>的条件中或<strong>循环结构</strong>的条件中</li>\n</ol>\n<h3 id=\"关系运算符一览图\"><a href=\"#关系运算符一览图\" class=\"headerlink\" title=\"关系运算符一览图\"></a>关系运算符一览图</h3><table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>运算</th>\n<th>范例</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;&#x3D;</td>\n<td>相等于</td>\n<td>4&#x3D;&#x3D;3</td>\n<td>false</td>\n</tr>\n<tr>\n<td>!&#x3D;</td>\n<td>不等于</td>\n<td>4！&#x3D;3</td>\n<td>true</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于</td>\n<td>4&lt;3</td>\n<td>false</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>大于</td>\n<td>4&gt;3</td>\n<td>true</td>\n</tr>\n<tr>\n<td>&lt;&#x3D;</td>\n<td>小于等于</td>\n<td>4&lt;&#x3D;3</td>\n<td>false</td>\n</tr>\n<tr>\n<td>&gt;&#x3D;</td>\n<td>大于等于</td>\n<td>4&gt;&#x3D;3</td>\n<td>true</td>\n</tr>\n</tbody></table>\n<h3 id=\"案例演示-1\"><a href=\"#案例演示-1\" class=\"headerlink\" title=\"案例演示\"></a>案例演示</h3><pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//演示关系运算符的使用</span>\n\tvarn1int<span class=\"token operator\">=</span><span class=\"token number\">9</span>\n\tvarn2int<span class=\"token operator\">=</span><span class=\"token number\">8</span>\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">==</span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span>\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span><span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">!=</span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\n\tfmt <span class=\"token punctuation\">.</span><span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">></span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span><span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">>=</span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\n\tfmt <span class=\"token punctuation\">.</span><span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">&lt;</span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//flase</span>\n\tfmt <span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">&lt;=</span> n2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//flase</span>\n\tflag<span class=\"token operator\">:=</span>n1<span class=\"token operator\">></span>n2\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" flag=\"</span><span class=\"token punctuation\">,</span> f1ag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span>\n </code></pre>\n\n<h3 id=\"关系运算符的细节说明\"><a href=\"#关系运算符的细节说明\" class=\"headerlink\" title=\"关系运算符的细节说明\"></a>关系运算符的细节说明</h3><ol>\n<li>关系运算符的结果都是bool型，也就是要么是true，要么是false。</li>\n<li>关系运算符组成的表达式，我们称为关系表达式：a&gt;b</li>\n<li>**比较运算符”&#x3D;&#x3D;”不能误写成”&#x3D;” **</li>\n</ol>\n<h2 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h2><h3 id=\"基本介绍-1\"><a href=\"#基本介绍-1\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h3><p>用于连接多个条件（一般来讲就是关系表达式），最终的结果也是一个bool值</p>\n<h3 id=\"逻辑运算的说明\"><a href=\"#逻辑运算的说明\" class=\"headerlink\" title=\"逻辑运算的说明\"></a>逻辑运算的说明</h3><p><strong>假定A值为true，B值为false</strong></p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&amp;&amp;</td>\n<td><strong>逻辑与</strong>运算符。如果两边的操作数都是true，则为true，否则为false</td>\n<td>（A&amp;&amp;B)为false</td>\n</tr>\n<tr>\n<td>||</td>\n<td><strong>逻辑或</strong>运算符。如果两边的操作数有一个true,则为true，否则为false。</td>\n<td>（A||B）为true</td>\n</tr>\n<tr>\n<td>！</td>\n<td><strong>逻辑非</strong>运算符。如果条件为true，则逻辑为false，否则为true。</td>\n<td>！(A&amp;&amp;B)为true</td>\n</tr>\n</tbody></table>\n<h3 id=\"案例演示-2\"><a href=\"#案例演示-2\" class=\"headerlink\" title=\"案例演示\"></a>案例演示</h3><pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//演示逻辑运算符的使用8&amp;</span>\n<span class=\"token keyword\">var</span> age <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\n<span class=\"token keyword\">if</span> age <span class=\"token operator\">></span><span class=\"token number\">30</span><span class=\"token operator\">&amp;&amp;</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">&#123;</span>\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">if</span> age <span class=\"token operator\">></span><span class=\"token number\">30</span><span class=\"token operator\">&amp;&amp;</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token punctuation\">&#123;</span>\n\tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"ok2\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//演示逻辑运算符的使用</span>\n<span class=\"token keyword\">if</span> age<span class=\"token operator\">></span>38Ilage<span class=\"token operator\">&lt;</span>5e<span class=\"token punctuation\">&#123;</span>\n\tfmt <span class=\"token punctuation\">.</span> <span class=\"token function\">PrintIn</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"ok3\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">if</span> age<span class=\"token operator\">></span><span class=\"token number\">30</span><span class=\"token operator\">|</span>age<span class=\"token operator\">&lt;</span><span class=\"token number\">40</span><span class=\"token punctuation\">&#123;</span>\n\tfmt <span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"ok4\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n</code></pre>\n\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//演示逻辑运算符的使用!</span>\n<span class=\"token keyword\">if</span> age<span class=\"token operator\">></span><span class=\"token number\">30</span><span class=\"token punctuation\">&#123;</span>\n\tfmt <span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok5\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>age <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tfmt<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok6\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n</code></pre>\n\n<h3 id=\"注意事项和细节说明\"><a href=\"#注意事项和细节说明\" class=\"headerlink\" title=\"注意事项和细节说明\"></a>注意事项和细节说明</h3><ol>\n<li><p>&amp;&amp;也叫<strong>短路与</strong>：如果<strong>第一个条件为false</strong>，则第二个条件不会判断，最终结果为<strong>false</strong></p>\n</li>\n<li><p>||也叫<strong>短路或</strong>：如果<strong>第一个条件为true</strong>，则第二个条件不会判断，最终结果为<strong>true</strong></p>\n</li>\n<li><p>案例演示</p>\n</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//声明一个函数(测试)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"test...\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span><span class=\"token number\">10</span>\n\t<span class=\"token comment\">//短路与</span>\n\t<span class=\"token comment\">//说明因为i &lt; 9为false ,因此后面的test() 就不执行</span>\n\t<span class=\"token keyword\">if</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">9</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   \t \tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"ok..\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">//说明 因为 i > 9为true ,因此后面的test() 就不执行</span>\n\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">></span> <span class=\"token number\">9</span> <span class=\"token operator\">||</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \tfmt<span class=\"token punctuation\">.</span> <span class=\"token function\">Print1n</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"hello...\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h2 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h2><h3 id=\"基本的介绍\"><a href=\"#基本的介绍\" class=\"headerlink\" title=\"基本的介绍\"></a>基本的介绍</h3><p>赋值运算符就是将某个运算后的值，赋给指定的变量。</p>\n<h3 id=\"赋值运算符的分类\"><a href=\"#赋值运算符的分类\" class=\"headerlink\" title=\"赋值运算符的分类\"></a>赋值运算符的分类</h3><table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;</td>\n<td>简单的赋值运算符，将一个表达式的值赋给一个左值</td>\n<td>C&#x3D;A+B将A+B表达式结果赋值给C</td>\n</tr>\n<tr>\n<td>+&#x3D;</td>\n<td>相加后再赋值</td>\n<td>C+&#x3D;A 等于 C&#x3D;C+A</td>\n</tr>\n<tr>\n<td>-&#x3D;</td>\n<td>相减后再赋值</td>\n<td>C-&#x3D;A 等于 C&#x3D;C-A</td>\n</tr>\n<tr>\n<td>*&#x3D;</td>\n<td>相乘后再赋值</td>\n<td>C*&#x3D;A 等于 C&#x3D;C*A</td>\n</tr>\n<tr>\n<td>&#x2F;&#x3D;</td>\n<td>相除后再赋值</td>\n<td>C&#x2F;&#x3D;A 等于 C&#x3D;C&#x2F;A</td>\n</tr>\n<tr>\n<td>%&#x3D;</td>\n<td>求余后再赋值</td>\n<td>C%&#x3D;A 等于 C&#x3D;C%A</td>\n</tr>\n<tr>\n<td>&lt;&lt;&#x3D;</td>\n<td>左移后赋值</td>\n<td>C&lt;&lt;&#x3D;2 等于 C&#x3D;C&lt;&lt;2</td>\n</tr>\n<tr>\n<td>&gt;&gt;&#x3D;</td>\n<td>右移后赋值</td>\n<td>C&gt;&gt;&#x3D;2 等于 C&#x3D;C&gt;&gt;2</td>\n</tr>\n<tr>\n<td>&amp;&#x3D;</td>\n<td>按位与后赋值</td>\n<td>C&amp;&#x3D;2 等于 C&#x3D;C&amp;2</td>\n</tr>\n<tr>\n<td>^&#x3D;</td>\n<td>按位异或后赋值</td>\n<td>C^&#x3D;2 等于 C&#x3D;C^2</td>\n</tr>\n<tr>\n<td>|&#x3D;</td>\n<td>按位或后赋值</td>\n<td>C|&#x3D;2 等于 C&#x3D;C|2</td>\n</tr>\n</tbody></table>\n<p>**说明:**后半部分的赋值运算涉及到二进制相关知识哦！</p>\n<h3 id=\"赋值运算的案例演示\"><a href=\"#赋值运算的案例演示\" class=\"headerlink\" title=\"赋值运算的案例演示\"></a>赋值运算的案例演示</h3><ol>\n<li>赋值基本案例</li>\n<li>有两个变量，a和b，要求将其进行交换，最终打印结果</li>\n<li>+&#x3D;的使用案例</li>\n<li>案例</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//赋值运算符的使用演示</span>\n    <span class=\"token comment\">//var i int</span>\n    <span class=\"token comment\">// i = 10 // 基本赋值</span>\n    \n    <span class=\"token comment\">//有两个变量，a和b，要求将其进行交换，最终打印结果</span>\n    <span class=\"token comment\">// a = 9, b = 2 ==> a = 2 , b = 9</span>\n    a <span class=\"token operator\">:=</span> <span class=\"token number\">9</span>\n    b <span class=\"token operator\">:=</span> <span class=\"token number\">2</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"交换前的情况： a = %v, b = %v\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//定义一个临时变量</span>\n    t <span class=\"token operator\">:=</span> a\n    a <span class=\"token operator\">=</span> b\n    b <span class=\"token operator\">=</span> t\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"交换后的情况: a = %v, b = %v\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">//复合赋值的操作</span>\n    a <span class=\"token operator\">+=</span> <span class=\"token number\">17</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a+=17 --> a = a + 17 = %v\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"赋值运算符的特点\"><a href=\"#赋值运算符的特点\" class=\"headerlink\" title=\"赋值运算符的特点\"></a>赋值运算符的特点</h3><ol>\n<li>运算顺序从右往左</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> c <span class=\"token builtin\">int</span>\nc <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token comment\">// 赋值运算的执行顺序是从右向左</span></code></pre>\n\n<ol start=\"2\">\n<li>赋值运算符的左边 只能是变量，右边可以是变量，表达式，常量值！</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//赋值运算符的左边 只能是变量，右边可以是变量，表达式，常量值！</span>\n<span class=\"token comment\">//表达式:任何有值的都可以看做是表达式</span>\n<span class=\"token keyword\">var</span> d <span class=\"token builtin\">int</span>\nd <span class=\"token operator\">=</span> a <span class=\"token comment\">//</span>\nd <span class=\"token operator\">=</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token comment\">// =的右边是表达式</span>\nd <span class=\"token operator\">=</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">90</span> <span class=\"token comment\">// =的右边是表达式</span>\nd <span class=\"token operator\">=</span> <span class=\"token number\">890</span> <span class=\"token comment\">//890常量</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span></code></pre>\n\n<ol start=\"3\">\n<li>复合赋值运算符等价于下面的效果</li>\n</ol>\n<p>a +&#x3D; 3  &lt;&#x3D;&#x3D;&gt; a &#x3D; a + 3</p>\n<h3 id=\"面试题\"><a href=\"#面试题\" class=\"headerlink\" title=\"面试题\"></a>面试题</h3><p>有两个变量，a和b，要求将其进行交换，但是不允许使用中间变量，最终打印结果</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">9</span>\n\t<span class=\"token keyword\">var</span> b <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\ta <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b    \n\tb <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b   <span class=\"token comment\">//    = a+b-b = a</span>\n\ta <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b   <span class=\"token comment\">//    = a+b-a = b</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a = %v b = %v \"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>牛牛牛！</p>\n<h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h3><table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&amp;</td>\n<td>按位与运算符”&amp;”是双目运算符。其功能是参与运算的两数各对应的二进位相与。运算规则是:同时为1，结果为1,否则为0</td>\n</tr>\n<tr>\n<td>|</td>\n<td>按位或运算符川”是双目运算符。其功能是参 与运算的两数各对应的二进位相或.运算规则是:同时为1，结果为1,否则为0</td>\n</tr>\n<tr>\n<td>^</td>\n<td>按位异或运算符”是双目运算符。其功能是参与运算的两数各对应的二进位相异或。运算规则是:当二进位不同时，结果为1,否则为0</td>\n</tr>\n<tr>\n<td>&lt;&lt;</td>\n<td>左移运算符&lt;&lt;”是双目运算符。其功能把&lt;&lt;”左边的运算数的各二进位全部左移若干位，高位丢弃，低位补0。左移n位就是乘以2的n次方。</td>\n</tr>\n<tr>\n<td>&gt;&gt;</td>\n<td>右移运算符&gt;&gt;”是双目运算符。其功能是把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，右移n位就是除以2的n次方</td>\n</tr>\n</tbody></table>\n<h2 id=\"其他运算符说明\"><a href=\"#其他运算符说明\" class=\"headerlink\" title=\"其他运算符说明\"></a>其他运算符说明</h2><table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&amp;</td>\n<td>返回变量存储地址</td>\n<td>&amp;a;将给出变量a的实际地址</td>\n</tr>\n<tr>\n<td>*</td>\n<td>指针变量</td>\n<td>*a;是一个指针变量</td>\n</tr>\n</tbody></table>\n<p>举例说明：</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//演示一下 &amp; 和 * 的使用</span>\n    a <span class=\"token operator\">:=</span> <span class=\"token number\">100</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a的地址=\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">var</span> ptr <span class=\"token operator\">*</span><span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ptr指向的值是:\"</span> ，<span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h3 id=\"课堂案例\"><a href=\"#课堂案例\" class=\"headerlink\" title=\"课堂案例\"></a>课堂案例</h3><ul>\n<li>案例1：求两个数的最大值</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//求两个数的最大值</span>\n    <span class=\"token keyword\">var</span> n1 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token keyword\">var</span> n2 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\n    <span class=\"token keyword\">var</span> max <span class=\"token builtin\">int</span>\n    <span class=\"token keyword\">if</span> n1 <span class=\"token operator\">></span> n2<span class=\"token punctuation\">&#123;</span>\n        max <span class=\"token operator\">=</span> n1\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        max <span class=\"token operator\">=</span> n2\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max=\"</span><span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<ul>\n<li>案例2：求三个数的最大值</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//求两个数的最大值</span>\n    <span class=\"token keyword\">var</span> n1 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token keyword\">var</span> n2 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\n    <span class=\"token keyword\">var</span> max <span class=\"token builtin\">int</span>\n    <span class=\"token keyword\">if</span> n1 <span class=\"token operator\">></span> n2<span class=\"token punctuation\">&#123;</span>\n        max <span class=\"token operator\">=</span> n1\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        max <span class=\"token operator\">=</span> n2\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max=\"</span><span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//求三个数的最大值思路：先求两个数的最大值，再用第三个数与最大值相比，取较大的数。</span>\n    <span class=\"token keyword\">var</span> n3 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">45</span>\n    <span class=\"token keyword\">if</span> n3 <span class=\"token operator\">></span> max <span class=\"token punctuation\">&#123;</span>\n        max <span class=\"token operator\">=</span> n3\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"三个书中最大值是=\"</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<h2 id=\"特别说明\"><a href=\"#特别说明\" class=\"headerlink\" title=\"特别说明\"></a>特别说明</h2><p>Go语言明确不支持三元运算符，官方<a href=\"https://golang.org/doc/faq#Does_Go_have_a_ternary_form\">说明</a></p>\n<p><img src=\"http://cdn.leafii.top/img/20220520154005.png\"></p>\n<p>演示在Go语言中实现三元运算符的效果：</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> n <span class=\"token builtin\">int</span>\n<span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">var</span> j <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">12</span>\n<span class=\"token comment\">//传统的三元运算</span>\n<span class=\"token comment\">//n = i > j ? i : j</span>\n<span class=\"token keyword\">if</span> i <span class=\"token operator\">></span> j <span class=\"token punctuation\">&#123;</span>\n    n <span class=\"token operator\">=</span> i\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    n <span class=\"token operator\">=</span> j\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">return</span> n <span class=\"token comment\">//12</span></code></pre>\n\n<h2 id=\"运算符的优先级\"><a href=\"#运算符的优先级\" class=\"headerlink\" title=\"运算符的优先级\"></a>运算符的优先级</h2><h3 id=\"运算符的优先级的一览表\"><a href=\"#运算符的优先级的一览表\" class=\"headerlink\" title=\"运算符的优先级的一览表\"></a>运算符的优先级的一览表</h3><p><img src=\"http://cdn.leafii.top/img/20220520154022.png\"></p>\n<h3 id=\"对上图的说明\"><a href=\"#对上图的说明\" class=\"headerlink\" title=\"对上图的说明\"></a>对上图的说明</h3><ol>\n<li>运算符有不同的优先级，所谓优先级就是表达式运算中的运算顺序。如右表，上一行运算符总优先于下一行。</li>\n<li>只有单目运算符、赋值运算符是从右向左运算的。</li>\n<li>梳理一个大概的优先级：<ol>\n<li>括号，++，–</li>\n<li>单目运算</li>\n<li>算术运算符</li>\n<li>移位运算</li>\n<li>关系运算符</li>\n<li>位运算符</li>\n<li>逻辑运算符</li>\n<li>赋值运算符</li>\n<li>逗号</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"键盘输入语句\"><a href=\"#键盘输入语句\" class=\"headerlink\" title=\"键盘输入语句\"></a>键盘输入语句</h2><h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>在编程中，需要接收用户输入的数据，就可以使用键盘输入语句来获取。InputDemo.go</p>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><ol>\n<li>导入fmt包</li>\n<li>调用fmt包的fmt.Scanln()或者fmt.Scanf()</li>\n</ol>\n<p><img src=\"http://cdn.leafii.top/img/20220520154040.png\"></p>\n<p><img src=\"http://cdn.leafii.top/img/20220520154058.png\"></p>\n<h3 id=\"案例演示-3\"><a href=\"#案例演示-3\" class=\"headerlink\" title=\"案例演示\"></a>案例演示</h3><ul>\n<li>要求：可以从控制台接收用户信息，【姓名，年龄，薪水，是否通过考试】</li>\n</ul>\n<ol>\n<li>使用fmt.Scanln()获取</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//要求：可以从控制台接收用户信息，</span>\n<span class=\"token comment\">//【姓名，年龄，薪水，是否通过考试】</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//1. 先声明需要的变量</span>\n<span class=\"token keyword\">var</span> name <span class=\"token builtin\">string</span>\n<span class=\"token keyword\">var</span> age <span class=\"token builtin\">byte</span>\n<span class=\"token keyword\">var</span> sal <span class=\"token builtin\">float32</span>\n<span class=\"token keyword\">var</span> isPass <span class=\"token builtin\">bool</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入姓名\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//当程序执行到 fmt.Scanln(&amp;name),程序会停止在这里，等待用户输入，并回车</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入年龄\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入薪水\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sal<span class=\"token punctuation\">)</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入是否通过考试\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>isPass<span class=\"token punctuation\">)</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名字是 %v \\n年龄是 %v \\n薪水是 %v \\n是否通过考试 %v\\n\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sal<span class=\"token punctuation\">,</span> isPass<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">请输入姓名\nleafii\n请输入年龄\n23\n请输入薪水\n60000\n请输入是否通过考试\ntrue\n名字是 leafii\n年龄是 23\n薪水是 60000\n是否通过考试 true</code></pre>\n\n<ol start=\"2\">\n<li>使用fmt.Scanf()获取</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//要求：可以从控制台接收用户信息，</span>\n<span class=\"token comment\">//【姓名，年龄，薪水，是否通过考试】</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//1. 先声明需要的变量</span>\n\t<span class=\"token keyword\">var</span> name <span class=\"token builtin\">string</span>\n\t<span class=\"token keyword\">var</span> age <span class=\"token builtin\">byte</span>\n\t<span class=\"token keyword\">var</span> sal <span class=\"token builtin\">float32</span>\n\t<span class=\"token keyword\">var</span> isPass <span class=\"token builtin\">bool</span>\n\t<span class=\"token comment\">//方式2：fmt.Scanf，可以按指定的格式输入</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你的姓名，年龄，薪水，是否通过考试，使用空格隔开\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s %d %f %t\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>sal<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>isPass<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名字是 %v \\n年龄是 %v \\n薪水是 %v \\n是否通过考试 %v\\n\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sal<span class=\"token punctuation\">,</span> isPass<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">请输入你的姓名，年龄，薪水，是否通过考试，使用空格隔开\nleafii 23 60000 true\n名字是 leafii\n年龄是 23\n薪水是 60000\n是否通过考试 true</code></pre>\n\n<h2 id=\"进制\"><a href=\"#进制\" class=\"headerlink\" title=\"进制\"></a>进制</h2><p>对于整数，有四种表示方式：</p>\n<ul>\n<li>二进制：0，1，满2进1。在Golang中，不能直接使用二进制来表示一个整数，它沿用了c的特点</li>\n<li>十进制：0-9，满10进1.</li>\n<li>八进制：0-7，满8进1.以数字0开头表示。</li>\n<li>十六进制：0-9及A-F，满16进1。以0x 或0X开头表示。（A到F不区分大小写）</li>\n</ul>\n<h3 id=\"进制的图示\"><a href=\"#进制的图示\" class=\"headerlink\" title=\"进制的图示\"></a>进制的图示</h3><table>\n<thead>\n<tr>\n<th>十进制</th>\n<th>十六进制</th>\n<th>八进制</th>\n<th>二进制</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>2</td>\n<td>10</td>\n</tr>\n<tr>\n<td>3</td>\n<td>3</td>\n<td>3</td>\n<td>11</td>\n</tr>\n<tr>\n<td>4</td>\n<td>4</td>\n<td>4</td>\n<td>100</td>\n</tr>\n<tr>\n<td>5</td>\n<td>5</td>\n<td>5</td>\n<td>101</td>\n</tr>\n<tr>\n<td>6</td>\n<td>6</td>\n<td>6</td>\n<td>110</td>\n</tr>\n<tr>\n<td>7</td>\n<td>7</td>\n<td>7</td>\n<td>111</td>\n</tr>\n<tr>\n<td>8</td>\n<td>8</td>\n<td>10</td>\n<td>1000</td>\n</tr>\n<tr>\n<td>9</td>\n<td>9</td>\n<td>11</td>\n<td>1001</td>\n</tr>\n<tr>\n<td>10</td>\n<td>A</td>\n<td>12</td>\n<td>1010</td>\n</tr>\n<tr>\n<td>11</td>\n<td>B</td>\n<td>13</td>\n<td>1011</td>\n</tr>\n<tr>\n<td>12</td>\n<td>C</td>\n<td>14</td>\n<td>1100</td>\n</tr>\n<tr>\n<td>13</td>\n<td>D</td>\n<td>15</td>\n<td>1101</td>\n</tr>\n<tr>\n<td>14</td>\n<td>E</td>\n<td>16</td>\n<td>1110</td>\n</tr>\n<tr>\n<td>15</td>\n<td>F</td>\n<td>17</td>\n<td>1111</td>\n</tr>\n<tr>\n<td>16</td>\n<td>10</td>\n<td>20</td>\n<td>10000</td>\n</tr>\n<tr>\n<td>17</td>\n<td>11</td>\n<td>21</td>\n<td>10001</td>\n</tr>\n</tbody></table>\n<h3 id=\"进制转换的介绍\"><a href=\"#进制转换的介绍\" class=\"headerlink\" title=\"进制转换的介绍\"></a>进制转换的介绍</h3><p>总览:</p>\n<p><img src=\"http://cdn.leafii.top/img/20220520154112.png\"></p>\n<h3 id=\"其他进制转十进制\"><a href=\"#其他进制转十进制\" class=\"headerlink\" title=\"其他进制转十进制\"></a>其他进制转十进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154125.png\"></p>\n<h3 id=\"二进制如何转十进制\"><a href=\"#二进制如何转十进制\" class=\"headerlink\" title=\"二进制如何转十进制\"></a>二进制如何转十进制</h3><p>134 &#x3D; 4 * 1 + 3 * 10 + 10 * 10 &#x3D; 4 + 30 + 100 &#x3D; 134</p>\n<ul>\n<li><p><strong>规则：</strong>从最低位开始（右边），将每个位上的数提取出来，乘以2的（位数-1）次方然后<strong>求和</strong>。</p>\n</li>\n<li><p>案例： 请将二进制：1011转成十进制的数</p>\n</li>\n</ul>\n<p>1011 &#x3D; 1 * 1 + 1 * 2 + 0 * 2  * 2 + 1 * 2 * 2 * 2 &#x3D; 1 + 2 + 0 + 8 &#x3D; 11</p>\n<h3 id=\"八进制转换成十进制实例\"><a href=\"#八进制转换成十进制实例\" class=\"headerlink\" title=\"八进制转换成十进制实例\"></a>八进制转换成十进制实例</h3><ul>\n<li><p><strong>规则：</strong>从最低位开始（右边），将每个位上的数提取出来，乘以8的（位数-1）次方然后<strong>求和</strong>。</p>\n</li>\n<li><p>案例:请将0123转成十进制的数</p>\n</li>\n</ul>\n<p>0123 &#x3D; 3 * 1 + 2 * 8 + 1 * 8 * 8 + 0 * 8 * 8 * 8 &#x3D; 3 + 16 + 64 &#x3D; 83</p>\n<h3 id=\"十六进制转成十进制\"><a href=\"#十六进制转成十进制\" class=\"headerlink\" title=\"十六进制转成十进制\"></a>十六进制转成十进制</h3><ul>\n<li><p><strong>规则：</strong>从最低位开始（右边），将每个位上的数提取出来，乘以16的（位数-1）次方然后<strong>求和</strong>。</p>\n</li>\n<li><p>案例：请将0x34A转成十进制的数</p>\n</li>\n</ul>\n<p>0x34A &#x3D; 10 * 1 + 4 * 16 + 3 * 16 * 16 &#x3D; 10 + 64 + 768 &#x3D; 842</p>\n<h3 id=\"其他进制转成10进制的课堂练习\"><a href=\"#其他进制转成10进制的课堂练习\" class=\"headerlink\" title=\"其他进制转成10进制的课堂练习\"></a>其他进制转成10进制的课堂练习</h3><ul>\n<li><p>课堂练习: 请将</p>\n<ul>\n<li>二进制： 110001100 转成十进制</li>\n</ul>\n<p>110001100(2) &#x3D;1 * 2 <sup>2</sup>+ 1 * 2 <sup>3</sup> + 1 * 2<sup>7</sup> + 1 * 2<sup>8</sup> &#x3D; 396</p>\n<ul>\n<li>八进制： 02456 转成十进制</li>\n</ul>\n<p>02456(8) &#x3D; 6 * 1 + 5 * 8 + 4 * 8<sup>2</sup> + 2 * 8<sup>3</sup> &#x3D;  1326 </p>\n<ul>\n<li>十六进制： 0xA45 转成十进制</li>\n</ul>\n<p>0xA45 (16) &#x3D;  5 * 1 + 4 * 16 + 10 * 16<sup>2</sup> &#x3D; 2629</p>\n</li>\n</ul>\n<h3 id=\"十进制如何转成其他进制\"><a href=\"#十进制如何转成其他进制\" class=\"headerlink\" title=\"十进制如何转成其他进制\"></a>十进制如何转成其他进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154336.png\"></p>\n<h3 id=\"十进制如何转二进制\"><a href=\"#十进制如何转二进制\" class=\"headerlink\" title=\"十进制如何转二进制\"></a>十进制如何转二进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154356.png\"></p>\n<h3 id=\"十进制转成八进制\"><a href=\"#十进制转成八进制\" class=\"headerlink\" title=\"十进制转成八进制\"></a>十进制转成八进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154409.png\"></p>\n<h3 id=\"十进制转十六进制\"><a href=\"#十进制转十六进制\" class=\"headerlink\" title=\"十进制转十六进制\"></a>十进制转十六进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154423.png\"></p>\n<h3 id=\"课堂练习\"><a href=\"#课堂练习\" class=\"headerlink\" title=\"课堂练习\"></a>课堂练习</h3><ul>\n<li><p>请将</p>\n<ul>\n<li>123 转成二进制</li>\n</ul>\n<p>123（10） &#x3D;   1111011 (2)</p>\n<ul>\n<li>678转成八进制</li>\n</ul>\n<p>678(10) &#x3D; 1246(8)</p>\n<ul>\n<li>8912 转成十六进制</li>\n</ul>\n<p>8912(10) &#x3D; 22D0(16)</p>\n</li>\n</ul>\n<h3 id=\"二进制如何转成八进制、十六进制\"><a href=\"#二进制如何转成八进制、十六进制\" class=\"headerlink\" title=\"二进制如何转成八进制、十六进制\"></a>二进制如何转成八进制、十六进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154440.png\"></p>\n<h3 id=\"二进制转换成八进制\"><a href=\"#二进制转换成八进制\" class=\"headerlink\" title=\"二进制转换成八进制\"></a>二进制转换成八进制</h3><ul>\n<li><p>**规则:**将二进制数每三位一组(从低位开始组合),转成对应的八进制数即可。</p>\n</li>\n<li><p>案例:请将二进制: 11010101 转成八进制<br>11010101&#x3D; 0325</p>\n</li>\n</ul>\n<h3 id=\"二进制转成十六进制\"><a href=\"#二进制转成十六进制\" class=\"headerlink\" title=\"二进制转成十六进制\"></a>二进制转成十六进制</h3><ul>\n<li><p>**规则:**将二进制数每四位一组(从低位开始组合),转成对应的十六进制数即可。</p>\n</li>\n<li><p>案例:请将二进制: 11010101 转成十六进制</p>\n<p>11010101 &#x3D; 0xD5</p>\n</li>\n<li><p>课堂练习：请将</p>\n<ul>\n<li>二进制：11100101 转成 八进制</li>\n<li>二进制： 1110010110 转成 十六进制</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"八进制、十六进制转成二进制\"><a href=\"#八进制、十六进制转成二进制\" class=\"headerlink\" title=\"八进制、十六进制转成二进制\"></a>八进制、十六进制转成二进制</h3><p><img src=\"http://cdn.leafii.top/img/20220520154455.png\"></p>\n<h3 id=\"八进制转成二进制\"><a href=\"#八进制转成二进制\" class=\"headerlink\" title=\"八进制转成二进制\"></a>八进制转成二进制</h3><ul>\n<li><p><strong>规则：</strong>将八进制数每一位，转成对应的一个3位的二进制数即可。</p>\n</li>\n<li><p>案例：请将0237转换成二进制</p>\n<p>0237（8） &#x3D; 10011111（2）</p>\n</li>\n</ul>\n<h3 id=\"十六进制转成二进制\"><a href=\"#十六进制转成二进制\" class=\"headerlink\" title=\"十六进制转成二进制\"></a>十六进制转成二进制</h3><ul>\n<li><p><strong>规则：将十六进制数每一位，转成对应的一个4位的二进制数即可。</strong></p>\n</li>\n<li><p>案例：请将0x237转成二进制</p>\n<p>0x237(16) &#x3D; 1000110111(2)</p>\n</li>\n</ul>\n<h2 id=\"位运算\"><a href=\"#位运算\" class=\"headerlink\" title=\"位运算\"></a>位运算</h2><h3 id=\"位运算的思考题\"><a href=\"#位运算的思考题\" class=\"headerlink\" title=\"位运算的思考题\"></a>位运算的思考题</h3><ol>\n<li>请看下面的代码段，回答a,b,c,d结果是多少？</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">var</span> b <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">var</span> c <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">var</span> d <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span>\n    <span class=\"token comment\">//a b c d结果是多少？</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a=\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b=\"</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c=\"</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d=\"</span><span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/*\na= 0\nb= -1\nc= 4\nd= -4\n*/</span></code></pre>\n\n<ol start=\"2\">\n<li>请回答在Golang中，下面的表达式运算的结果是：</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">&amp;</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token operator\">&amp;</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token operator\">^</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**\n2\n3\n5\n-2\n*/</span></code></pre>\n\n<h3 id=\"二进制在运算中的说明\"><a href=\"#二进制在运算中的说明\" class=\"headerlink\" title=\"二进制在运算中的说明\"></a>二进制在运算中的说明</h3><p>二进制是逢2进位的进位制，0、1是基本算符。</p>\n<p>现代的电子计算机技术全部采用的是二进制，因为它只使用0、1两个数学符号，非常简单方便，易于用电子方式实现。计算机内部处理的信息，都是采用二进制数来表示的。二进制（Binary）数用0和1两个数字及其组合来表示任何数。进位规则是“逢2进1“，数字1在不同的位上代表不同的值，按从右至左的次序，这个值以二倍递增。</p>\n<p>在计算机的内部，运行各种运算时，都是以二进制的方式来运行。</p>\n<h3 id=\"原码、反码、补码\"><a href=\"#原码、反码、补码\" class=\"headerlink\" title=\"原码、反码、补码\"></a>原码、反码、补码</h3><p><img src=\"http://cdn.leafii.top/img/20220520154512.png\"></p>\n<h3 id=\"位运算符和移位运算符\"><a href=\"#位运算符和移位运算符\" class=\"headerlink\" title=\"位运算符和移位运算符\"></a>位运算符和移位运算符</h3><ul>\n<li>Golang有3个位运算<ul>\n<li>按位与&amp;    ：    两位全为1，结果为1，否则为0</li>\n<li>按位或|    ：    两位有一个为1，结果为1，否则为0</li>\n<li>按位异或^    ：    两位一个为0，一个为1，结果为1，否则为0</li>\n</ul>\n</li>\n<li>案例练习</li>\n</ul>\n<p>2&amp;3&#x3D;?  2|3&#x3D;?  2^3&#x3D;?</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">//2&amp;3=?  2|3=?  2^3=?</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">&amp;</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//2</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">|</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//3</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//3</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//-4</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<p><img src=\"http://cdn.leafii.top/img/20220520154525.png\"></p>\n<ul>\n<li><p>Golang中有两个移位运算符：</p>\n<ul>\n<li>右移运算符   &gt;&gt;:    低位溢出，符号位不变，并用符号位补溢出的高位</li>\n<li>左移运算符    &lt;&lt;:    符号位不变，低位补0</li>\n</ul>\n</li>\n<li><p>案例演示</p>\n<p>a :&#x3D; 1 &gt;&gt; 2   &#x2F;&#x2F;  0000 0001 &#x3D;&gt; 0000 0000  &#x3D; 0</p>\n<p>c :&#x3D; 1 &lt;&lt; 2 &#x2F;&#x2F; 0000 0001 &#x3D;&#x3D;&gt; 0000 0100 &#x3D;&gt; 4</p>\n</li>\n</ul>","categories":[],"tags":[{"name":"Go","path":"api/tags/Go.json"}]}
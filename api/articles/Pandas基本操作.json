{"title":"Pandas基本操作","slug":"Pandas基本操作","date":"2022-06-05T15:23:07.000Z","updated":"2022-06-05T16:32:09.156Z","comments":true,"path":"api/articles/Pandas基本操作.json","excerpt":"Pandas基本操作​        本文对Pandas中的一些基本操作进行描述。","covers":null,"content":"<h1 id=\"Pandas基本操作\"><a href=\"#Pandas基本操作\" class=\"headerlink\" title=\"Pandas基本操作\"></a>Pandas基本操作</h1><p>​        本文对Pandas中的一些基本操作进行描述。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"从文件读取数据\"><a href=\"#从文件读取数据\" class=\"headerlink\" title=\"从文件读取数据\"></a>从文件读取数据</h2><p>​        有很多 Pandas 的教学，一开始一般都是开始教 Pandas 的数据结构或者运算方法。 但是我觉得，当你想要使用 Pandas 的时候，<strong>更多是因为你手头有 Excel 数据或者比较格式化的数据， 需要处理分析和表达这些数据。为了解决你这种当务之急，我觉得先解决读取数据这回事。</strong></p>\n<p>​        以下操作需要用到的文件为<code>[&#39;体检数据.xlsx&#39;, &#39;体检数据.csv&#39;, &#39;体检数据_sep.csv&#39;, &#39;体检数据_sep.txt&#39;]</code></p>\n<h3 id=\"Excel文件\"><a href=\"#Excel文件\" class=\"headerlink\" title=\"Excel文件\"></a>Excel文件</h3><p>​        <a href=\"https://mofanpy.com/static/files/%E4%BD%93%E6%A3%80%E6%95%B0%E6%8D%AE.xlsx\">点击下载</a>所需文件，下载后用Excel打开文件后是这样：</p>\n<p>![](<a href=\"http://cdn.leafii.top/img/Screen\">http://cdn.leafii.top/img/Screen</a> Shot 2022-06-05 at 23.31.25.png)</p>\n<ul>\n<li><code>pd.read_excel()</code></li>\n</ul>\n<p>​        将文件放在适宜的目录，我们就可以使用<code>read_excel()</code>方法读出文件了。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据.xlsx\"</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ndf</code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">    姓名   身高  体重   肺活量\n学号\n1   小明  168  60  3200\n2   小黄  187  80  3800\n3   小花  170  70  3400</code></pre>\n\n<p>​        在函数中的<code>index_col=0</code>就是告诉Pandas，让它使用第一个column（学号）的数据当作row索引。后面还有很多读取的功能里也有一样的参数。</p>\n<ul>\n<li><code>df.to_excel()</code></li>\n</ul>\n<p>​        好，我们既然可以读取Excel文件，那么稍稍修改，再保存起来应该也不成问题。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"体重\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_修改.xlsx\"</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        其实在读取和保存 Excel 文件的时候，还有很多额外的参数可供选择，因为太多了，我们这里就先讲最常用的，如果你要深入研究， 可以到他们的官网来看<a href=\"https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html#pandas.read_excel\">官方文档</a>。</p>\n<h3 id=\"csv或txt等纯文本文件\"><a href=\"#csv或txt等纯文本文件\" class=\"headerlink\" title=\"csv或txt等纯文本文件\"></a>csv或txt等纯文本文件</h3><p>​        下载需要的文件：<a href=\"https://mofanpy.com/static/files/%E4%BD%93%E6%A3%80%E6%95%B0%E6%8D%AE.csv\">链接</a>，使用纯文本编辑器打开，就能看到它最原始的样貌了。</p>\n<p>![](<a href=\"http://cdn.leafii.top/img/Screen\">http://cdn.leafii.top/img/Screen</a> Shot 2022-06-05 at 23.44.57.png)</p>\n<ul>\n<li><code>pd.read_csv()</code></li>\n</ul>\n<p>​        使用Python的open打开纯文本文件：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据.csv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<pre class=\"language-none\"><code class=\"language-none\">学号,姓名,身高,体重,肺活量\n1,小明,168,60,3200\n2,小黄,187,80,3800\n3,小花,170,70,3400</code></pre>\n\n<p>​        使用pandas的<code>read_csv()</code>方法：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">df_csv <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据.csv\"</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ndf_csv</code></pre>\n\n<pre class=\"language-none\"><code class=\"language-none\">学号,姓名,身高,体重,肺活量\n1,小明,168,60,3200\n2,小黄,187,80,3800\n3,小花,170,70,3400</code></pre>\n\n<p>​        有的时候，你不能保证别人给你的数据，是不是一份标准格式的数据，比如别人不喜欢用 <code>,</code> 来分隔数据点， 而是喜欢用什么乱七八糟的 <code>=</code> 来分隔。这时，Pandas 帮你考虑到了这种问题， 你可以挑选要用哪个字符来识别这些分隔。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep.csv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndf_csv <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep.csv\"</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span>\ndf_csv</code></pre>\n\n<p>​        提到 csv，你可能还会想用 Excel 打开看看，但是提到 txt，一般你也不会想用 Excel 打开了吧。用 Pandas 打开一个 txt 文件和打开一个 csv 文件，、 其实本质上是一样的，都是打开一个纯文本文件。所以下面我再打开一下 txt。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndf_txt <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep.txt\"</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span>\ndf_txt</code></pre>\n\n<ul>\n<li><code>df.to_csv()</code></li>\n</ul>\n<p>​        能打开，我们就能保存，保存方法同样很简单，只需要 <code>df.to_csv()</code> 就好了，甚至，你还能保存到 Excel 文件，在 Pandas 中它们是可以互相转换的。 同理用 <code>read_excel()</code> 打开的，也能存成 <code>to_csv()</code>。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">df_txt<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep_修改.csv\"</span><span class=\"token punctuation\">)</span>\ndf_txt<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep_修改.xlsx\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读保存后的 csv\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep_修改.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读保存后的 xlsx\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep_修改.xlsx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        做数据分析和机器学习，会用上面的方法来读 Excel 或者是纯文本，我们就已经解决了大部分的需求了。下面我来介绍几个我觉得 Pandas 的额外几个有趣的读取方式。</p>\n<h3 id=\"其它有趣的\"><a href=\"#其它有趣的\" class=\"headerlink\" title=\"其它有趣的\"></a>其它有趣的</h3><ul>\n<li><code>pd.read_clipboard()</code></li>\n</ul>\n<p>​        从剪切板里面读取数据，这个很有意思，使用场景并不多，但是指不定哪天你要用 Python 写 APP 的时候，就能用到这个，不是有很多 APP 会识别你的剪切板， 方便你直接复制数据吗。这个功能说不定就能派上用场。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_clipboard<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf</code></pre>\n\n<ul>\n<li><code>pd.read_html()</code></li>\n</ul>\n<p>​        另外一个是从网页中获取表格型数据，就像下面这个表格。我们也能用 Pandas 调取解析网页当中的表格数据。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_html<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://mofanpy.com/tutorials/data-manipulation/pandas/read-save/\"</span><span class=\"token punctuation\">)</span>\ndf</code></pre>\n\n<p>​        还有一些功能，比如让 Pandas 读数据库，读 Json 等，你都可能在后期自己开发的时候偶尔用到。只要用到的时候，查查 <a href=\"https://pandas.pydata.org/docs/reference/io.html\">Pandas 官方文档</a> 还是很有帮助的。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>​        大千世界，数据也是多样的，Pandas 量身为你定制了很多读取数据的方法。从做数据分析和机器学习最常用的 Excel、csv、txt 数据等，到 html，剪切板等有趣的数据类型， 一个 Pandas 都可以帮你搞定。了解完读存数据，接下来，我们就来认真了解，数据在 Pandas 中到底是一个什么样的东西。</p>\n<h2 id=\"Pandas中的数据是什么\"><a href=\"#Pandas中的数据是什么\" class=\"headerlink\" title=\"Pandas中的数据是什么\"></a>Pandas中的数据是什么</h2>","more":"<h2 id=\"从文件读取数据\"><a href=\"#从文件读取数据\" class=\"headerlink\" title=\"从文件读取数据\"></a>从文件读取数据</h2><p>​        有很多 Pandas 的教学，一开始一般都是开始教 Pandas 的数据结构或者运算方法。 但是我觉得，当你想要使用 Pandas 的时候，<strong>更多是因为你手头有 Excel 数据或者比较格式化的数据， 需要处理分析和表达这些数据。为了解决你这种当务之急，我觉得先解决读取数据这回事。</strong></p>\n<p>​        以下操作需要用到的文件为<code>[&#39;体检数据.xlsx&#39;, &#39;体检数据.csv&#39;, &#39;体检数据_sep.csv&#39;, &#39;体检数据_sep.txt&#39;]</code></p>\n<h3 id=\"Excel文件\"><a href=\"#Excel文件\" class=\"headerlink\" title=\"Excel文件\"></a>Excel文件</h3><p>​        <a href=\"https://mofanpy.com/static/files/%E4%BD%93%E6%A3%80%E6%95%B0%E6%8D%AE.xlsx\">点击下载</a>所需文件，下载后用Excel打开文件后是这样：</p>\n<p>![](<a href=\"http://cdn.leafii.top/img/Screen\">http://cdn.leafii.top/img/Screen</a> Shot 2022-06-05 at 23.31.25.png)</p>\n<ul>\n<li><code>pd.read_excel()</code></li>\n</ul>\n<p>​        将文件放在适宜的目录，我们就可以使用<code>read_excel()</code>方法读出文件了。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据.xlsx\"</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ndf</code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">    姓名   身高  体重   肺活量\n学号\n1   小明  168  60  3200\n2   小黄  187  80  3800\n3   小花  170  70  3400</code></pre>\n\n<p>​        在函数中的<code>index_col=0</code>就是告诉Pandas，让它使用第一个column（学号）的数据当作row索引。后面还有很多读取的功能里也有一样的参数。</p>\n<ul>\n<li><code>df.to_excel()</code></li>\n</ul>\n<p>​        好，我们既然可以读取Excel文件，那么稍稍修改，再保存起来应该也不成问题。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"体重\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_修改.xlsx\"</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        其实在读取和保存 Excel 文件的时候，还有很多额外的参数可供选择，因为太多了，我们这里就先讲最常用的，如果你要深入研究， 可以到他们的官网来看<a href=\"https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html#pandas.read_excel\">官方文档</a>。</p>\n<h3 id=\"csv或txt等纯文本文件\"><a href=\"#csv或txt等纯文本文件\" class=\"headerlink\" title=\"csv或txt等纯文本文件\"></a>csv或txt等纯文本文件</h3><p>​        下载需要的文件：<a href=\"https://mofanpy.com/static/files/%E4%BD%93%E6%A3%80%E6%95%B0%E6%8D%AE.csv\">链接</a>，使用纯文本编辑器打开，就能看到它最原始的样貌了。</p>\n<p>![](<a href=\"http://cdn.leafii.top/img/Screen\">http://cdn.leafii.top/img/Screen</a> Shot 2022-06-05 at 23.44.57.png)</p>\n<ul>\n<li><code>pd.read_csv()</code></li>\n</ul>\n<p>​        使用Python的open打开纯文本文件：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据.csv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<pre class=\"language-none\"><code class=\"language-none\">学号,姓名,身高,体重,肺活量\n1,小明,168,60,3200\n2,小黄,187,80,3800\n3,小花,170,70,3400</code></pre>\n\n<p>​        使用pandas的<code>read_csv()</code>方法：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">df_csv <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据.csv\"</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ndf_csv</code></pre>\n\n<pre class=\"language-none\"><code class=\"language-none\">学号,姓名,身高,体重,肺活量\n1,小明,168,60,3200\n2,小黄,187,80,3800\n3,小花,170,70,3400</code></pre>\n\n<p>​        有的时候，你不能保证别人给你的数据，是不是一份标准格式的数据，比如别人不喜欢用 <code>,</code> 来分隔数据点， 而是喜欢用什么乱七八糟的 <code>=</code> 来分隔。这时，Pandas 帮你考虑到了这种问题， 你可以挑选要用哪个字符来识别这些分隔。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep.csv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndf_csv <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep.csv\"</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span>\ndf_csv</code></pre>\n\n<p>​        提到 csv，你可能还会想用 Excel 打开看看，但是提到 txt，一般你也不会想用 Excel 打开了吧。用 Pandas 打开一个 txt 文件和打开一个 csv 文件，、 其实本质上是一样的，都是打开一个纯文本文件。所以下面我再打开一下 txt。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndf_txt <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep.txt\"</span><span class=\"token punctuation\">,</span> index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span>\ndf_txt</code></pre>\n\n<ul>\n<li><code>df.to_csv()</code></li>\n</ul>\n<p>​        能打开，我们就能保存，保存方法同样很简单，只需要 <code>df.to_csv()</code> 就好了，甚至，你还能保存到 Excel 文件，在 Pandas 中它们是可以互相转换的。 同理用 <code>read_excel()</code> 打开的，也能存成 <code>to_csv()</code>。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">df_txt<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep_修改.csv\"</span><span class=\"token punctuation\">)</span>\ndf_txt<span class=\"token punctuation\">.</span>to_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep_修改.xlsx\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读保存后的 csv\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep_修改.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读保存后的 xlsx\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/体检数据_sep_修改.xlsx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        做数据分析和机器学习，会用上面的方法来读 Excel 或者是纯文本，我们就已经解决了大部分的需求了。下面我来介绍几个我觉得 Pandas 的额外几个有趣的读取方式。</p>\n<h3 id=\"其它有趣的\"><a href=\"#其它有趣的\" class=\"headerlink\" title=\"其它有趣的\"></a>其它有趣的</h3><ul>\n<li><code>pd.read_clipboard()</code></li>\n</ul>\n<p>​        从剪切板里面读取数据，这个很有意思，使用场景并不多，但是指不定哪天你要用 Python 写 APP 的时候，就能用到这个，不是有很多 APP 会识别你的剪切板， 方便你直接复制数据吗。这个功能说不定就能派上用场。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_clipboard<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf</code></pre>\n\n<ul>\n<li><code>pd.read_html()</code></li>\n</ul>\n<p>​        另外一个是从网页中获取表格型数据，就像下面这个表格。我们也能用 Pandas 调取解析网页当中的表格数据。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_html<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://mofanpy.com/tutorials/data-manipulation/pandas/read-save/\"</span><span class=\"token punctuation\">)</span>\ndf</code></pre>\n\n<p>​        还有一些功能，比如让 Pandas 读数据库，读 Json 等，你都可能在后期自己开发的时候偶尔用到。只要用到的时候，查查 <a href=\"https://pandas.pydata.org/docs/reference/io.html\">Pandas 官方文档</a> 还是很有帮助的。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>​        大千世界，数据也是多样的，Pandas 量身为你定制了很多读取数据的方法。从做数据分析和机器学习最常用的 Excel、csv、txt 数据等，到 html，剪切板等有趣的数据类型， 一个 Pandas 都可以帮你搞定。了解完读存数据，接下来，我们就来认真了解，数据在 Pandas 中到底是一个什么样的东西。</p>\n<h2 id=\"Pandas中的数据是什么\"><a href=\"#Pandas中的数据是什么\" class=\"headerlink\" title=\"Pandas中的数据是什么\"></a>Pandas中的数据是什么</h2>","categories":[],"tags":[{"name":"python","path":"api/tags/python.json"},{"name":"机器学习基础","path":"api/tags/机器学习基础.json"}]}
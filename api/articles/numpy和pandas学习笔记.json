{"title":"numpy和pandas学习笔记","slug":"numpy和pandas学习笔记","date":"2022-05-17T13:36:13.000Z","updated":"2022-06-05T15:20:54.739Z","comments":true,"path":"api/articles/numpy和pandas学习笔记.json","excerpt":"Numpy和Pandas学习笔记记录学习的内容，方便今后查阅","covers":["http://cdn.leafii.top/img/Screen%20Shot%202022-05-19%20at%2020.05.47.png","http://cdn.leafii.top/img/Screen%20Shot%202022-05-19%20at%2020.29.07.png","http://cdn.leafii.top/img/20220519202955.png","http://cdn.leafii.top/img/20220520104622.png","http://cdn.leafii.top/img/20220520232800.png"],"content":"<h1 id=\"Numpy和Pandas学习笔记\"><a href=\"#Numpy和Pandas学习笔记\" class=\"headerlink\" title=\"Numpy和Pandas学习笔记\"></a>Numpy和Pandas学习笔记</h1><p>记录学习的内容，方便今后查阅</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Numpy\"><a href=\"#Numpy\" class=\"headerlink\" title=\"Numpy\"></a>Numpy</h2><h3 id=\"Numpy的安装\"><a href=\"#Numpy的安装\" class=\"headerlink\" title=\"Numpy的安装\"></a>Numpy的安装</h3><p>​        直接使用<code>pip3 install numpy</code>即可，可以在终端使用<code>python3 -c &quot;import numpy&quot;</code>判断是否安装成功，如果在终端里直接输入这个语句没有任何反应，那么说明numpy是安装成功可以使用了的</p>\n<h3 id=\"Numpy-array-和-Python的List的差别\"><a href=\"#Numpy-array-和-Python的List的差别\" class=\"headerlink\" title=\"Numpy array 和 Python的List的差别\"></a>Numpy array 和 Python的List的差别</h3><h4 id=\"Numpy-array的定义\"><a href=\"#Numpy-array的定义\" class=\"headerlink\" title=\"Numpy array的定义\"></a>Numpy array的定义</h4><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token comment\">#定义numpy array</span>\nnp<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h4 id=\"List-和-Numpy-array-共同点\"><a href=\"#List-和-Numpy-array-共同点\" class=\"headerlink\" title=\"List 和 Numpy array 共同点\"></a>List 和 Numpy array 共同点</h4><ul>\n<li>它们都可以用来存储、提取以及修改</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\nmy_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nmy_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#都可以正常打印噢</span>\nmy_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\nmy_array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_array<span class=\"token punctuation\">)</span></code></pre>\n\n<h4 id=\"Numpy-array的优势何在？\"><a href=\"#Numpy-array的优势何在？\" class=\"headerlink\" title=\"Numpy array的优势何在？\"></a>Numpy array的优势何在？</h4><p>​        Numpy的运算速度快，numpy array在内存中使用连续地址，并不像List使用不连续的地址块，因此速度上就有差异，而且Numpy对于批量数据的存储的数据格式也更有效率</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>​        Numpy Array 和 Python List 在很多使用场景上是可以互换的，不过在大数据处理的场景下，而且你的数据类型又高度统一， 那么 Numpy 绝对是你不二的人选，能提升的运算速度也是杠杠的~</p>\n<h3 id=\"Numpy的基本操作\"><a href=\"#Numpy的基本操作\" class=\"headerlink\" title=\"Numpy的基本操作\"></a>Numpy的基本操作</h3><h4 id=\"Numpy中的维度\"><a href=\"#Numpy中的维度\" class=\"headerlink\" title=\"Numpy中的维度\"></a>Numpy中的维度</h4><p>​        Numpy在多维数据的计算上速度很快！！！我们来学一下怎么用numpy创建并处理多维数据</p>\n<h5 id=\"创建多维数据\"><a href=\"#创建多维数据\" class=\"headerlink\" title=\"创建多维数据\"></a>创建多维数据</h5><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token comment\">#创建一维</span>\ncars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">,</span><span class=\"token string\">\"维度：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#创建二维</span>\ncars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">5.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">8.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">6.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">4.4</span><span class=\"token punctuation\">,</span><span class=\"token number\">9.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">6.6</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">,</span><span class=\"token string\">\"维度：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#创建三维</span>\ncars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">5.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">8.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">6.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">4.4</span><span class=\"token punctuation\">,</span><span class=\"token number\">9.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">6.6</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">6.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">9.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">7.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">5.4</span><span class=\"token punctuation\">,</span><span class=\"token number\">10.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">7.6</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">,</span><span class=\"token string\">\"维度：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"场地1 数据：\\n\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n场地1 维度:\"</span>，cars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"场地2 数据：\\n\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n场地2 维度:\"</span>，cars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">)</span></code></pre>\n\n<h5 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a>添加数据</h5><ul>\n<li>把两个一维数组变成一个二维数组</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">cars1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncars2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>cars1<span class=\"token punctuation\">,</span>cars2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#concatenate的意思是连接</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">)</span></code></pre>\n\n<ul>\n<li>数据换成二维数组之后想要添加数据</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">test1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ntest2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 首先需要把它们都变成二维，下面这两种方法都可以加维度</span>\ntest1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>test1<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ntest2 <span class=\"token operator\">=</span> test2<span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test1加维度后 \"</span><span class=\"token punctuation\">,</span> test1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test2加维度后 \"</span><span class=\"token punctuation\">,</span> test2<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 然后再在第一个维度上叠加</span>\nall_tests <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>test1<span class=\"token punctuation\">,</span> test2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"括展后\\n\"</span><span class=\"token punctuation\">,</span> all_tests<span class=\"token punctuation\">)</span></code></pre>\n\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">test1加维度后  [[ 5 10 12  6]]\ntest2加维度后  [[ 5.1  8.2 11.   6.3]]\n括展后\n [[ 5.  10.  12.   6. ]\n [ 5.1  8.2 11.   6.3]]</code></pre>\n\n<h5 id=\"合并数据\"><a href=\"#合并数据\" class=\"headerlink\" title=\"合并数据\"></a>合并数据</h5><ul>\n<li>只要维度能够对齐，你可以在任意维度上进行合并操作</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第一维度叠加：\\n\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>all_tests<span class=\"token punctuation\">,</span> all_tests<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第二维度叠加：\\n\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>all_tests<span class=\"token punctuation\">,</span> all_tests<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">第一维度叠加：\n [[ 5.  10.  12.   6. ]\n [ 5.1  8.2 11.   6.3]\n [ 5.  10.  12.   6. ]\n [ 5.1  8.2 11.   6.3]]\n第二维度叠加：\n [[ 5.  10.  12.   6.   5.  10.  12.   6. ]\n [ 5.1  8.2 11.   6.3  5.1  8.2 11.   6.3]]</code></pre>\n\n<p>​        看来axis为0的时候，就是把二维数组和二维数组直接合并，而axis为1的时候就是把相对应的数据合并成一个数组，两个数组的原有位置关系不变</p>\n<ul>\n<li>转载一个好的理解axis方法：axis这个参数实际上就是表示的你要修改哪一维度的数据。举个栗子：<br>   有两组数据，它们的维度都是（2，3），即都是两行三列的数据。有小伙伴可能会发愁，当这两组数据合并时，axis参数设为0到底是横向操作还是竖向操作，肯定有小伙伴要在这里思考一下，实际上不用这么麻烦哒~<br>    当axis设为0时，表示我们要修改第一个维度的数据，两组数据的第一个维度都是2，当它们合并时就变成了4，所以合并后的数据的维度就是（4，3），即变成了四行三列。通过这样子思考，就再也不用努力回想到底是横向合并还是竖向合并啦hh<br>    同理，axis设为1，合并后的数据维度就变成了（2，6），即两行六列~<br>    同理，axis参数在其他方法里也可以用同样的方法思考，比如求均值的mean方法，当axis设为0时，对第一个维度的数据进行求均值，维度为（2，3）的数据计算完后就变成了维度为（1，3）的数据，是不是很好理解~</li>\n</ul>\n<p>​        而且除了<code>np.concatenate()</code>之外，还有&#96;&#96;np.vstack()<code>, </code>np.hstack()<code>.</code>这两个方法在二维数组上可以将数据进行横向合并和纵向合并：</p>\n<p><img src=\"http://cdn.leafii.top/img/Screen%20Shot%202022-05-19%20at%2020.05.47.png\" alt=\"横向合并\" loading=\"lazy\"></p>\n<p><img src=\"http://cdn.leafii.top/img/Screen%20Shot%202022-05-19%20at%2020.29.07.png\" alt=\"纵向合并\" loading=\"lazy\"></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"竖直合并\\n\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"水平合并\\n\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">竖直合并\n [[1 2]\n [3 4]\n [5 6]\n [7 8]]\n水平合并\n [[1 2 5 6]\n [3 4 7 8]]</code></pre>\n\n<h5 id=\"观察形态\"><a href=\"#观察形态\" class=\"headerlink\" title=\"观察形态\"></a>观察形态</h5><p>​        除了 <code>np.ndim</code> 来查看数据的形态，其实我们有时候还想更加了解数据的细节问题，比如这个数据的大小，规格。方便我们管理这些数据。</p>\n<ul>\n<li>当我想知道到底有多少车辆测试数据时，你可能会通过遍历的方法来计数。</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">cars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">4.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.6</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ncount <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"总共多少测试数据：\"</span><span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span>        </code></pre>\n\n<p>​        但以下代码与上面代码等价：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"总共多少测试数据：\"</span><span class=\"token punctuation\">,</span> cars<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span></code></pre>\n\n<ul>\n<li>想知道数组有几行（第一维度）几列（第二维度）</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">cars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">4.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.6</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第一个维度：\"</span><span class=\"token punctuation\">,</span> cars<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第二个维度：\"</span><span class=\"token punctuation\">,</span> cars<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"所有维度：\"</span><span class=\"token punctuation\">,</span> cars<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">第一个维度： 3\n第二个维度： 4\n所有维度： (3, 4)</code></pre>\n\n<p>​        <strong>要好好理解维度噢，这很重要</strong></p>\n<h4 id=\"用numpy进行数据选择\"><a href=\"#用numpy进行数据选择\" class=\"headerlink\" title=\"用numpy进行数据选择\"></a>用numpy进行数据选择</h4><p>​        可以使用numpy进行对数据的选择，不管是批量划分，还是按条件筛选，都可以哦qwq</p>\n<h5 id=\"单个选取\"><a href=\"#单个选取\" class=\"headerlink\" title=\"单个选取\"></a>单个选取</h5><ul>\n<li><code>array[1]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#一个一个选qwq！</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[0]:\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[1]:\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p><img src=\"http://cdn.leafii.top/img/20220519202955.png\" alt=\"array[1]\" loading=\"lazy\"></p>\n<ul>\n<li><code>array[1,2,3]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#一次选择多个</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[[0,1]]:\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[[1,1,0]]:\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n\n<ul>\n<li><code>array[1][1]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#对二维数组进行选择</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 选第 2 行所有数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[1]:\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   \n\n<span class=\"token comment\"># 选第 2 行，第 1 列的数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[1,0]:\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   \n\n<span class=\"token comment\"># 这个看着有点纠结，如果对应到数据，</span>\n<span class=\"token comment\"># 第一个拿的是数据位是 [1,2]</span>\n<span class=\"token comment\"># 第二个拿的是 [0,3]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[[1,0],[2,3]]:\\n\"</span><span class=\"token punctuation\">,</span> \nb<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n\n<p>​        总之，不管是几维数据，我们都可以在其不同维度上挑选那个维度上对应序号上的数值。而且还能一次从原数据上选取多个数据点。</p>\n<h5 id=\"切片划分\"><a href=\"#切片划分\" class=\"headerlink\" title=\"切片划分\"></a>切片划分</h5><ul>\n<li><code>array[:3]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[0:2]：\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[1:]：\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[-2:]：\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#使用 : 就能让你跨着取数字，而且一次取一批。注意，在 Numpy 中：一次取一批和一个个拎起来，拎了一批，是不同的概念哦 一次取一批来的更快， 因为它不用去一个个查看，一个个数了。</span></code></pre>\n\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">a[0:2]：\n [1 2]\na[1:]：\n [2 3]\na[-2:]：\n [2 3]</code></pre>\n\n<p><img src=\"http://cdn.leafii.top/img/20220520104622.png\" alt=\"切片划分\" loading=\"lazy\"></p>\n<ul>\n<li><code>array[2:4, 1:3]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#在多维上，也可以进行切片划分</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[:2]:\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[:2, :3]:\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[1:3, -2:]:\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">b[:2]:\n [[1 2 3 4]\n [5 6 7 8]]\nb[:2, :3]:\n [[1 2 3]\n [5 6 7]]\nb[1:3, -2:]:\n [[ 7  8]\n [11 12]]</code></pre>\n\n<h5 id=\"条件筛选\"><a href=\"#条件筛选\" class=\"headerlink\" title=\"条件筛选\"></a>条件筛选</h5><ul>\n<li><code>array[array&lt;0]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>a<span class=\"token operator\">></span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#运行结果如下</span>\n<span class=\"token comment\">#[ 8  9 10 11 12]</span>\n<span class=\"token comment\">#a>7 的返回结果是布尔类型</span>\ncondition <span class=\"token operator\">=</span> a <span class=\"token operator\">></span> <span class=\"token number\">7</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>condition<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#运行结果如下</span>\n<span class=\"token comment\">#[[False False False False]</span>\n<span class=\"token comment\">#[False False False  True]</span>\n<span class=\"token comment\">#[ True  True  True  True]]</span>\n<span class=\"token comment\">#[ 8  9 10 11 12]</span></code></pre>\n\n<p>​        这种筛选的底层逻辑就是只要我们得到一种True和False数据，那么就可以进行筛选。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">condition <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">!=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>condition<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[ 8  9 11 12]</span></code></pre>\n\n<ul>\n<li><code>np.where(array, array &lt; 0)</code></li>\n</ul>\n<p>​        除了这种直接用<code>[]</code>的形式，在 Numpy 中，还有一个专用的函数来做数据筛选。这种筛选更强大，它还能做筛选结果的替换工作。 它可已将满足条件的位置变成你设定的数字。下面满足条件的，都改成 <code>-1</code>，不满足的，都还是 <code>a</code> 里面的数字。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncondition <span class=\"token operator\">=</span> a <span class=\"token operator\">></span> <span class=\"token number\">7</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[[ 1  2  3  4]</span>\n<span class=\"token comment\">#[ 5  6  7 -1]</span>\n<span class=\"token comment\">#[-1 -1 -1 -1]]</span></code></pre>\n\n<p>​        或者将不满足条件的也变成你期望的数字或者另一组数据</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncondition <span class=\"token operator\">=</span> a <span class=\"token operator\">></span> <span class=\"token number\">7</span>\n<span class=\"token comment\">#满足的变成-1，不满足的变成2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[[ 2  2  2  2]</span>\n<span class=\"token comment\">#[ 2  2  2 -1]</span>\n<span class=\"token comment\">#[-1 -1 -1 -1]]</span>\n<span class=\"token comment\">#定义b</span>\nb <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>a <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[[-2 -3 -4 -5]</span>\n<span class=\"token comment\">#[-6 -7 -8  8]</span>\n<span class=\"token comment\">#[ 9 10 11 12]]</span></code></pre>\n\n<p>​        所以 <code>np.where()</code> 函数真的十分强大，每每当我想要按条件选择、替换数据的时候，我脑海中，都是 <code>np.where()</code> 的身影。</p>\n<h5 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>​        数据虽然有格式，但是如果要把数据用起来，还是得学会挑选和筛选。而今天介绍的单个、分段、条件筛选，都是数据工程师必备的一项技能。也是后续数据分析和机器学习的基石。</p>\n<h4 id=\"基础运算\"><a href=\"#基础运算\" class=\"headerlink\" title=\"基础运算\"></a>基础运算</h4><h5 id=\"加减乘除\"><a href=\"#加减乘除\" class=\"headerlink\" title=\"加减乘除\"></a>加减乘除</h5><ul>\n<li>在Python的List中进行计算的常规步骤</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">166</span><span class=\"token punctuation\">,</span><span class=\"token number\">183</span><span class=\"token punctuation\">,</span><span class=\"token number\">170</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#* 使用循环</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    l<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[153, 169, 186, 173]</span>\n\n<span class=\"token comment\">#* 使用map函数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">166</span><span class=\"token punctuation\">,</span><span class=\"token number\">183</span><span class=\"token punctuation\">,</span><span class=\"token number\">170</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[153, 169, 186, 173]</span></code></pre>\n\n<ul>\n<li>使用numpy的方式进行计算 <code>+-*/</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">166</span><span class=\"token punctuation\">,</span><span class=\"token number\">183</span><span class=\"token punctuation\">,</span><span class=\"token number\">170</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[153 169 186 173]</span></code></pre>\n\n<p>​        Numpy 是可以批量进行计算的，只需要简单的 <code>+-*/</code>，就能进行全元素的运算，也就是向量化运算。同理，我们也可以进行其他符号的批量运算。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a + 3:\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a - 3:\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a * 3:\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a / 3:\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#a + 3: [153 169 186 173]</span>\n<span class=\"token comment\">#a - 3: [147 163 180 167]</span>\n<span class=\"token comment\">#a * 3: [450 498 549 510]</span>\n<span class=\"token comment\">#a / 3: [50.         55.33333333 61.         56.66666667]</span></code></pre>\n\n<ul>\n<li>矩阵点积运算 <code>np.dot()</code></li>\n</ul>\n<p><img src=\"http://cdn.leafii.top/img/20220520232800.png\" loading=\"lazy\"></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[[19 22]</span>\n<span class=\"token comment\">#[43 50]]</span>\n<span class=\"token comment\">#[[19 22]</span>\n<span class=\"token comment\">#[43 50]]</span></code></pre>\n\n<p>​        因此，我们可以得知，dot函数有两种写法，一种是<code>a.dot(b)</code>，另一种是<code>np.dot(a,b)</code>，矩阵还有很多其他的计算，比如 <code>np.outer()</code> 矩阵外积，<code>np.inner()</code> 矩阵内积 （和 <code>np.dot()</code> 的用法稍稍有些不同，你可以理解成 <code>np.dot(a, b）= np.inner(a, b.T)</code>, 把 b 做一次转置）。</p>\n<h5 id=\"数据统计分析\"><a href=\"#数据统计分析\" class=\"headerlink\" title=\"数据统计分析\"></a>数据统计分析</h5><p>​        在数据分析时，大部分时间还是以pandas的使用为主，但是数据量比较大的时候，可以使用numpy，毕竟numpy的速度比Pandas要快上不少。</p>\n<p>​        数据分析的定义：在数据中找到你想要的一些变量，总结数据的规律。</p>\n<ul>\n<li><code>np.max() np.min() np.sum() np.prod() np.count()</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#对给定的身高数据，找最高的和最矮的</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">166</span><span class=\"token punctuation\">,</span><span class=\"token number\">183</span><span class=\"token punctuation\">,</span><span class=\"token number\">170</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max:\"</span><span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"min:\"</span><span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#或者</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max:\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"min:\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#计算累加和</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#计算累乘</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#计算总共有几个值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#计算一共有多少个非零值</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arrat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"非零总数：\"</span><span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span>count_nonzero<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n\n<ul>\n<li><code>np.std() np.mean() np.median()</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">month_salary <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"标准差：\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">(</span>month_salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"平均工资：\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>month_salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"工资中位数：\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>median<span class=\"token punctuation\">(</span>month_salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h5 id=\"特殊运算符号\"><a href=\"#特殊运算符号\" class=\"headerlink\" title=\"特殊运算符号\"></a>特殊运算符号</h5><ul>\n<li><code>np.argmax() np.argmin()</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166</span><span class=\"token punctuation\">,</span> <span class=\"token number\">183</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nname <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"小米\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"OPPO\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Huawei\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"诺基亚\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#关心最大/最小数值的序号 使用argmax()/argmin()</span>\nhigh_idx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nlow_idx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>argmin<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;&#125; 最高\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">[</span>high_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;&#125; 最矮\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">[</span>low_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<ul>\n<li><code>np.ceil() np.floor() np.clip()</code></li>\n</ul>\n<p>​        另外一个时不时会用到的功能是，取天花板的值还是地板的值，这个在 AI 算法中也比较常见， 比如我要对其做<strong>取整处理</strong>，抹除小数部分。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">150.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">183.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170.8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ceil:\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>ceil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"floor:\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>floor<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        可以用 <code>np.clip()</code> 来做上下界限的值截取</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">150.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">183.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170.8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clip:\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>clip<span class=\"token punctuation\">(</span><span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h5 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>​        其实 Numpy 中做数据运算的功能，比我这里列举的要多很多，我只是列举了一些我在数据分析和人工智能算法中，经常会使用到的一些功能。 还有更多的功能，可以在他的<a href=\"https://numpy.org/devdocs/user/quickstart.html#basic-operations\">官方网站</a>查找哦。</p>\n<h4 id=\"改变数据形态\"><a href=\"#改变数据形态\" class=\"headerlink\" title=\"改变数据形态\"></a>改变数据形态</h4><p>​        如何做数据的变换？</p>\n<h5 id=\"改变形态\"><a href=\"#改变形态\" class=\"headerlink\" title=\"改变形态\"></a>改变形态</h5><ul>\n<li><code>array[np.newaxis, :]</code></li>\n</ul>\n<p>​        改变形态，其实是针对与多维度空间上的数据，要改变它的维度信息，和每个维度中的数据格式。所以第一点你就要清楚，如何添加维度。 其实在 <a href=\"https://mofanpy.com/tutorials/data-manipulation/numpy/ndarray/\">多维数据教程中</a> 中我们就提到过添加维度的方法，我这里在总结括展一下。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na_2d <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> a_2d<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#(6,) (1, 6)</span></code></pre>\n\n<p>​        除了这种方式的其它几种，能达到同样效果的方式。比如用 <code>None</code> 或者 <code>np.expand_dims()</code></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na_none <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span>\na_expand <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a_none<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span>a_expand<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#(6, 1) (6, 1)</span></code></pre>\n\n<p>​         除了添加维度，我们还能减少维度，但是下面介绍的减少维度，只能减少那些维度 shape 上为 1 的维度。因为减掉这个维度，数据结构上是没有变化的。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a_squeeze <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span>a_expand<span class=\"token punctuation\">)</span>\na_squeeze_axis <span class=\"token operator\">=</span> a_expand<span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a_squeeze<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a_squeeze_axis<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#(6,)</span>\n<span class=\"token comment\">#(6,)</span></code></pre>\n\n<ul>\n<li><code>array.reshape()</code></li>\n</ul>\n<p>​        上述方法都是添加维度的方式，但是，在机器学习中，我们还有一个更常见的操作，是要改变 shape。维度的添加减少，只能添加减少一个维度，数据结构是不变的。 但是 <code>np.reshape()</code> 可以改变数据结构。 举个例子，<code>a[None, :]</code> 之后，<code>a.shape</code> 会在第一个维度上多一个 1，而 <code>a.reshape([2,3])</code> 则可以更加自定义的将维度内的个数进行修改。 从而达到改变维度及尺寸。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na1 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na2 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a1 shape:\"</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a2 shape:\"</span><span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a2<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">a1 shape: (2, 3)\n[[1 2 3]\n [4 5 6]]\na2 shape: (3, 1, 2)\n[[[1 2]]\n\n [[3 4]]\n\n [[5 6]]]</code></pre>\n\n<ul>\n<li><code>array.ravel(), array.flatten()</code></li>\n</ul>\n<p>​        其实还有更过的改变形态的方法，比如让数据变直、展平 的 <code>np.ravel()</code>, <code>np.flatten()</code>，这两个比较特殊， 我会在对速度有洁癖这节的时候详细说明。</p>\n<ul>\n<li><code>array.transpose()</code></li>\n</ul>\n<p>​        在矩阵运算的时候，也有一种形态的转化，叫做矩阵转置，<code>np.transpose()</code>, 在机器学习中也用得很多。这里提一下， 给一个小案例，你们玩玩试试。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\naT1 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>T\naT2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>aT1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>aT2<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​         运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[[1 4]\n [2 5]\n [3 6]]\n[[1 4]\n [2 5]\n [3 6]]</code></pre>\n\n\n\n<h5 id=\"合并\"><a href=\"#合并\" class=\"headerlink\" title=\"合并\"></a>合并</h5><ul>\n<li><code>np.column_stack(), np.row_stack()</code></li>\n</ul>\n<p>​        在介绍多维数组的时候， 我们也稍微介绍了一下如何添加和并数组。现在我们再详细把数组的合并拆解都细说一下。</p>\n<p>​        一般来说，在数据分析统计，机器学习中的数据，都是以二维来存储的。行是数据样本（第一维度），列是特征（第二维度）。 所以我们可以组合特征和组合样本。 比如将列<code>column</code>合并，特征 a 的数据和特征 b 的数据合并。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">feature_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nfeature_b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nc_stack <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>column_stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>feature_a<span class=\"token punctuation\">,</span> feature_b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c_stack<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[[ 1 11]\n [ 2 22]\n [ 3 33]\n [ 4 44]\n [ 5 55]\n [ 6 66]]</code></pre>\n\n<p>​        一条条的数据 sample 和并。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">sample_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nsample_b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nc_stack <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>row_stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>sample_a<span class=\"token punctuation\">,</span> sample_b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c_stack<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[[0.  1.1]\n [1.  2.2]]</code></pre>\n\n<ul>\n<li><code>np.vstack(), np.hstack(), np.stack()</code></li>\n</ul>\n<p>​        上面的两种方法 <code>np.column_stack()</code> 和 <code>np.row_stack()</code> 和后面的 <code>np.vstack()</code>、<code>np.hstack()</code> 相比， 有些特殊之处，我们先看看使用 <code>vstack</code> 和 <code>hstack</code> 的案例，再说说不同处吧。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">feature_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span>\nfeature_b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span>\nc_stack <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>feature_a<span class=\"token punctuation\">,</span>feature_b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c_stack<span class=\"token punctuation\">)</span>\n\nsample_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\nsample_b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\nc_stack <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>sample_a<span class=\"token punctuation\">,</span>sample_b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c_stack<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[[ 1 11]\n [ 2 22]\n [ 3 33]\n [ 4 44]\n [ 5 55]\n [ 6 66]]\n[[0.  1.1]\n [1.  2.2]]</code></pre>\n\n<p>​        看到了吗？用 <code>column_stack</code> 和 <code>row_stack()</code> 的时候，Numpy 自动帮你处理的维度信息，而用 <code>vstack</code> 和 <code>hstack</code> 的时候，你需要先确保维度信息是正确的，然后再合并。</p>\n<ul>\n<li><code>np.concatenate()</code></li>\n</ul>\n<p>​        有时候，你想要用统一的方法来处理各种不同情况的合并，<code>np.concatenate()</code> 是我最喜欢的方法，管它什么 <code>vstack</code> <code>hstack</code> 甚至是在更高维度上要合并， 我们都可以用 <code>concatenate()</code> 一个功能实现。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[[1 2]\n [3 4]\n [5 6]\n [7 8]]\n[[1 2 5 6]\n [3 4 7 8]]</code></pre>\n\n\n\n<h5 id=\"拆解\"><a href=\"#拆解\" class=\"headerlink\" title=\"拆解\"></a>拆解</h5><ul>\n<li><code>np.vsplit(), np.hsplit(), np.split()</code></li>\n</ul>\n<p>​        同样，能横着，竖着合并，那也能横着竖着拆解。<code>np.vsplit()</code> 和 <code>np.hsplit()</code> 就是干这事的。 如果直接在 <code>indices_or_sections</code> 后填入数字，就是要整分的段数， 而如果接着的是一个列表，那就按照列表中的 index 来取区间。可以看看下面代码注解中的意思。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>vsplit<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> indices_or_sections<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 分成两段</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>vsplit<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> indices_or_sections<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 分片成 [:2]，[2:3], [3:]</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[array([[ 1, 11,  2, 22],\n       [ 3, 33,  4, 44]]), array([[ 5, 55,  6, 66],\n       [ 7, 77,  8, 88]])]\n[array([[ 1, 11,  2, 22],\n       [ 3, 33,  4, 44]]), array([[ 5, 55,  6, 66]]), array([[ 7, 77,  8, 88]])]</code></pre>\n\n<p>​        <code>np.vsplit</code> 是拿着刀沿着横向切分，那么 <code>np.hsplit</code> 就是沿纵向切分，我就不再举例了。那么有没有既能横切也能纵切的函数呢？ 当然有呀，和 <code>stack</code> 一样，如果直接用 <code>np.split()</code> 你就能选择要切分的维度来自定义切分了。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> indices_or_sections<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 分成两段</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> indices_or_sections<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 在第二维度，分片成 [:2]，[2:3]，[3:]</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[array([[ 1, 11,  2, 22],\n       [ 3, 33,  4, 44]]), array([[ 5, 55,  6, 66],\n       [ 7, 77,  8, 88]])]\n[array([[ 1, 11],\n       [ 3, 33],\n       [ 5, 55],\n       [ 7, 77]]), array([[2],\n       [4],\n       [6],\n       [8]]), array([[22],\n       [44],\n       [66],\n       [88]])]</code></pre>\n\n<h5 id=\"总结-3\"><a href=\"#总结-3\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>​         形态变化和合并拆解都是十分有用的功能，我们介绍了很多种实用的方法来完成这些事， 而懂了这些之后，你的数据分析和机器学习才算是真正迈入入圈的第一步。</p>\n<h2 id=\"Pandas\"><a href=\"#Pandas\" class=\"headerlink\" title=\"Pandas\"></a>Pandas</h2><h3 id=\"Pandas简介-amp-安装\"><a href=\"#Pandas简介-amp-安装\" class=\"headerlink\" title=\"Pandas简介&amp;安装\"></a>Pandas简介&amp;安装</h3><h4 id=\"为什么用Pandas\"><a href=\"#为什么用Pandas\" class=\"headerlink\" title=\"为什么用Pandas\"></a>为什么用Pandas</h4><p>​\t\t进入大数据时代，感觉我们如果不会一些分析数据的能力，就将要被时代淘汰（明目张胆拉焦虑）。 不过好在现在的技术越来越好，越来越易用，而且网络上也有越来越多的教学内容。 只要你有一些耐心，入门其实并不难。</p>\n<p>​\t\t现在我们将要步入新的阶段，对大数据做出新的定义，直面大数据带来的挑战，学会使用 Pandas 来处理你日常的表格&#x2F;画图&#x2F;数据分析等问题。</p>\n<h5 id=\"你正在面临的问题\"><a href=\"#你正在面临的问题\" class=\"headerlink\" title=\"你正在面临的问题\"></a>你正在面临的问题</h5><p>​\t\t大数据虽然描述的是海量的数据，但是大数据离你却并不远，特别是大数据所涵盖的技术，在你生活当中，是时刻都能使用这些大数据涉及到的技术， 来解决你生活中的具体问题。</p>\n<p>​\t\t是什么时候才会让我想要使用 Pandas 来处理问题呢？我下面列一条，说不定就有你正面临的问题：</p>\n<ul>\n<li>办公自动化<ul>\n<li>上学上班，有 Excel 或者格式化的文本文件，需要进行数据加工处理</li>\n<li>对大量的这些文本文件作图，想要自动化处理</li>\n</ul>\n</li>\n<li>人工智能<ul>\n<li>数据分析，可视化数据规律</li>\n<li>数据前处理，为 AI 模型展平道路</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Pandas是什么\"><a href=\"#Pandas是什么\" class=\"headerlink\" title=\"Pandas是什么\"></a>Pandas是什么</h4><p>​\t\t简单来说，Pandas 是 Python 中一个比较常用的第三方库，里面集成了很多和数据相关的功能组件。上面提到的那些场景中， 无非就是要：</p>\n<ol>\n<li>处理数据</li>\n<li>分析数据</li>\n<li>画图</li>\n</ol>\n<p>​\t\t所以 Pandas 就围绕着这些环节施展能力。而且它承接了 Numpy 的能力，使用的底层也是 Numpy。按理来说，我们也能用 Numpy 来实现上述功能， 但为什么 Pandas 还是这么广为流传呢？关于这个话题，我想在后文中详细论述。</p>\n<h4 id=\"总结-4\"><a href=\"#总结-4\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>​\t\tPandas 是数据的伙伴，帮你处理和分析海量数据，学会用 Python，会很常需要处理数据，只要需要处理数据，希望你都能回想起来有这么一位数据伙伴的存在。</p>\n<h3 id=\"安装Pandas\"><a href=\"#安装Pandas\" class=\"headerlink\" title=\"安装Pandas\"></a>安装Pandas</h3><h5 id=\"安装Python（略）\"><a href=\"#安装Python（略）\" class=\"headerlink\" title=\"安装Python（略）\"></a>安装Python（略）</h5><h5 id=\"安装Pandas-1\"><a href=\"#安装Pandas-1\" class=\"headerlink\" title=\"安装Pandas\"></a>安装Pandas</h5><p>​\t\t打开cmd或者terminal，输入指令：</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> pandas\n<span class=\"token comment\">#或者</span>\npip3 <span class=\"token function\">install</span> pandas</code></pre>\n\n<p>​\t\t安装完成后，打开python编辑器，输入下列代码</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#0    1</span>\n<span class=\"token comment\">#1    2</span>\n<span class=\"token comment\">#2    3</span>\n<span class=\"token comment\">#dtype: int64\t\t</span></code></pre>\n\n<h5 id=\"总结-5\"><a href=\"#总结-5\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>​\t\t在本地安装起来很简单，使用 Python 自带的 pip 就好了。记得安装好了之后检查一下是否能正常运行， 和是否安装到其他 Python 版本里去了（如果你电脑里有多个 Python 版本的话）。</p>\n<h3 id=\"Pandas和Numpy的差别\"><a href=\"#Pandas和Numpy的差别\" class=\"headerlink\" title=\"Pandas和Numpy的差别\"></a>Pandas和Numpy的差别</h3><p>​\t\t我们已经讲过，Pandas 是在 Numpy 上的封装。 继承了 Numpy 的所有优点，但是这种封装有好有坏，我们在这节内容中就先来阐述一下 Pandas 和 Numpy 的对比。</p>\n<h4 id=\"类比Python\"><a href=\"#类比Python\" class=\"headerlink\" title=\"类比Python\"></a>类比Python</h4><p>​\t\t用过 Python，你肯定熟悉里面的 List 和 Dictionary, 我比较常拿这两种形态来对比 Numpy 和 Pandas 的关系。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\na_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list:\"</span><span class=\"token punctuation\">,</span> a_list<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#list: [1, 2, 3]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dict:\"</span><span class=\"token punctuation\">,</span> a_dict<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#dict: &#123;'a': 1, 'b': 2, 'c': 3&#125;</span></code></pre>\n\n<p>​\t\t上面就是一种最常见的 Python 列表和字典表达方式。而下面，我们展示的就是 Numpy 和 Pandas 的一种构建方式。 试着执行下面的代码。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\na_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n     <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"numpy array:\\n\"</span><span class=\"token punctuation\">,</span> a_array<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\npandas df:\\n\"</span><span class=\"token punctuation\">,</span> a_df<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​\t\t运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">numpy array:\n [[1 2]\n [3 4]]\n\npandas df:\n    a  b\n0  1  2\n1  3  4</code></pre>\n\n<p>​\t\t你会发现，我们看到的结果中，Numpy的是没有任何数据标签信息的，你可以认为它是纯数据；而Pandas就像字典一样，还记录着数据的外围信息，比如标签名(Column)和索引(Row index)。所以我总说Numpy是Python里的列表，而Pandas是Python里的字典。</p>\n<h4 id=\"对比Numpy\"><a href=\"#对比Numpy\" class=\"headerlink\" title=\"对比Numpy\"></a>对比Numpy</h4><p>​\t\t对于数据运算，既然我们有了 Numpy，为什么还要用 Pandas？对比列表和字典，我们很容易感受到其中的一种原因：Pandas帮我们记录的信息量变多了。</p>\n<p>​\t\t在Numpy中，如果你不特别在其他地方标注，你是不清楚记录的这里边记录的是什么信息的，而Pandas记录的信息可以特别丰富，你给别人使用传播数据的时候，这些信息也会一起传递过去。或者你自己处理数据时对照着信息来加工数据，也会更加友善。这就是在我看来Pandas对比Numpy的一个最直观的好处。</p>\n<p>​\t\t<strong>另外 Pandas 用于处理数据的功能也比较多，信息种类也更丰富，特别是你有一些包含字符的表格，Pandas 可以帮你处理分析这些字符型的数据表。 当然还有很多其它功能，比如处理丢失信息，多种合并数据方式，读取和保存为更可读的形式等等。</strong></p>\n<p>​\t\t但是Pandas也有不足的地方：<strong>运算速度稍微比Numpy慢一些。</strong></p>\n<p>​\t\t你想想，因为Pandas是在Numpy之上的一层封装，所以肯定在处理数据的时候要多几层处理，小数据量的处理不要紧，慢一点就慢一点，你也感受不到处理速度的变化；但是当数据量变大时，Numpy处理需要1小时的数据，你用Pandas处理可能得2小时。所以在使用时需要注意自己的实际需求。比如：如果在做少量数据的分析时，因为不涉及到机器学习的模型运算等，我都可以用 Pandas，但如果要模型训练， 训练过程中还一直要调用数据处理的功能， 我肯定毫不犹豫都用 Numpy 来做。</p>\n<h4 id=\"总结-6\"><a href=\"#总结-6\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>​\t\tPandas 是 Numpy 的封装库，继承了 Numpy 的很多优良传统，也具备丰富的功能组件，但是你还是得分情况来酌情选择要使用的工具。</p>\n<hr>\n<p>注：该笔记非原创，主要是对<a href=\"https://mofanpy.com/\">该网站</a>中教程内容的记录</p>\n","more":"<h2 id=\"Numpy\"><a href=\"#Numpy\" class=\"headerlink\" title=\"Numpy\"></a>Numpy</h2><h3 id=\"Numpy的安装\"><a href=\"#Numpy的安装\" class=\"headerlink\" title=\"Numpy的安装\"></a>Numpy的安装</h3><p>​        直接使用<code>pip3 install numpy</code>即可，可以在终端使用<code>python3 -c &quot;import numpy&quot;</code>判断是否安装成功，如果在终端里直接输入这个语句没有任何反应，那么说明numpy是安装成功可以使用了的</p>\n<h3 id=\"Numpy-array-和-Python的List的差别\"><a href=\"#Numpy-array-和-Python的List的差别\" class=\"headerlink\" title=\"Numpy array 和 Python的List的差别\"></a>Numpy array 和 Python的List的差别</h3><h4 id=\"Numpy-array的定义\"><a href=\"#Numpy-array的定义\" class=\"headerlink\" title=\"Numpy array的定义\"></a>Numpy array的定义</h4><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token comment\">#定义numpy array</span>\nnp<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h4 id=\"List-和-Numpy-array-共同点\"><a href=\"#List-和-Numpy-array-共同点\" class=\"headerlink\" title=\"List 和 Numpy array 共同点\"></a>List 和 Numpy array 共同点</h4><ul>\n<li>它们都可以用来存储、提取以及修改</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\nmy_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nmy_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#都可以正常打印噢</span>\nmy_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\nmy_array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_array<span class=\"token punctuation\">)</span></code></pre>\n\n<h4 id=\"Numpy-array的优势何在？\"><a href=\"#Numpy-array的优势何在？\" class=\"headerlink\" title=\"Numpy array的优势何在？\"></a>Numpy array的优势何在？</h4><p>​        Numpy的运算速度快，numpy array在内存中使用连续地址，并不像List使用不连续的地址块，因此速度上就有差异，而且Numpy对于批量数据的存储的数据格式也更有效率</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>​        Numpy Array 和 Python List 在很多使用场景上是可以互换的，不过在大数据处理的场景下，而且你的数据类型又高度统一， 那么 Numpy 绝对是你不二的人选，能提升的运算速度也是杠杠的~</p>\n<h3 id=\"Numpy的基本操作\"><a href=\"#Numpy的基本操作\" class=\"headerlink\" title=\"Numpy的基本操作\"></a>Numpy的基本操作</h3><h4 id=\"Numpy中的维度\"><a href=\"#Numpy中的维度\" class=\"headerlink\" title=\"Numpy中的维度\"></a>Numpy中的维度</h4><p>​        Numpy在多维数据的计算上速度很快！！！我们来学一下怎么用numpy创建并处理多维数据</p>\n<h5 id=\"创建多维数据\"><a href=\"#创建多维数据\" class=\"headerlink\" title=\"创建多维数据\"></a>创建多维数据</h5><pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token comment\">#创建一维</span>\ncars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">,</span><span class=\"token string\">\"维度：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#创建二维</span>\ncars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">5.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">8.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">6.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">4.4</span><span class=\"token punctuation\">,</span><span class=\"token number\">9.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">6.6</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">,</span><span class=\"token string\">\"维度：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#创建三维</span>\ncars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">5.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">8.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">6.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">4.4</span><span class=\"token punctuation\">,</span><span class=\"token number\">9.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">6.6</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">6.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">9.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">7.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">5.4</span><span class=\"token punctuation\">,</span><span class=\"token number\">10.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">7.6</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">,</span><span class=\"token string\">\"维度：\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"场地1 数据：\\n\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n场地1 维度:\"</span>，cars<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"场地2 数据：\\n\"</span><span class=\"token punctuation\">,</span>cars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n场地2 维度:\"</span>，cars<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">)</span></code></pre>\n\n<h5 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a>添加数据</h5><ul>\n<li>把两个一维数组变成一个二维数组</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">cars1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncars2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5.2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>cars1<span class=\"token punctuation\">,</span>cars2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#concatenate的意思是连接</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">)</span></code></pre>\n\n<ul>\n<li>数据换成二维数组之后想要添加数据</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">test1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ntest2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 首先需要把它们都变成二维，下面这两种方法都可以加维度</span>\ntest1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>test1<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ntest2 <span class=\"token operator\">=</span> test2<span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test1加维度后 \"</span><span class=\"token punctuation\">,</span> test1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test2加维度后 \"</span><span class=\"token punctuation\">,</span> test2<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 然后再在第一个维度上叠加</span>\nall_tests <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>test1<span class=\"token punctuation\">,</span> test2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"括展后\\n\"</span><span class=\"token punctuation\">,</span> all_tests<span class=\"token punctuation\">)</span></code></pre>\n\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">test1加维度后  [[ 5 10 12  6]]\ntest2加维度后  [[ 5.1  8.2 11.   6.3]]\n括展后\n [[ 5.  10.  12.   6. ]\n [ 5.1  8.2 11.   6.3]]</code></pre>\n\n<h5 id=\"合并数据\"><a href=\"#合并数据\" class=\"headerlink\" title=\"合并数据\"></a>合并数据</h5><ul>\n<li>只要维度能够对齐，你可以在任意维度上进行合并操作</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第一维度叠加：\\n\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>all_tests<span class=\"token punctuation\">,</span> all_tests<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第二维度叠加：\\n\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>all_tests<span class=\"token punctuation\">,</span> all_tests<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">第一维度叠加：\n [[ 5.  10.  12.   6. ]\n [ 5.1  8.2 11.   6.3]\n [ 5.  10.  12.   6. ]\n [ 5.1  8.2 11.   6.3]]\n第二维度叠加：\n [[ 5.  10.  12.   6.   5.  10.  12.   6. ]\n [ 5.1  8.2 11.   6.3  5.1  8.2 11.   6.3]]</code></pre>\n\n<p>​        看来axis为0的时候，就是把二维数组和二维数组直接合并，而axis为1的时候就是把相对应的数据合并成一个数组，两个数组的原有位置关系不变</p>\n<ul>\n<li>转载一个好的理解axis方法：axis这个参数实际上就是表示的你要修改哪一维度的数据。举个栗子：<br>   有两组数据，它们的维度都是（2，3），即都是两行三列的数据。有小伙伴可能会发愁，当这两组数据合并时，axis参数设为0到底是横向操作还是竖向操作，肯定有小伙伴要在这里思考一下，实际上不用这么麻烦哒~<br>    当axis设为0时，表示我们要修改第一个维度的数据，两组数据的第一个维度都是2，当它们合并时就变成了4，所以合并后的数据的维度就是（4，3），即变成了四行三列。通过这样子思考，就再也不用努力回想到底是横向合并还是竖向合并啦hh<br>    同理，axis设为1，合并后的数据维度就变成了（2，6），即两行六列~<br>    同理，axis参数在其他方法里也可以用同样的方法思考，比如求均值的mean方法，当axis设为0时，对第一个维度的数据进行求均值，维度为（2，3）的数据计算完后就变成了维度为（1，3）的数据，是不是很好理解~</li>\n</ul>\n<p>​        而且除了<code>np.concatenate()</code>之外，还有&#96;&#96;np.vstack()<code>, </code>np.hstack()<code>.</code>这两个方法在二维数组上可以将数据进行横向合并和纵向合并：</p>\n<p><img src=\"http://cdn.leafii.top/img/Screen%20Shot%202022-05-19%20at%2020.05.47.png\" alt=\"横向合并\"></p>\n<p><img src=\"http://cdn.leafii.top/img/Screen%20Shot%202022-05-19%20at%2020.29.07.png\" alt=\"纵向合并\"></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"竖直合并\\n\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"水平合并\\n\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">竖直合并\n [[1 2]\n [3 4]\n [5 6]\n [7 8]]\n水平合并\n [[1 2 5 6]\n [3 4 7 8]]</code></pre>\n\n<h5 id=\"观察形态\"><a href=\"#观察形态\" class=\"headerlink\" title=\"观察形态\"></a>观察形态</h5><p>​        除了 <code>np.ndim</code> 来查看数据的形态，其实我们有时候还想更加了解数据的细节问题，比如这个数据的大小，规格。方便我们管理这些数据。</p>\n<ul>\n<li>当我想知道到底有多少车辆测试数据时，你可能会通过遍历的方法来计数。</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">cars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">4.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.6</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ncount <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cars<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"总共多少测试数据：\"</span><span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span>        </code></pre>\n\n<p>​        但以下代码与上面代码等价：</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"总共多少测试数据：\"</span><span class=\"token punctuation\">,</span> cars<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span></code></pre>\n\n<ul>\n<li>想知道数组有几行（第一维度）几列（第二维度）</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">cars <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">4.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.6</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第一个维度：\"</span><span class=\"token punctuation\">,</span> cars<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第二个维度：\"</span><span class=\"token punctuation\">,</span> cars<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"所有维度：\"</span><span class=\"token punctuation\">,</span> cars<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">第一个维度： 3\n第二个维度： 4\n所有维度： (3, 4)</code></pre>\n\n<p>​        <strong>要好好理解维度噢，这很重要</strong></p>\n<h4 id=\"用numpy进行数据选择\"><a href=\"#用numpy进行数据选择\" class=\"headerlink\" title=\"用numpy进行数据选择\"></a>用numpy进行数据选择</h4><p>​        可以使用numpy进行对数据的选择，不管是批量划分，还是按条件筛选，都可以哦qwq</p>\n<h5 id=\"单个选取\"><a href=\"#单个选取\" class=\"headerlink\" title=\"单个选取\"></a>单个选取</h5><ul>\n<li><code>array[1]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#一个一个选qwq！</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[0]:\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[1]:\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p><img src=\"http://cdn.leafii.top/img/20220519202955.png\" alt=\"array[1]\"></p>\n<ul>\n<li><code>array[1,2,3]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#一次选择多个</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[[0,1]]:\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[[1,1,0]]:\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n\n<ul>\n<li><code>array[1][1]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#对二维数组进行选择</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 选第 2 行所有数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[1]:\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   \n\n<span class=\"token comment\"># 选第 2 行，第 1 列的数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[1,0]:\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   \n\n<span class=\"token comment\"># 这个看着有点纠结，如果对应到数据，</span>\n<span class=\"token comment\"># 第一个拿的是数据位是 [1,2]</span>\n<span class=\"token comment\"># 第二个拿的是 [0,3]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[[1,0],[2,3]]:\\n\"</span><span class=\"token punctuation\">,</span> \nb<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n\n<p>​        总之，不管是几维数据，我们都可以在其不同维度上挑选那个维度上对应序号上的数值。而且还能一次从原数据上选取多个数据点。</p>\n<h5 id=\"切片划分\"><a href=\"#切片划分\" class=\"headerlink\" title=\"切片划分\"></a>切片划分</h5><ul>\n<li><code>array[:3]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[0:2]：\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[1:]：\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a[-2:]：\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#使用 : 就能让你跨着取数字，而且一次取一批。注意，在 Numpy 中：一次取一批和一个个拎起来，拎了一批，是不同的概念哦 一次取一批来的更快， 因为它不用去一个个查看，一个个数了。</span></code></pre>\n\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">a[0:2]：\n [1 2]\na[1:]：\n [2 3]\na[-2:]：\n [2 3]</code></pre>\n\n<p><img src=\"http://cdn.leafii.top/img/20220520104622.png\" alt=\"切片划分\"></p>\n<ul>\n<li><code>array[2:4, 1:3]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#在多维上，也可以进行切片划分</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[:2]:\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[:2, :3]:\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b[1:3, -2:]:\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>运行结果：</p>\n<pre class=\"language-none\"><code class=\"language-none\">b[:2]:\n [[1 2 3 4]\n [5 6 7 8]]\nb[:2, :3]:\n [[1 2 3]\n [5 6 7]]\nb[1:3, -2:]:\n [[ 7  8]\n [11 12]]</code></pre>\n\n<h5 id=\"条件筛选\"><a href=\"#条件筛选\" class=\"headerlink\" title=\"条件筛选\"></a>条件筛选</h5><ul>\n<li><code>array[array&lt;0]</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>a<span class=\"token operator\">></span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#运行结果如下</span>\n<span class=\"token comment\">#[ 8  9 10 11 12]</span>\n<span class=\"token comment\">#a>7 的返回结果是布尔类型</span>\ncondition <span class=\"token operator\">=</span> a <span class=\"token operator\">></span> <span class=\"token number\">7</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>condition<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#运行结果如下</span>\n<span class=\"token comment\">#[[False False False False]</span>\n<span class=\"token comment\">#[False False False  True]</span>\n<span class=\"token comment\">#[ True  True  True  True]]</span>\n<span class=\"token comment\">#[ 8  9 10 11 12]</span></code></pre>\n\n<p>​        这种筛选的底层逻辑就是只要我们得到一种True和False数据，那么就可以进行筛选。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">condition <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">!=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>condition<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[ 8  9 11 12]</span></code></pre>\n\n<ul>\n<li><code>np.where(array, array &lt; 0)</code></li>\n</ul>\n<p>​        除了这种直接用<code>[]</code>的形式，在 Numpy 中，还有一个专用的函数来做数据筛选。这种筛选更强大，它还能做筛选结果的替换工作。 它可已将满足条件的位置变成你设定的数字。下面满足条件的，都改成 <code>-1</code>，不满足的，都还是 <code>a</code> 里面的数字。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncondition <span class=\"token operator\">=</span> a <span class=\"token operator\">></span> <span class=\"token number\">7</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[[ 1  2  3  4]</span>\n<span class=\"token comment\">#[ 5  6  7 -1]</span>\n<span class=\"token comment\">#[-1 -1 -1 -1]]</span></code></pre>\n\n<p>​        或者将不满足条件的也变成你期望的数字或者另一组数据</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncondition <span class=\"token operator\">=</span> a <span class=\"token operator\">></span> <span class=\"token number\">7</span>\n<span class=\"token comment\">#满足的变成-1，不满足的变成2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[[ 2  2  2  2]</span>\n<span class=\"token comment\">#[ 2  2  2 -1]</span>\n<span class=\"token comment\">#[-1 -1 -1 -1]]</span>\n<span class=\"token comment\">#定义b</span>\nb <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>a <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[[-2 -3 -4 -5]</span>\n<span class=\"token comment\">#[-6 -7 -8  8]</span>\n<span class=\"token comment\">#[ 9 10 11 12]]</span></code></pre>\n\n<p>​        所以 <code>np.where()</code> 函数真的十分强大，每每当我想要按条件选择、替换数据的时候，我脑海中，都是 <code>np.where()</code> 的身影。</p>\n<h5 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>​        数据虽然有格式，但是如果要把数据用起来，还是得学会挑选和筛选。而今天介绍的单个、分段、条件筛选，都是数据工程师必备的一项技能。也是后续数据分析和机器学习的基石。</p>\n<h4 id=\"基础运算\"><a href=\"#基础运算\" class=\"headerlink\" title=\"基础运算\"></a>基础运算</h4><h5 id=\"加减乘除\"><a href=\"#加减乘除\" class=\"headerlink\" title=\"加减乘除\"></a>加减乘除</h5><ul>\n<li>在Python的List中进行计算的常规步骤</li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">166</span><span class=\"token punctuation\">,</span><span class=\"token number\">183</span><span class=\"token punctuation\">,</span><span class=\"token number\">170</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#* 使用循环</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    l<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[153, 169, 186, 173]</span>\n\n<span class=\"token comment\">#* 使用map函数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">166</span><span class=\"token punctuation\">,</span><span class=\"token number\">183</span><span class=\"token punctuation\">,</span><span class=\"token number\">170</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[153, 169, 186, 173]</span></code></pre>\n\n<ul>\n<li>使用numpy的方式进行计算 <code>+-*/</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">166</span><span class=\"token punctuation\">,</span><span class=\"token number\">183</span><span class=\"token punctuation\">,</span><span class=\"token number\">170</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[153 169 186 173]</span></code></pre>\n\n<p>​        Numpy 是可以批量进行计算的，只需要简单的 <code>+-*/</code>，就能进行全元素的运算，也就是向量化运算。同理，我们也可以进行其他符号的批量运算。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a + 3:\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a - 3:\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a * 3:\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a / 3:\"</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#a + 3: [153 169 186 173]</span>\n<span class=\"token comment\">#a - 3: [147 163 180 167]</span>\n<span class=\"token comment\">#a * 3: [450 498 549 510]</span>\n<span class=\"token comment\">#a / 3: [50.         55.33333333 61.         56.66666667]</span></code></pre>\n\n<ul>\n<li>矩阵点积运算 <code>np.dot()</code></li>\n</ul>\n<p><img src=\"http://cdn.leafii.top/img/20220520232800.png\"></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#[[19 22]</span>\n<span class=\"token comment\">#[43 50]]</span>\n<span class=\"token comment\">#[[19 22]</span>\n<span class=\"token comment\">#[43 50]]</span></code></pre>\n\n<p>​        因此，我们可以得知，dot函数有两种写法，一种是<code>a.dot(b)</code>，另一种是<code>np.dot(a,b)</code>，矩阵还有很多其他的计算，比如 <code>np.outer()</code> 矩阵外积，<code>np.inner()</code> 矩阵内积 （和 <code>np.dot()</code> 的用法稍稍有些不同，你可以理解成 <code>np.dot(a, b）= np.inner(a, b.T)</code>, 把 b 做一次转置）。</p>\n<h5 id=\"数据统计分析\"><a href=\"#数据统计分析\" class=\"headerlink\" title=\"数据统计分析\"></a>数据统计分析</h5><p>​        在数据分析时，大部分时间还是以pandas的使用为主，但是数据量比较大的时候，可以使用numpy，毕竟numpy的速度比Pandas要快上不少。</p>\n<p>​        数据分析的定义：在数据中找到你想要的一些变量，总结数据的规律。</p>\n<ul>\n<li><code>np.max() np.min() np.sum() np.prod() np.count()</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#对给定的身高数据，找最高的和最矮的</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">166</span><span class=\"token punctuation\">,</span><span class=\"token number\">183</span><span class=\"token punctuation\">,</span><span class=\"token number\">170</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max:\"</span><span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"min:\"</span><span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#或者</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max:\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"min:\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#计算累加和</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#计算累乘</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#计算总共有几个值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#计算一共有多少个非零值</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arrat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"非零总数：\"</span><span class=\"token punctuation\">,</span>np<span class=\"token punctuation\">.</span>count_nonzero<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n\n<ul>\n<li><code>np.std() np.mean() np.median()</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">month_salary <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"标准差：\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">(</span>month_salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"平均工资：\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>month_salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"工资中位数：\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>median<span class=\"token punctuation\">(</span>month_salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h5 id=\"特殊运算符号\"><a href=\"#特殊运算符号\" class=\"headerlink\" title=\"特殊运算符号\"></a>特殊运算符号</h5><ul>\n<li><code>np.argmax() np.argmin()</code></li>\n</ul>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166</span><span class=\"token punctuation\">,</span> <span class=\"token number\">183</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nname <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"小米\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"OPPO\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Huawei\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"诺基亚\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#关心最大/最小数值的序号 使用argmax()/argmin()</span>\nhigh_idx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nlow_idx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>argmin<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;&#125; 最高\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">[</span>high_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;&#125; 最矮\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">[</span>low_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<ul>\n<li><code>np.ceil() np.floor() np.clip()</code></li>\n</ul>\n<p>​        另外一个时不时会用到的功能是，取天花板的值还是地板的值，这个在 AI 算法中也比较常见， 比如我要对其做<strong>取整处理</strong>，抹除小数部分。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">150.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">183.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170.8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ceil:\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>ceil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"floor:\"</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>floor<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        可以用 <code>np.clip()</code> 来做上下界限的值截取</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">150.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">183.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170.8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clip:\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>clip<span class=\"token punctuation\">(</span><span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<h5 id=\"总结-2\"><a href=\"#总结-2\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>​        其实 Numpy 中做数据运算的功能，比我这里列举的要多很多，我只是列举了一些我在数据分析和人工智能算法中，经常会使用到的一些功能。 还有更多的功能，可以在他的<a href=\"https://numpy.org/devdocs/user/quickstart.html#basic-operations\">官方网站</a>查找哦。</p>\n<h4 id=\"改变数据形态\"><a href=\"#改变数据形态\" class=\"headerlink\" title=\"改变数据形态\"></a>改变数据形态</h4><p>​        如何做数据的变换？</p>\n<h5 id=\"改变形态\"><a href=\"#改变形态\" class=\"headerlink\" title=\"改变形态\"></a>改变形态</h5><ul>\n<li><code>array[np.newaxis, :]</code></li>\n</ul>\n<p>​        改变形态，其实是针对与多维度空间上的数据，要改变它的维度信息，和每个维度中的数据格式。所以第一点你就要清楚，如何添加维度。 其实在 <a href=\"https://mofanpy.com/tutorials/data-manipulation/numpy/ndarray/\">多维数据教程中</a> 中我们就提到过添加维度的方法，我这里在总结括展一下。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na_2d <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> a_2d<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#(6,) (1, 6)</span></code></pre>\n\n<p>​        除了这种方式的其它几种，能达到同样效果的方式。比如用 <code>None</code> 或者 <code>np.expand_dims()</code></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na_none <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span>\na_expand <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a_none<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span>a_expand<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#(6, 1) (6, 1)</span></code></pre>\n\n<p>​         除了添加维度，我们还能减少维度，但是下面介绍的减少维度，只能减少那些维度 shape 上为 1 的维度。因为减掉这个维度，数据结构上是没有变化的。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a_squeeze <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span>a_expand<span class=\"token punctuation\">)</span>\na_squeeze_axis <span class=\"token operator\">=</span> a_expand<span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a_squeeze<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a_squeeze_axis<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#(6,)</span>\n<span class=\"token comment\">#(6,)</span></code></pre>\n\n<ul>\n<li><code>array.reshape()</code></li>\n</ul>\n<p>​        上述方法都是添加维度的方式，但是，在机器学习中，我们还有一个更常见的操作，是要改变 shape。维度的添加减少，只能添加减少一个维度，数据结构是不变的。 但是 <code>np.reshape()</code> 可以改变数据结构。 举个例子，<code>a[None, :]</code> 之后，<code>a.shape</code> 会在第一个维度上多一个 1，而 <code>a.reshape([2,3])</code> 则可以更加自定义的将维度内的个数进行修改。 从而达到改变维度及尺寸。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na1 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na2 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a1 shape:\"</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a2 shape:\"</span><span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a2<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">a1 shape: (2, 3)\n[[1 2 3]\n [4 5 6]]\na2 shape: (3, 1, 2)\n[[[1 2]]\n\n [[3 4]]\n\n [[5 6]]]</code></pre>\n\n<ul>\n<li><code>array.ravel(), array.flatten()</code></li>\n</ul>\n<p>​        其实还有更过的改变形态的方法，比如让数据变直、展平 的 <code>np.ravel()</code>, <code>np.flatten()</code>，这两个比较特殊， 我会在对速度有洁癖这节的时候详细说明。</p>\n<ul>\n<li><code>array.transpose()</code></li>\n</ul>\n<p>​        在矩阵运算的时候，也有一种形态的转化，叫做矩阵转置，<code>np.transpose()</code>, 在机器学习中也用得很多。这里提一下， 给一个小案例，你们玩玩试试。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\naT1 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>T\naT2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>aT1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>aT2<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​         运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[[1 4]\n [2 5]\n [3 6]]\n[[1 4]\n [2 5]\n [3 6]]</code></pre>\n\n\n\n<h5 id=\"合并\"><a href=\"#合并\" class=\"headerlink\" title=\"合并\"></a>合并</h5><ul>\n<li><code>np.column_stack(), np.row_stack()</code></li>\n</ul>\n<p>​        在介绍多维数组的时候， 我们也稍微介绍了一下如何添加和并数组。现在我们再详细把数组的合并拆解都细说一下。</p>\n<p>​        一般来说，在数据分析统计，机器学习中的数据，都是以二维来存储的。行是数据样本（第一维度），列是特征（第二维度）。 所以我们可以组合特征和组合样本。 比如将列<code>column</code>合并，特征 a 的数据和特征 b 的数据合并。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">feature_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nfeature_b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nc_stack <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>column_stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>feature_a<span class=\"token punctuation\">,</span> feature_b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c_stack<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[[ 1 11]\n [ 2 22]\n [ 3 33]\n [ 4 44]\n [ 5 55]\n [ 6 66]]</code></pre>\n\n<p>​        一条条的数据 sample 和并。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">sample_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nsample_b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nc_stack <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>row_stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>sample_a<span class=\"token punctuation\">,</span> sample_b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c_stack<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[[0.  1.1]\n [1.  2.2]]</code></pre>\n\n<ul>\n<li><code>np.vstack(), np.hstack(), np.stack()</code></li>\n</ul>\n<p>​        上面的两种方法 <code>np.column_stack()</code> 和 <code>np.row_stack()</code> 和后面的 <code>np.vstack()</code>、<code>np.hstack()</code> 相比， 有些特殊之处，我们先看看使用 <code>vstack</code> 和 <code>hstack</code> 的案例，再说说不同处吧。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">feature_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span>\nfeature_b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span>\nc_stack <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>feature_a<span class=\"token punctuation\">,</span>feature_b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c_stack<span class=\"token punctuation\">)</span>\n\nsample_a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\nsample_b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\nc_stack <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>sample_a<span class=\"token punctuation\">,</span>sample_b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c_stack<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[[ 1 11]\n [ 2 22]\n [ 3 33]\n [ 4 44]\n [ 5 55]\n [ 6 66]]\n[[0.  1.1]\n [1.  2.2]]</code></pre>\n\n<p>​        看到了吗？用 <code>column_stack</code> 和 <code>row_stack()</code> 的时候，Numpy 自动帮你处理的维度信息，而用 <code>vstack</code> 和 <code>hstack</code> 的时候，你需要先确保维度信息是正确的，然后再合并。</p>\n<ul>\n<li><code>np.concatenate()</code></li>\n</ul>\n<p>​        有时候，你想要用统一的方法来处理各种不同情况的合并，<code>np.concatenate()</code> 是我最喜欢的方法，管它什么 <code>vstack</code> <code>hstack</code> 甚至是在更高维度上要合并， 我们都可以用 <code>concatenate()</code> 一个功能实现。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[[1 2]\n [3 4]\n [5 6]\n [7 8]]\n[[1 2 5 6]\n [3 4 7 8]]</code></pre>\n\n\n\n<h5 id=\"拆解\"><a href=\"#拆解\" class=\"headerlink\" title=\"拆解\"></a>拆解</h5><ul>\n<li><code>np.vsplit(), np.hsplit(), np.split()</code></li>\n</ul>\n<p>​        同样，能横着，竖着合并，那也能横着竖着拆解。<code>np.vsplit()</code> 和 <code>np.hsplit()</code> 就是干这事的。 如果直接在 <code>indices_or_sections</code> 后填入数字，就是要整分的段数， 而如果接着的是一个列表，那就按照列表中的 index 来取区间。可以看看下面代码注解中的意思。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>vsplit<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> indices_or_sections<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 分成两段</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>vsplit<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> indices_or_sections<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 分片成 [:2]，[2:3], [3:]</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[array([[ 1, 11,  2, 22],\n       [ 3, 33,  4, 44]]), array([[ 5, 55,  6, 66],\n       [ 7, 77,  8, 88]])]\n[array([[ 1, 11,  2, 22],\n       [ 3, 33,  4, 44]]), array([[ 5, 55,  6, 66]]), array([[ 7, 77,  8, 88]])]</code></pre>\n\n<p>​        <code>np.vsplit</code> 是拿着刀沿着横向切分，那么 <code>np.hsplit</code> 就是沿纵向切分，我就不再举例了。那么有没有既能横切也能纵切的函数呢？ 当然有呀，和 <code>stack</code> 一样，如果直接用 <code>np.split()</code> 你就能选择要切分的维度来自定义切分了。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">[</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> indices_or_sections<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 分成两段</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> indices_or_sections<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 在第二维度，分片成 [:2]，[2:3]，[3:]</span></code></pre>\n\n<p>​        运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">[array([[ 1, 11,  2, 22],\n       [ 3, 33,  4, 44]]), array([[ 5, 55,  6, 66],\n       [ 7, 77,  8, 88]])]\n[array([[ 1, 11],\n       [ 3, 33],\n       [ 5, 55],\n       [ 7, 77]]), array([[2],\n       [4],\n       [6],\n       [8]]), array([[22],\n       [44],\n       [66],\n       [88]])]</code></pre>\n\n<h5 id=\"总结-3\"><a href=\"#总结-3\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>​         形态变化和合并拆解都是十分有用的功能，我们介绍了很多种实用的方法来完成这些事， 而懂了这些之后，你的数据分析和机器学习才算是真正迈入入圈的第一步。</p>\n<h2 id=\"Pandas\"><a href=\"#Pandas\" class=\"headerlink\" title=\"Pandas\"></a>Pandas</h2><h3 id=\"Pandas简介-amp-安装\"><a href=\"#Pandas简介-amp-安装\" class=\"headerlink\" title=\"Pandas简介&amp;安装\"></a>Pandas简介&amp;安装</h3><h4 id=\"为什么用Pandas\"><a href=\"#为什么用Pandas\" class=\"headerlink\" title=\"为什么用Pandas\"></a>为什么用Pandas</h4><p>​\t\t进入大数据时代，感觉我们如果不会一些分析数据的能力，就将要被时代淘汰（明目张胆拉焦虑）。 不过好在现在的技术越来越好，越来越易用，而且网络上也有越来越多的教学内容。 只要你有一些耐心，入门其实并不难。</p>\n<p>​\t\t现在我们将要步入新的阶段，对大数据做出新的定义，直面大数据带来的挑战，学会使用 Pandas 来处理你日常的表格&#x2F;画图&#x2F;数据分析等问题。</p>\n<h5 id=\"你正在面临的问题\"><a href=\"#你正在面临的问题\" class=\"headerlink\" title=\"你正在面临的问题\"></a>你正在面临的问题</h5><p>​\t\t大数据虽然描述的是海量的数据，但是大数据离你却并不远，特别是大数据所涵盖的技术，在你生活当中，是时刻都能使用这些大数据涉及到的技术， 来解决你生活中的具体问题。</p>\n<p>​\t\t是什么时候才会让我想要使用 Pandas 来处理问题呢？我下面列一条，说不定就有你正面临的问题：</p>\n<ul>\n<li>办公自动化<ul>\n<li>上学上班，有 Excel 或者格式化的文本文件，需要进行数据加工处理</li>\n<li>对大量的这些文本文件作图，想要自动化处理</li>\n</ul>\n</li>\n<li>人工智能<ul>\n<li>数据分析，可视化数据规律</li>\n<li>数据前处理，为 AI 模型展平道路</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Pandas是什么\"><a href=\"#Pandas是什么\" class=\"headerlink\" title=\"Pandas是什么\"></a>Pandas是什么</h4><p>​\t\t简单来说，Pandas 是 Python 中一个比较常用的第三方库，里面集成了很多和数据相关的功能组件。上面提到的那些场景中， 无非就是要：</p>\n<ol>\n<li>处理数据</li>\n<li>分析数据</li>\n<li>画图</li>\n</ol>\n<p>​\t\t所以 Pandas 就围绕着这些环节施展能力。而且它承接了 Numpy 的能力，使用的底层也是 Numpy。按理来说，我们也能用 Numpy 来实现上述功能， 但为什么 Pandas 还是这么广为流传呢？关于这个话题，我想在后文中详细论述。</p>\n<h4 id=\"总结-4\"><a href=\"#总结-4\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>​\t\tPandas 是数据的伙伴，帮你处理和分析海量数据，学会用 Python，会很常需要处理数据，只要需要处理数据，希望你都能回想起来有这么一位数据伙伴的存在。</p>\n<h3 id=\"安装Pandas\"><a href=\"#安装Pandas\" class=\"headerlink\" title=\"安装Pandas\"></a>安装Pandas</h3><h5 id=\"安装Python（略）\"><a href=\"#安装Python（略）\" class=\"headerlink\" title=\"安装Python（略）\"></a>安装Python（略）</h5><h5 id=\"安装Pandas-1\"><a href=\"#安装Pandas-1\" class=\"headerlink\" title=\"安装Pandas\"></a>安装Pandas</h5><p>​\t\t打开cmd或者terminal，输入指令：</p>\n<pre class=\"language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> pandas\n<span class=\"token comment\">#或者</span>\npip3 <span class=\"token function\">install</span> pandas</code></pre>\n\n<p>​\t\t安装完成后，打开python编辑器，输入下列代码</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#0    1</span>\n<span class=\"token comment\">#1    2</span>\n<span class=\"token comment\">#2    3</span>\n<span class=\"token comment\">#dtype: int64\t\t</span></code></pre>\n\n<h5 id=\"总结-5\"><a href=\"#总结-5\" class=\"headerlink\" title=\"总结\"></a>总结</h5><p>​\t\t在本地安装起来很简单，使用 Python 自带的 pip 就好了。记得安装好了之后检查一下是否能正常运行， 和是否安装到其他 Python 版本里去了（如果你电脑里有多个 Python 版本的话）。</p>\n<h3 id=\"Pandas和Numpy的差别\"><a href=\"#Pandas和Numpy的差别\" class=\"headerlink\" title=\"Pandas和Numpy的差别\"></a>Pandas和Numpy的差别</h3><p>​\t\t我们已经讲过，Pandas 是在 Numpy 上的封装。 继承了 Numpy 的所有优点，但是这种封装有好有坏，我们在这节内容中就先来阐述一下 Pandas 和 Numpy 的对比。</p>\n<h4 id=\"类比Python\"><a href=\"#类比Python\" class=\"headerlink\" title=\"类比Python\"></a>类比Python</h4><p>​\t\t用过 Python，你肯定熟悉里面的 List 和 Dictionary, 我比较常拿这两种形态来对比 Numpy 和 Pandas 的关系。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">a_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\na_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list:\"</span><span class=\"token punctuation\">,</span> a_list<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#list: [1, 2, 3]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dict:\"</span><span class=\"token punctuation\">,</span> a_dict<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#dict: &#123;'a': 1, 'b': 2, 'c': 3&#125;</span></code></pre>\n\n<p>​\t\t上面就是一种最常见的 Python 列表和字典表达方式。而下面，我们展示的就是 Numpy 和 Pandas 的一种构建方式。 试着执行下面的代码。</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\na_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n     <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"numpy array:\\n\"</span><span class=\"token punctuation\">,</span> a_array<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\npandas df:\\n\"</span><span class=\"token punctuation\">,</span> a_df<span class=\"token punctuation\">)</span></code></pre>\n\n<p>​\t\t运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">numpy array:\n [[1 2]\n [3 4]]\n\npandas df:\n    a  b\n0  1  2\n1  3  4</code></pre>\n\n<p>​\t\t你会发现，我们看到的结果中，Numpy的是没有任何数据标签信息的，你可以认为它是纯数据；而Pandas就像字典一样，还记录着数据的外围信息，比如标签名(Column)和索引(Row index)。所以我总说Numpy是Python里的列表，而Pandas是Python里的字典。</p>\n<h4 id=\"对比Numpy\"><a href=\"#对比Numpy\" class=\"headerlink\" title=\"对比Numpy\"></a>对比Numpy</h4><p>​\t\t对于数据运算，既然我们有了 Numpy，为什么还要用 Pandas？对比列表和字典，我们很容易感受到其中的一种原因：Pandas帮我们记录的信息量变多了。</p>\n<p>​\t\t在Numpy中，如果你不特别在其他地方标注，你是不清楚记录的这里边记录的是什么信息的，而Pandas记录的信息可以特别丰富，你给别人使用传播数据的时候，这些信息也会一起传递过去。或者你自己处理数据时对照着信息来加工数据，也会更加友善。这就是在我看来Pandas对比Numpy的一个最直观的好处。</p>\n<p>​\t\t<strong>另外 Pandas 用于处理数据的功能也比较多，信息种类也更丰富，特别是你有一些包含字符的表格，Pandas 可以帮你处理分析这些字符型的数据表。 当然还有很多其它功能，比如处理丢失信息，多种合并数据方式，读取和保存为更可读的形式等等。</strong></p>\n<p>​\t\t但是Pandas也有不足的地方：<strong>运算速度稍微比Numpy慢一些。</strong></p>\n<p>​\t\t你想想，因为Pandas是在Numpy之上的一层封装，所以肯定在处理数据的时候要多几层处理，小数据量的处理不要紧，慢一点就慢一点，你也感受不到处理速度的变化；但是当数据量变大时，Numpy处理需要1小时的数据，你用Pandas处理可能得2小时。所以在使用时需要注意自己的实际需求。比如：如果在做少量数据的分析时，因为不涉及到机器学习的模型运算等，我都可以用 Pandas，但如果要模型训练， 训练过程中还一直要调用数据处理的功能， 我肯定毫不犹豫都用 Numpy 来做。</p>\n<h4 id=\"总结-6\"><a href=\"#总结-6\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>​\t\tPandas 是 Numpy 的封装库，继承了 Numpy 的很多优良传统，也具备丰富的功能组件，但是你还是得分情况来酌情选择要使用的工具。</p>\n<hr>\n<p>注：该笔记非原创，主要是对<a href=\"https://mofanpy.com/\">该网站</a>中教程内容的记录</p>","categories":[],"tags":[{"name":"python","path":"api/tags/python.json"},{"name":"机器学习基础","path":"api/tags/机器学习基础.json"}]}
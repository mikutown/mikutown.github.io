{"title":"leetcode400.第N位数字","slug":"leetcode400-第N位数字","date":"2023-12-22T09:49:08.000Z","updated":"2023-12-22T10:08:46.488Z","comments":true,"path":"api/articles/leetcode400-第N位数字.json","excerpt":"题目给你一个整数 n ，请你在无限的整数序列 [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...] 中找出并返回第 n 位上的数字。","covers":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>给你一个整数 <code>n</code> ，请你在无限的整数序列 <code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...]</code> 中找出并返回第 <code>n</code> 位上的数字。</p>\n <span id=\"more\"></span>\n\n<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：n &#x3D; 3\n输出：3</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：n &#x3D; 11\n输出：0\n解释：第 11 位数字在序列 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... 里是 0 ，它是 10 的一部分。</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 231 - 1</code></li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ol>\n<li><p>暴力解决</p>\n</li>\n<li><p>直接计算</p>\n</li>\n</ol>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    int findNthDigit(int n) &#123;\n        long base &#x3D; 9, digits &#x3D; 1;\n\n        &#x2F;&#x2F; 第一步：确定 n 所在的数字有几位\n        while (n - base * digits &gt; 0) &#123;\n            n -&#x3D; base * digits;\n            base *&#x3D; 10;\n            digits++;\n        &#125;\n\n        &#x2F;&#x2F; 第二步：确定 n 所在的具体数字\n        int index &#x3D; n % digits;\n        if (index &#x3D;&#x3D; 0) index &#x3D; digits;\n        long number &#x3D; 1;\n        for (int i &#x3D; 1; i &lt; digits; i++) &#123;\n            number *&#x3D; 10;\n        &#125;\n        number +&#x3D; (index &#x3D;&#x3D; digits) ? n&#x2F;digits - 1 : n&#x2F;digits;\n\n        &#x2F;&#x2F; 第三步：找到并返回目标数字中的具体一位\n        for (int i &#x3D; index; i &lt; digits; i++) number &#x2F;&#x3D; 10;\n        return number % 10;\n    &#125;\n&#125;;</code></pre>\n\n","more":"<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：n &#x3D; 3\n输出：3</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：n &#x3D; 11\n输出：0\n解释：第 11 位数字在序列 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... 里是 0 ，它是 10 的一部分。</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 231 - 1</code></li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ol>\n<li><p>暴力解决</p>\n</li>\n<li><p>直接计算</p>\n</li>\n</ol>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    int findNthDigit(int n) &#123;\n        long base &#x3D; 9, digits &#x3D; 1;\n\n        &#x2F;&#x2F; 第一步：确定 n 所在的数字有几位\n        while (n - base * digits &gt; 0) &#123;\n            n -&#x3D; base * digits;\n            base *&#x3D; 10;\n            digits++;\n        &#125;\n\n        &#x2F;&#x2F; 第二步：确定 n 所在的具体数字\n        int index &#x3D; n % digits;\n        if (index &#x3D;&#x3D; 0) index &#x3D; digits;\n        long number &#x3D; 1;\n        for (int i &#x3D; 1; i &lt; digits; i++) &#123;\n            number *&#x3D; 10;\n        &#125;\n        number +&#x3D; (index &#x3D;&#x3D; digits) ? n&#x2F;digits - 1 : n&#x2F;digits;\n\n        &#x2F;&#x2F; 第三步：找到并返回目标数字中的具体一位\n        for (int i &#x3D; index; i &lt; digits; i++) number &#x2F;&#x3D; 10;\n        return number % 10;\n    &#125;\n&#125;;</code></pre>","categories":[],"tags":[{"name":"leetcode","path":"api/tags/leetcode.json"},{"name":"算法","path":"api/tags/算法.json"}]}
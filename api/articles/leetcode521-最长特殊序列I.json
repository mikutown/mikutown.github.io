{"title":"leetcode521.最长特殊序列I","slug":"leetcode521-最长特殊序列I","date":"2023-08-30T08:20:02.000Z","updated":"2023-08-30T08:26:49.412Z","comments":true,"path":"api/articles/leetcode521-最长特殊序列I.json","excerpt":"题目给你两个字符串 a 和 b，请返回 这两个字符串中 最长的特殊序列 的长度。如果不存在，则返回 -1 。「最长特殊序列」 定义如下：该序列为 某字符串独有的最长子序列（即不能是其他字符串的子序列） 。字符串 s 的子序列是在从 s 中删除任意数量的字符后可以获得的字符串。例如，&quot;abc&quot; 是 &quot;aebdc&quot; 的子序列，因为删除 &quot;a***e***b***d\\***c&quot; 中斜体加粗的字符可以得到 &quot;abc&quot; 。 &quot;aebdc&quot; 的子序列还包括 &quot;aebdc&quot; 、 &quot;aeb&quot; 和 &quot;&quot; (空字符串)。","covers":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>给你两个字符串 <code>a</code> 和 <code>b</code>，请返回 <em>这两个字符串中 <strong>最长的特殊序列</strong></em> 的长度。如果不存在，则返回 <code>-1</code> 。</p>\n<p><strong>「最长特殊序列」</strong> 定义如下：该序列为 <strong>某字符串独有的最长子序列（即不能是其他字符串的子序列）</strong> 。</p>\n<p>字符串 <code>s</code> 的子序列是在从 <code>s</code> 中删除任意数量的字符后可以获得的字符串。</p>\n<ul>\n<li>例如，<code>&quot;abc&quot;</code> 是 <code>&quot;aebdc&quot;</code> 的子序列，因为删除 <code>&quot;a***e***b***d\\***c&quot;</code> 中斜体加粗的字符可以得到 <code>&quot;abc&quot;</code> 。 <code>&quot;aebdc&quot;</code> 的子序列还包括 <code>&quot;aebdc&quot;</code> 、 <code>&quot;aeb&quot;</code> 和 <code>&quot;&quot;</code> (空字符串)。</li>\n</ul>\n <span id=\"more\"></span>\n\n<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入: a &#x3D; &quot;aba&quot;, b &#x3D; &quot;cdc&quot;\n输出: 3\n解释: 最长特殊序列可为 &quot;aba&quot; (或 &quot;cdc&quot;)，两者均为自身的子序列且不是对方的子序列。</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：a &#x3D; &quot;aaa&quot;, b &#x3D; &quot;bbb&quot;\n输出：3\n解释: 最长特殊序列是 &quot;aaa&quot; 和 &quot;bbb&quot; 。</code></pre>\n\n<p><strong>示例 3：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：a &#x3D; &quot;aaa&quot;, b &#x3D; &quot;aaa&quot;\n输出：-1\n解释: 字符串 a 的每个子序列也是字符串 b 的每个子序列。同样，字符串 b 的每个子序列也是字符串 a 的子序列。</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= a.length, b.length &lt;= 100</code></li>\n<li><code>a</code> 和 <code>b</code> 由小写英文字母组成</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><p>解题思路：</p>\n<p>首先，我们判断两个字符串是否相等。如果相等，那么它们之间不存在特殊序列，直接返回-1。</p>\n<p>如果两个字符串不相等，那么其中一个字符串肯定不是另一个字符串的子序列。因此，我们只需返回较长字符串的长度作为最长特殊序列的长度。这是因为如果较长字符串的长度都不是另一个字符串的子序列，那么较短的字符串也不可能是另一个字符串的子序列。</p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    int findLUSlength(string a, string b) &#123;\n        &#x2F;&#x2F; 如果两个字符串相等，则没有特殊序列\n        if (a &#x3D;&#x3D; b) &#123;\n            return -1;\n        &#125;\n        &#x2F;&#x2F; 返回较长字符串的长度作为最长特殊序列的长度\n        return max(a.length(), b.length());\n    &#125;\n&#125;;</code></pre>\n\n","more":"<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入: a &#x3D; &quot;aba&quot;, b &#x3D; &quot;cdc&quot;\n输出: 3\n解释: 最长特殊序列可为 &quot;aba&quot; (或 &quot;cdc&quot;)，两者均为自身的子序列且不是对方的子序列。</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：a &#x3D; &quot;aaa&quot;, b &#x3D; &quot;bbb&quot;\n输出：3\n解释: 最长特殊序列是 &quot;aaa&quot; 和 &quot;bbb&quot; 。</code></pre>\n\n<p><strong>示例 3：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：a &#x3D; &quot;aaa&quot;, b &#x3D; &quot;aaa&quot;\n输出：-1\n解释: 字符串 a 的每个子序列也是字符串 b 的每个子序列。同样，字符串 b 的每个子序列也是字符串 a 的子序列。</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= a.length, b.length &lt;= 100</code></li>\n<li><code>a</code> 和 <code>b</code> 由小写英文字母组成</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><p>解题思路：</p>\n<p>首先，我们判断两个字符串是否相等。如果相等，那么它们之间不存在特殊序列，直接返回-1。</p>\n<p>如果两个字符串不相等，那么其中一个字符串肯定不是另一个字符串的子序列。因此，我们只需返回较长字符串的长度作为最长特殊序列的长度。这是因为如果较长字符串的长度都不是另一个字符串的子序列，那么较短的字符串也不可能是另一个字符串的子序列。</p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    int findLUSlength(string a, string b) &#123;\n        &#x2F;&#x2F; 如果两个字符串相等，则没有特殊序列\n        if (a &#x3D;&#x3D; b) &#123;\n            return -1;\n        &#125;\n        &#x2F;&#x2F; 返回较长字符串的长度作为最长特殊序列的长度\n        return max(a.length(), b.length());\n    &#125;\n&#125;;</code></pre>","categories":[],"tags":[{"name":"leetcode","path":"api/tags/leetcode.json"},{"name":"算法","path":"api/tags/算法.json"},{"name":"序列","path":"api/tags/序列.json"}]}
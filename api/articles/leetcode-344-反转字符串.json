{"title":"leetcode:344.反转字符串","slug":"leetcode-344-反转字符串","date":"2023-01-31T16:46:29.000Z","updated":"2023-01-31T16:48:51.519Z","comments":true,"path":"api/articles/leetcode-344-反转字符串.json","excerpt":"题目编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。不要给另外的数组分配额外的空间，你必须**原地修改输入数组**、使用 O(1) 的额外空间解决这一问题。","covers":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 <code>s</code> 的形式给出。</p>\n<p>不要给另外的数组分配额外的空间，你必须**<a href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\">原地</a>修改输入数组**、使用 O(1) 的额外空间解决这一问题。</p>\n<span id=\"more\"></span>\n\n<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; [&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]\n输出：[&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; [&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;]\n输出：[&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;]</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 105</code></li>\n<li><code>s[i]</code> 都是 <a href=\"https://baike.baidu.com/item/ASCII\">ASCII</a> 码表中的可打印字符</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ol>\n<li>双指针从最左边到最右边遍历交换元素，直至左指针索引值大于右指针索引值。C++实现如下：</li>\n</ol>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    void reverseString(vector&lt;char&gt;&amp; s) &#123;\n        int n &#x3D; s.size();&#x2F;&#x2F;获取数组长度\n        int left &#x3D; 0, right &#x3D; n - 1;\n        char temp &#x3D; 0;\n        while(left &lt; right) &#123;\n            temp &#x3D; s[left];\n            s[left] &#x3D; s[right];\n            s[right] &#x3D; temp;&#x2F;&#x2F;交换操作\n            left++;\n            right--; &#x2F;&#x2F;指针移动\n        &#125;\n        &#x2F;&#x2F;最后的s即为结果，函数返回类型为void所以无需返回值\n    &#125;\n&#125;;</code></pre>\n\n","more":"<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; [&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]\n输出：[&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; [&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;]\n输出：[&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;]</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 105</code></li>\n<li><code>s[i]</code> 都是 <a href=\"https://baike.baidu.com/item/ASCII\">ASCII</a> 码表中的可打印字符</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ol>\n<li>双指针从最左边到最右边遍历交换元素，直至左指针索引值大于右指针索引值。C++实现如下：</li>\n</ol>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    void reverseString(vector&lt;char&gt;&amp; s) &#123;\n        int n &#x3D; s.size();&#x2F;&#x2F;获取数组长度\n        int left &#x3D; 0, right &#x3D; n - 1;\n        char temp &#x3D; 0;\n        while(left &lt; right) &#123;\n            temp &#x3D; s[left];\n            s[left] &#x3D; s[right];\n            s[right] &#x3D; temp;&#x2F;&#x2F;交换操作\n            left++;\n            right--; &#x2F;&#x2F;指针移动\n        &#125;\n        &#x2F;&#x2F;最后的s即为结果，函数返回类型为void所以无需返回值\n    &#125;\n&#125;;</code></pre>","categories":[],"tags":[{"name":"leetcode","path":"api/tags/leetcode.json"},{"name":"算法","path":"api/tags/算法.json"}]}
{"title":"《算法》（第四版）环境搭建","slug":"《算法》（第四版）环境搭建","date":"2021-01-07T11:43:08.000Z","updated":"2022-05-20T07:47:28.630Z","comments":true,"path":"api/articles/《算法》（第四版）环境搭建.json","excerpt":"《算法》（第四版）环境搭建最近开封了买了很久都没读的《算法》（红色封面的），如果想运行里面的代码需要安装一个与本书搭配的jar包，因此有了这篇博客。","covers":["http://cdn.leafii.top/img/20220520154626.png","http://cdn.leafii.top/img/20220520154641.png","http://cdn.leafii.top/img/20220520154656.png","http://cdn.leafii.top/img/20220520154710.png","http://cdn.leafii.top/img/20220520154724.png"],"content":"<h1 id=\"《算法》（第四版）环境搭建\"><a href=\"#《算法》（第四版）环境搭建\" class=\"headerlink\" title=\"《算法》（第四版）环境搭建\"></a>《算法》（第四版）环境搭建</h1><p>最近开封了买了很久都没读的《算法》（红色封面的），如果想运行里面的代码需要安装一个与本书搭配的jar包，因此有了这篇博客。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"算法运行库的下载和配置\"><a href=\"#算法运行库的下载和配置\" class=\"headerlink\" title=\"算法运行库的下载和配置\"></a>算法运行库的下载和配置</h2><ol>\n<li><p>下载作者提供的运行库，下载地址：<a href=\"http://algs4.cs.princeton.edu/code/\">点我</a> 点开页面之后使劲往下翻，翻到下图位置时，就知道点哪个下载了 嘿嘿嘿嘿</p>\n<p><img src=\"http://cdn.leafii.top/img/20220520154626.png\" loading=\"lazy\"></p>\n</li>\n</ol>\n<p><strong>我们需要下载两个内容，一个是库，一个是测试的数据。库是algs4.jar，数据是algs4-data.zip。</strong></p>\n<ol start=\"2\">\n<li>在C盘建立目录<code>C:\\Program Files\\algs4</code>，然后把algs4.jar放在里面。（什么目录都可以）</li>\n<li>在CLASSPATH环境变量中，添加值<code>C:\\Program Files\\algs4\\algs4.jar</code> (就是刚刚存放algs4.jar的路径)</li>\n</ol>\n<p><strong>注:如果你没有配置过CLASSPATH，请复制以下语句进CLASSPATH，使你的CLASSPATH变成这样</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;C:\\Users\\yeyun\\alsgs4\\algs4.jar</code></pre>\n\n<h2 id=\"测试数据的使用\"><a href=\"#测试数据的使用\" class=\"headerlink\" title=\"测试数据的使用\"></a>测试数据的使用</h2><ol>\n<li>在idea中创建一个HelloWorld工程，选择你的JDK，下一步。</li>\n<li>为项目添加jar包：File–&gt;Project Strcuture–&gt;Modules，然后点加号，点击，JARS…..,选择你的Jar包的位置，点确定。如图所示：</li>\n</ol>\n<p><img src=\"http://cdn.leafii.top/img/20220520154641.png\" loading=\"lazy\"></p>\n<ol start=\"3\">\n<li>将测试数据解压到src目录下：</li>\n</ol>\n<p><img src=\"http://cdn.leafii.top/img/20220520154656.png\" loading=\"lazy\"></p>\n<ol start=\"4\">\n<li>使用第一章第一节的测试代码：</li>\n</ol>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>day01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span></span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BinarySearch</span> <span class=\"token punctuation\">&#123;</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BinarySearch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> lo <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> hi <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>lo <span class=\"token operator\">&lt;=</span> hi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Key is in a[lo..hi] or not present.</span>\n            <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> lo <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>hi <span class=\"token operator\">-</span> lo<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span>      <span class=\"token punctuation\">(</span>key <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> hi <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> lo <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> mid<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">rank</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token comment\">// read the integers from a file</span>\n        <span class=\"token class-name\">In</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">In</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> whitelist <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">readAllInts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// sort the array</span>\n        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>whitelist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// read integer key from standard input; print if not in whitelist</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">int</span> key <span class=\"token operator\">=</span> <span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BinarySearch</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>whitelist<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<ol start=\"5\">\n<li>在BinarySearch类所在的文件夹右键，选择open in terminal，输入编译命令:<code>javac BinarySearch.java</code></li>\n<li>在src文件夹上右键，点击open in terminal</li>\n</ol>\n<p><img src=\"http://cdn.leafii.top/img/20220520154710.png\" loading=\"lazy\"></p>\n<ol start=\"6\">\n<li>在命令行中输入命令：<code>java top.leafii.demo.day01.BinarySearch tinyW.txt &lt; tinyT.txt</code>（注意你的包名）</li>\n<li>成功了！运行结果如图所示：</li>\n</ol>\n<p><img src=\"http://cdn.leafii.top/img/20220520154724.png\" loading=\"lazy\"></p>\n","more":"<h2 id=\"算法运行库的下载和配置\"><a href=\"#算法运行库的下载和配置\" class=\"headerlink\" title=\"算法运行库的下载和配置\"></a>算法运行库的下载和配置</h2><ol>\n<li><p>下载作者提供的运行库，下载地址：<a href=\"http://algs4.cs.princeton.edu/code/\">点我</a> 点开页面之后使劲往下翻，翻到下图位置时，就知道点哪个下载了 嘿嘿嘿嘿</p>\n<p><img src=\"http://cdn.leafii.top/img/20220520154626.png\"></p>\n</li>\n</ol>\n<p><strong>我们需要下载两个内容，一个是库，一个是测试的数据。库是algs4.jar，数据是algs4-data.zip。</strong></p>\n<ol start=\"2\">\n<li>在C盘建立目录<code>C:\\Program Files\\algs4</code>，然后把algs4.jar放在里面。（什么目录都可以）</li>\n<li>在CLASSPATH环境变量中，添加值<code>C:\\Program Files\\algs4\\algs4.jar</code> (就是刚刚存放algs4.jar的路径)</li>\n</ol>\n<p><strong>注:如果你没有配置过CLASSPATH，请复制以下语句进CLASSPATH，使你的CLASSPATH变成这样</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;C:\\Users\\yeyun\\alsgs4\\algs4.jar</code></pre>\n\n<h2 id=\"测试数据的使用\"><a href=\"#测试数据的使用\" class=\"headerlink\" title=\"测试数据的使用\"></a>测试数据的使用</h2><ol>\n<li>在idea中创建一个HelloWorld工程，选择你的JDK，下一步。</li>\n<li>为项目添加jar包：File–&gt;Project Strcuture–&gt;Modules，然后点加号，点击，JARS…..,选择你的Jar包的位置，点确定。如图所示：</li>\n</ol>\n<p><img src=\"http://cdn.leafii.top/img/20220520154641.png\"></p>\n<ol start=\"3\">\n<li>将测试数据解压到src目录下：</li>\n</ol>\n<p><img src=\"http://cdn.leafii.top/img/20220520154656.png\"></p>\n<ol start=\"4\">\n<li>使用第一章第一节的测试代码：</li>\n</ol>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>day01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">edu<span class=\"token punctuation\">.</span>princeton<span class=\"token punctuation\">.</span>cs<span class=\"token punctuation\">.</span>algs4<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span></span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BinarySearch</span> <span class=\"token punctuation\">&#123;</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BinarySearch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> lo <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> hi <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>lo <span class=\"token operator\">&lt;=</span> hi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Key is in a[lo..hi] or not present.</span>\n            <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> lo <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>hi <span class=\"token operator\">-</span> lo<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span>      <span class=\"token punctuation\">(</span>key <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> hi <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> lo <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> mid<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">rank</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token comment\">// read the integers from a file</span>\n        <span class=\"token class-name\">In</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">In</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> whitelist <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">readAllInts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// sort the array</span>\n        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>whitelist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// read integer key from standard input; print if not in whitelist</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">int</span> key <span class=\"token operator\">=</span> <span class=\"token class-name\">StdIn</span><span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BinarySearch</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>whitelist<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                <span class=\"token class-name\">StdOut</span><span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n\n<ol start=\"5\">\n<li>在BinarySearch类所在的文件夹右键，选择open in terminal，输入编译命令:<code>javac BinarySearch.java</code></li>\n<li>在src文件夹上右键，点击open in terminal</li>\n</ol>\n<p><img src=\"http://cdn.leafii.top/img/20220520154710.png\"></p>\n<ol start=\"6\">\n<li>在命令行中输入命令：<code>java top.leafii.demo.day01.BinarySearch tinyW.txt &lt; tinyT.txt</code>（注意你的包名）</li>\n<li>成功了！运行结果如图所示：</li>\n</ol>\n<p><img src=\"http://cdn.leafii.top/img/20220520154724.png\"></p>","categories":[],"tags":[{"name":"算法","path":"api/tags/算法.json"}]}
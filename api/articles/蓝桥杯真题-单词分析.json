{"title":"蓝桥杯真题-单词分析","slug":"蓝桥杯真题-单词分析","date":"2023-04-04T07:48:17.000Z","updated":"2023-04-04T07:52:47.633Z","comments":true,"path":"api/articles/蓝桥杯真题-单词分析.json","excerpt":"题目小蓝正在学习一门神奇的语言，这门语言中的单词都是由小写英文字母组 成，有些单词很长，远远超过正常英文单词的长度。小蓝学了很长时间也记不住一些单词，他准备不再完全记忆这些单词，而是根据单词中哪个字母出现得最多来分辨单词。现在，请你帮助小蓝，给了一个单词后，帮助他找到出现最多的字母和这 个字母出现的次数。","covers":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>小蓝正在学习一门神奇的语言，这门语言中的单词都是由小写英文字母组 成，有些单词很长，远远超过正常英文单词的长度。小蓝学了很长时间也记不住一些单词，他准备不再完全记忆这些单词，而是根据单词中哪个字母出现得最多来分辨单词。</p>\n<p>现在，请你帮助小蓝，给了一个单词后，帮助他找到出现最多的字母和这 个字母出现的次数。</p>\n<span id=\"more\"></span>\n\n<p><strong>输入描述</strong></p>\n<p>输入一行包含一个单词，单词只由小写英文字母组成。</p>\n<p>对于所有的评测用例，输入的单词长度不超过 1000。</p>\n<p><strong>输出描述</strong></p>\n<p>输出两行，第一行包含一个英文字母，表示单词中出现得最多的字母是哪 个。如果有多个字母出现的次数相等，输出字典序最小的那个。</p>\n<p>第二行包含一个整数，表示出现得最多的那个字母在单词中出现的次数。</p>\n<p><strong>输入输出样例</strong></p>\n<p><strong>示例 1</strong></p>\n<blockquote>\n<p>输入</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">lanqiao</code></pre>\n\n<blockquote>\n<p>输出</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">a\n2</code></pre>\n\n<p><strong>示例 2</strong></p>\n<blockquote>\n<p>输入</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">longlonglongistoolong</code></pre>\n\n<blockquote>\n<p>输出</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">o\n6</code></pre>\n\n<h3 id=\"运行限制\"><a href=\"#运行限制\" class=\"headerlink\" title=\"运行限制\"></a>运行限制</h3><ul>\n<li>最大运行时间：1s</li>\n<li>最大运行内存: 256M</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>暴力解法</li>\n</ul>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">#include &lt;iostream&gt;\nusing namespace std;\nint main()\n&#123;\n    string word; &#x2F;&#x2F; 定义输入的单词变量\n    cin &gt;&gt; word; &#x2F;&#x2F; 用输入流为其赋值\n    int cnt[26] &#x3D; &#123;0&#125;; &#x2F;&#x2F; 初始化计数器\n    int index &#x3D; -1; &#x2F;&#x2F; 初始化计数器所用的下标\n    for (char s: word) &#123;\n        index &#x3D; s - &#39;a&#39;; &#x2F;&#x2F; 获取当前字母在计数器中的下标\n        cnt[index]++; &#x2F;&#x2F; 对应的计数自增1\n    &#125;\n\n    int max &#x3D; -1; &#x2F;&#x2F; 计数器中的最大值\n    int max_index &#x3D; -1; &#x2F;&#x2F; 计数器中最大值对应的最小下标\n    for (int i &#x3D; 0; i &lt; 26; i++) &#123;\n        if (cnt[i] &gt; max) &#123;\n            max &#x3D; cnt[i]; &#x2F;&#x2F; 最大值迭代\n            max_index &#x3D; i; &#x2F;&#x2F; 最大值的最小下标迭代，若最大值未更新，下标也不会更新\n        &#125;\n    &#125;\n    char answer &#x3D; &#39;a&#39; + max_index; &#x2F;&#x2F; 得到字母个数最多的字母\n\n    cout &lt;&lt; answer &lt;&lt; endl; &#x2F;&#x2F; 输出题目要求的第一行答案\n    cout &lt;&lt; max &lt;&lt; endl; &#x2F;&#x2F; 输出题目要求的第二行答案\n    return 0;\n&#125;</code></pre>\n\n","more":"<p><strong>输入描述</strong></p>\n<p>输入一行包含一个单词，单词只由小写英文字母组成。</p>\n<p>对于所有的评测用例，输入的单词长度不超过 1000。</p>\n<p><strong>输出描述</strong></p>\n<p>输出两行，第一行包含一个英文字母，表示单词中出现得最多的字母是哪 个。如果有多个字母出现的次数相等，输出字典序最小的那个。</p>\n<p>第二行包含一个整数，表示出现得最多的那个字母在单词中出现的次数。</p>\n<p><strong>输入输出样例</strong></p>\n<p><strong>示例 1</strong></p>\n<blockquote>\n<p>输入</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">lanqiao</code></pre>\n\n<blockquote>\n<p>输出</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">a\n2</code></pre>\n\n<p><strong>示例 2</strong></p>\n<blockquote>\n<p>输入</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">longlonglongistoolong</code></pre>\n\n<blockquote>\n<p>输出</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">o\n6</code></pre>\n\n<h3 id=\"运行限制\"><a href=\"#运行限制\" class=\"headerlink\" title=\"运行限制\"></a>运行限制</h3><ul>\n<li>最大运行时间：1s</li>\n<li>最大运行内存: 256M</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>暴力解法</li>\n</ul>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">#include &lt;iostream&gt;\nusing namespace std;\nint main()\n&#123;\n    string word; &#x2F;&#x2F; 定义输入的单词变量\n    cin &gt;&gt; word; &#x2F;&#x2F; 用输入流为其赋值\n    int cnt[26] &#x3D; &#123;0&#125;; &#x2F;&#x2F; 初始化计数器\n    int index &#x3D; -1; &#x2F;&#x2F; 初始化计数器所用的下标\n    for (char s: word) &#123;\n        index &#x3D; s - &#39;a&#39;; &#x2F;&#x2F; 获取当前字母在计数器中的下标\n        cnt[index]++; &#x2F;&#x2F; 对应的计数自增1\n    &#125;\n\n    int max &#x3D; -1; &#x2F;&#x2F; 计数器中的最大值\n    int max_index &#x3D; -1; &#x2F;&#x2F; 计数器中最大值对应的最小下标\n    for (int i &#x3D; 0; i &lt; 26; i++) &#123;\n        if (cnt[i] &gt; max) &#123;\n            max &#x3D; cnt[i]; &#x2F;&#x2F; 最大值迭代\n            max_index &#x3D; i; &#x2F;&#x2F; 最大值的最小下标迭代，若最大值未更新，下标也不会更新\n        &#125;\n    &#125;\n    char answer &#x3D; &#39;a&#39; + max_index; &#x2F;&#x2F; 得到字母个数最多的字母\n\n    cout &lt;&lt; answer &lt;&lt; endl; &#x2F;&#x2F; 输出题目要求的第一行答案\n    cout &lt;&lt; max &lt;&lt; endl; &#x2F;&#x2F; 输出题目要求的第二行答案\n    return 0;\n&#125;</code></pre>","categories":[],"tags":[{"name":"算法","path":"api/tags/算法.json"},{"name":"蓝桥杯","path":"api/tags/蓝桥杯.json"}]}
{"title":"算法练习-13-过滤算法(1.1.34)","slug":"算法练习-13-过滤算法(1.1.34)","date":"2021-01-19T06:28:39.000Z","updated":"2021-01-19T07:15:27.560Z","comments":true,"path":"api/articles/算法练习-13-过滤算法(1.1.34).json","excerpt":"算法练习-13-过滤算法(1.1.34)知识点过滤器","covers":null,"content":"<h1 id=\"算法练习-13-过滤算法-1-1-34\"><a href=\"#算法练习-13-过滤算法-1-1-34\" class=\"headerlink\" title=\"算法练习-13-过滤算法(1.1.34)\"></a>算法练习-13-过滤算法(1.1.34)</h1><ul>\n<li>知识点<ul>\n<li>过滤器</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n\n<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><strong>1.1.34 过滤。以下哪些任务需要（在数组中，比如）保存标准输入中的所有值？哪些可以被实现为一个过滤器且仅使用固定数量的变量和固定大小的数组（和N无关）？在每个问题中，输入都来自于标准输入且含有N个0到1的实数。</strong></p>\n<ul>\n<li><strong>打印出最大和最小的数</strong></li>\n<li><strong>打印出所有数的中位数</strong></li>\n<li><strong>打印出第k小的数，k小于100</strong></li>\n<li><strong>打印出所有数的平方和</strong></li>\n<li><strong>打印出N个数的平均值</strong></li>\n<li><strong>打印出大于平均值的数的百分比</strong></li>\n<li><strong>将N个数按照升序打印</strong></li>\n<li><strong>将N个数按照随机顺序打印</strong></li>\n</ul>\n<hr>\n<p><strong>1.1.34 Filtering. Which of the following require saving all the values from standard input (in an array, say), and which could be implemented as a filter using only a fixed number of variables and arrays of fixed size (not dependent on N)? For each, the input comes from standard input and consists of N real numbers between 0 and 1.</strong></p>\n<ul>\n<li><strong>Print the maximum and minimum numbers.</strong></li>\n<li><strong>Print the median of the numbers.</strong></li>\n<li><strong>Print the k th smallest value, for k less than 100.</strong></li>\n<li><strong>Print the sum of the squares of the numbers.</strong></li>\n<li><strong>Print the average of the N numbers.</strong></li>\n<li><strong>Print the percentage of numbers greater than the average.</strong></li>\n<li><strong>Print the N numbers in increasing order.</strong></li>\n<li><strong>Print the N numbers in random order.</strong></li>\n</ul>\n<p><strong>分析&amp;答案</strong></p>\n<ul>\n<li><p>打印出最大和最小的数</p>\n<p>只需要两个变量值的过滤器，变量名为min和max即可，当输入数字时，将数字同max和min比较大小，较大的为max，较小的为min，最后打印max和min两个数字的值即可</p>\n</li>\n<li><p>打印出所有数的中位数</p>\n<p>中位数需要所有数字的有序排列，因此需要把所有数字都保存在一个数组中，将数组排序，取数组的中间数作为打印的值。</p>\n</li>\n<li><p>打印出第k小的数，k小于100</p>\n<p>可以创建一个大小为k的数组作为过滤器，按照插入排序法进行插入数据的升序排序，多出去的数据直接舍弃，最后打印数组的第k个数字即可。</p>\n</li>\n<li><p>打印出所有数的平方和</p>\n<p>可以创建一个名叫sum的double类型值作为过滤器，sum +&#x3D; num * num</p>\n</li>\n<li><p>打印出N个数的平均值</p>\n<p>可以创建一个sum的double类型，求和，再创建一个count类型的计数器，用于计算输入的数据的总数，最后sum +&#x3D; num.   返回sum &#x2F; count，即N个数的平均值。</p>\n</li>\n<li><p>打印出大于平均值的数的百分比</p>\n<p>要先利用上面的计数器计算平均值，然后用数组保存这N个数的值，遍历数组，统计大于平均数的数字的个数n，最后返回(n&#x2F;count)*100+”%”，即为大于平均值的数的百分比。</p>\n</li>\n<li><p>将N个数按照升序打印</p>\n<p>自然是要用数组存储数据噜</p>\n</li>\n<li><p>将N个数按照随机顺序打印</p>\n<p>同上，需要存储数据，而且需要random出数字，这样才能按照随机顺序打印。</p>\n</li>\n</ul>\n","more":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><strong>1.1.34 过滤。以下哪些任务需要（在数组中，比如）保存标准输入中的所有值？哪些可以被实现为一个过滤器且仅使用固定数量的变量和固定大小的数组（和N无关）？在每个问题中，输入都来自于标准输入且含有N个0到1的实数。</strong></p>\n<ul>\n<li><strong>打印出最大和最小的数</strong></li>\n<li><strong>打印出所有数的中位数</strong></li>\n<li><strong>打印出第k小的数，k小于100</strong></li>\n<li><strong>打印出所有数的平方和</strong></li>\n<li><strong>打印出N个数的平均值</strong></li>\n<li><strong>打印出大于平均值的数的百分比</strong></li>\n<li><strong>将N个数按照升序打印</strong></li>\n<li><strong>将N个数按照随机顺序打印</strong></li>\n</ul>\n<hr>\n<p><strong>1.1.34 Filtering. Which of the following require saving all the values from standard input (in an array, say), and which could be implemented as a filter using only a fixed number of variables and arrays of fixed size (not dependent on N)? For each, the input comes from standard input and consists of N real numbers between 0 and 1.</strong></p>\n<ul>\n<li><strong>Print the maximum and minimum numbers.</strong></li>\n<li><strong>Print the median of the numbers.</strong></li>\n<li><strong>Print the k th smallest value, for k less than 100.</strong></li>\n<li><strong>Print the sum of the squares of the numbers.</strong></li>\n<li><strong>Print the average of the N numbers.</strong></li>\n<li><strong>Print the percentage of numbers greater than the average.</strong></li>\n<li><strong>Print the N numbers in increasing order.</strong></li>\n<li><strong>Print the N numbers in random order.</strong></li>\n</ul>\n<p><strong>分析&amp;答案</strong></p>\n<ul>\n<li><p>打印出最大和最小的数</p>\n<p>只需要两个变量值的过滤器，变量名为min和max即可，当输入数字时，将数字同max和min比较大小，较大的为max，较小的为min，最后打印max和min两个数字的值即可</p>\n</li>\n<li><p>打印出所有数的中位数</p>\n<p>中位数需要所有数字的有序排列，因此需要把所有数字都保存在一个数组中，将数组排序，取数组的中间数作为打印的值。</p>\n</li>\n<li><p>打印出第k小的数，k小于100</p>\n<p>可以创建一个大小为k的数组作为过滤器，按照插入排序法进行插入数据的升序排序，多出去的数据直接舍弃，最后打印数组的第k个数字即可。</p>\n</li>\n<li><p>打印出所有数的平方和</p>\n<p>可以创建一个名叫sum的double类型值作为过滤器，sum +&#x3D; num * num</p>\n</li>\n<li><p>打印出N个数的平均值</p>\n<p>可以创建一个sum的double类型，求和，再创建一个count类型的计数器，用于计算输入的数据的总数，最后sum +&#x3D; num.   返回sum &#x2F; count，即N个数的平均值。</p>\n</li>\n<li><p>打印出大于平均值的数的百分比</p>\n<p>要先利用上面的计数器计算平均值，然后用数组保存这N个数的值，遍历数组，统计大于平均数的数字的个数n，最后返回(n&#x2F;count)*100+”%”，即为大于平均值的数的百分比。</p>\n</li>\n<li><p>将N个数按照升序打印</p>\n<p>自然是要用数组存储数据噜</p>\n</li>\n<li><p>将N个数按照随机顺序打印</p>\n<p>同上，需要存储数据，而且需要random出数字，这样才能按照随机顺序打印。</p>\n</li>\n</ul>","categories":[],"tags":[{"name":"算法","path":"api/tags/算法.json"}]}
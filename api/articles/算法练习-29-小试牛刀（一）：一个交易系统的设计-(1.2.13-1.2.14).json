{"title":"算法练习-29-小试牛刀（一）：一个交易系统的设计-(1.2.13-1.2.14)","slug":"算法练习-29-小试牛刀（一）：一个交易系统的设计-(1.2.13-1.2.14)","date":"2021-02-03T18:39:24.000Z","updated":"2021-02-03T20:25:10.758Z","comments":true,"path":"api/articles/算法练习-29-小试牛刀（一）：一个交易系统的设计-(1.2.13-1.2.14).json","excerpt":"算法练习-29-小试牛刀（一）：一个交易系统的设计-(1.2.13-1.2.14)知识点Java中类的设计正则表达式","covers":["https://gitee.com/mikutown/pic/raw/master/img/c06d296af00fb6faf3111f13b9431ec6.png","https://gitee.com/mikutown/pic/raw/master/img/0d4be00f0d9248fb32c6cdff80d94720.png"],"content":"<h1 id=\"算法练习-29-小试牛刀（一）：一个交易系统的设计-1-2-13-1-2-14\"><a href=\"#算法练习-29-小试牛刀（一）：一个交易系统的设计-1-2-13-1-2-14\" class=\"headerlink\" title=\"算法练习-29-小试牛刀（一）：一个交易系统的设计-(1.2.13-1.2.14)\"></a>算法练习-29-小试牛刀（一）：一个交易系统的设计-(1.2.13-1.2.14)</h1><ul>\n<li>知识点<ul>\n<li>Java中类的设计</li>\n<li>正则表达式</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n\n<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><strong>1.2.13 用我们对Date的实现作为模板实现Transaction类型</strong></p>\n<hr>\n<p><strong>1.2.13 Using our implementation of Date as a model(page91),develop an implementation of Transaction.</strong></p>\n<p><strong>1.2.14 用我们对Date的实现作为模板实现Transaction的euqal()函数</strong></p>\n<hr>\n<p><strong>1.2.14 Using our implementation of equals() in Date as a model(page103),develop implementations of equals() for Transaction.</strong></p>\n<ul>\n<li>分析</li>\n</ul>\n<p>书中给出的Transaction的API图如下：</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/c06d296af00fb6faf3111f13b9431ec6.png\" alt=\"img\" loading=\"lazy\"></p>\n<p>英文版的截图</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/0d4be00f0d9248fb32c6cdff80d94720.png\" alt=\"img\" loading=\"lazy\"></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>practice<span class=\"token punctuation\">.</span>charpter01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Transaction</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Comparable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Transaction</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> who<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SmartDate2</span> when<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> amount<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Transaction</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> who<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SmartDate2</span> when<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>who <span class=\"token operator\">=</span> who<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>when <span class=\"token operator\">=</span> when<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>amount <span class=\"token operator\">=</span> amount<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">who</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> who<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SmartDate2</span> <span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> when<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">amount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> amount<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">==</span> o<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Transaction</span> that <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Transaction</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>that<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>who<span class=\"token punctuation\">,</span> that<span class=\"token punctuation\">.</span>who<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>when<span class=\"token punctuation\">,</span> that<span class=\"token punctuation\">.</span>when<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>who<span class=\"token punctuation\">,</span> when<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Transaction&#123;\"</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"who='\"</span> <span class=\"token operator\">+</span> who <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", when=\"</span> <span class=\"token operator\">+</span> when <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", amount=\"</span> <span class=\"token operator\">+</span> amount <span class=\"token operator\">+</span>\n                <span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Transaction</span> that<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n","more":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><strong>1.2.13 用我们对Date的实现作为模板实现Transaction类型</strong></p>\n<hr>\n<p><strong>1.2.13 Using our implementation of Date as a model(page91),develop an implementation of Transaction.</strong></p>\n<p><strong>1.2.14 用我们对Date的实现作为模板实现Transaction的euqal()函数</strong></p>\n<hr>\n<p><strong>1.2.14 Using our implementation of equals() in Date as a model(page103),develop implementations of equals() for Transaction.</strong></p>\n<ul>\n<li>分析</li>\n</ul>\n<p>书中给出的Transaction的API图如下：</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/c06d296af00fb6faf3111f13b9431ec6.png\" alt=\"img\"></p>\n<p>英文版的截图</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/0d4be00f0d9248fb32c6cdff80d94720.png\" alt=\"img\"></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">top<span class=\"token punctuation\">.</span>leafii<span class=\"token punctuation\">.</span>practice<span class=\"token punctuation\">.</span>charpter01</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Transaction</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Comparable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Transaction</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> who<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SmartDate2</span> when<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> amount<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Transaction</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> who<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SmartDate2</span> when<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>who <span class=\"token operator\">=</span> who<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>when <span class=\"token operator\">=</span> when<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>amount <span class=\"token operator\">=</span> amount<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">who</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> who<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SmartDate2</span> <span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> when<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">amount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> amount<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">==</span> o<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Transaction</span> that <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Transaction</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>that<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>who<span class=\"token punctuation\">,</span> that<span class=\"token punctuation\">.</span>who<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>when<span class=\"token punctuation\">,</span> that<span class=\"token punctuation\">.</span>when<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>who<span class=\"token punctuation\">,</span> when<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Transaction&#123;\"</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"who='\"</span> <span class=\"token operator\">+</span> who <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", when=\"</span> <span class=\"token operator\">+</span> when <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", amount=\"</span> <span class=\"token operator\">+</span> amount <span class=\"token operator\">+</span>\n                <span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Transaction</span> that<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>","categories":[],"tags":[{"name":"算法","path":"api/tags/算法.json"}]}
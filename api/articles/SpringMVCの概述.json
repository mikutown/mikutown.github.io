{"title":"SpringMVCの概述","slug":"SpringMVCの概述","date":"2020-05-17T10:28:27.000Z","updated":"2021-01-02T20:09:18.000Z","comments":true,"path":"api/articles/SpringMVCの概述.json","excerpt":"1.概述Spring 为展现层提供的基于 MVC 设计理念的优秀的 Web 框架，是目前最主流的 MVC 框架之一Spring3.0 后全面超越 Struts2，成为最优秀的 MVC 框架。SpringMVC 通过一套 MVC 注解，让 POJO 成为处理请求的控制器，而无须实现任何接口。支持 REST 风格的 URL 请求。采用了松散耦合可插拔组件结构，比其他 MVC 框架更具扩展性和灵活性。基于Servlet实现，方便运行于常用Java EE容器。","covers":["https://gitee.com/mikutown/pic/raw/master/img/20200517181909.png","https://gitee.com/mikutown/pic/raw/master/img/20200517182009.png","https://gitee.com/mikutown/pic/raw/master/img/20200517182136.png","https://gitee.com/mikutown/pic/raw/master/img/20200517182239.png","https://gitee.com/mikutown/pic/raw/master/img/20200517182327.png","https://www.leafii.top/upload/2019/11/image-a35dc902b8374b56956924395c4187e1.png","https://gitee.com/mikutown/pic/raw/master/img/20200517182539.png","https://gitee.com/mikutown/pic/raw/master/img/20200517182714.png","https://gitee.com/mikutown/pic/raw/master/img/image-7b7d814843a94025aeb8d2c6e5540777.png"],"content":"<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1.概述\"></a>1.概述</h1><ul>\n<li>Spring 为展现层提供的基于 MVC 设计理念的优秀的 Web 框架，是目前最主流的 MVC 框架之一</li>\n<li>Spring3.0 后全面超越 Struts2，成为最优秀的 MVC 框架。</li>\n<li>SpringMVC 通过一套 MVC 注解，让 POJO 成为处理请求的控制器，而无须实现任何接口。</li>\n<li>支持 REST 风格的 URL 请求。</li>\n<li>采用了松散耦合可插拔组件结构，比其他 MVC 框架更具扩展性和灵活性。</li>\n<li>基于Servlet实现，方便运行于常用Java EE容器。</li>\n<li><a id=\"more\"></a>\n<h2 id=\"1-1-MVC模式\"><a href=\"#1-1-MVC模式\" class=\"headerlink\" title=\"1.1 MVC模式\"></a>1.1 MVC模式</h2>MVC 是一种使用 MVC（Model View Controller 模型-视图-控制器）设计创建 Web 应用程序的模式：<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517181909.png\" loading=\"lazy\"></li>\n<li>Model（模型）是应用程序中用于处理应用程序数据逻辑的部分。</li>\n<li>View（视图）是应用程序中处理数据显示的部分。</li>\n<li>Controller（控制器）是应用程序中处理用户交互的部分。<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182009.png\" loading=\"lazy\"></li>\n</ul>\n<p><strong>优点：耦合性低、重用性高、可维护性高。</strong></p>\n<h2 id=\"1-2-Spring-MVC-模式\"><a href=\"#1-2-Spring-MVC-模式\" class=\"headerlink\" title=\"1.2 Spring MVC 模式\"></a>1.2 Spring MVC 模式</h2><p>前端控制器是整个MVC框架中最为核心的一块，它主要用来拦截符合要求的外部请求，并把请求分发到不同的控制器去处理，根据控制器处理后的结果，生成相应的响应发送到客户端。</p>\n<p>Spring MVC使用Servlet来实现(DispatcherServlet)。DispatcherServlet 作为前置控制器是web服务器的入口，是spring mvc最重要的一个类。<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182136.png\" loading=\"lazy\"></p>\n<h2 id=\"1-3-SpringMVC-是什么\"><a href=\"#1-3-SpringMVC-是什么\" class=\"headerlink\" title=\"1.3 SpringMVC 是什么\"></a>1.3 SpringMVC 是什么</h2><p>1）一种轻量级的、基于 MVC 的 Web 层应用框架。偏前端而不是基于业务逻辑层。Spring框架的一个后续产品。</p>\n<p>2）Spring 框架结构图(新版本)：<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182239.png\" loading=\"lazy\"></p>\n<h2 id=\"1-4SpringMVC-能干什么\"><a href=\"#1-4SpringMVC-能干什么\" class=\"headerlink\" title=\"1.4SpringMVC 能干什么\"></a>1.4SpringMVC 能干什么</h2><ol>\n<li>天生与 Spring 框架集成，如：(IOC,AOP)</li>\n<li>支持 Restful 风格</li>\n<li>进行更简洁的 Web 层开发</li>\n<li>支持灵活的 URL 到页面控制器的映射</li>\n<li>非常容易与其他视图技术集成，如:Velocity、FreeMarker 等等</li>\n<li>因为模型数据不存放在特定的 API 里，而是放在一个 Model 里(Map 数据结构实现， 因此很容易被其他框架使用)</li>\n<li>非常灵活的数据验证、格式化和数据绑定机制、能使用任何对象进行数据绑定， 不必实现特定框架的 API</li>\n<li>更加简单、强大的异常处理</li>\n<li>对静态资源的支持</li>\n<li>支持灵活的本地化、主题等解析<h2 id=\"1-5-SpringMVC-常用组件\"><a href=\"#1-5-SpringMVC-常用组件\" class=\"headerlink\" title=\"1.5 SpringMVC 常用组件\"></a>1.5 SpringMVC 常用组件</h2></li>\n</ol>\n<ul>\n<li>DispatcherServlet：前端控制器</li>\n<li>Controller：处理器&#x2F;页面控制器，做的是 MVC 中的 C 的事情，但控制逻辑转移到前端控制器了，用于对请求进行处理</li>\n<li>HandlerMapping ：请求映射到处理器，找谁来处理，如果映射成功返回一个 HandlerExecutionChain 对象（包含一个 Handler 处理器(页面控制器)对象、多 个 HandlerInterceptor 拦截器对象）</li>\n<li>ViewResolver: 视图解析器，找谁来处理返回的页面。把逻辑视图解析为具体 的 View,进行这种策略模式，很容易更换其他视图技术； 如 InternalResourceViewResolver 将逻辑视图名映射为 JSP 视图</li>\n<li>LocalResolver：本地化、国际化</li>\n<li>MultipartResolver：文件上传解析器</li>\n<li>HandlerExceptionResolver：异常处理器<h2 id=\"1-6-SpringMVC常用注解\"><a href=\"#1-6-SpringMVC常用注解\" class=\"headerlink\" title=\"1.6 SpringMVC常用注解\"></a>1.6 SpringMVC常用注解</h2>@Controller</li>\n</ul>\n<p>　　负责注册一个bean 到spring 上下文中<br>@RequestMapping</p>\n<p>　　注解为控制器指定可以处理哪些 URL 请求<br>@RequestBody</p>\n<p>　　该注解用于读取Request请求的body部分数据，使用系统默认配置的HttpMessageConverter进行解析，然后把相应的数据绑定到要返回的对象上 ,再把HttpMessageConverter返回的对象数据绑定到 controller中方法的参数上<br>    浏览器发ajax请求，设置成contentType:”application&#x2F;json”,以json字符串的方式发送对象，服务器端通过@RequestBody把接受道德字符串转成java对象</p>\n<p>@ResponseBody</p>\n<p>　　 该注解用于将Controller的方法返回的对象，通过适当的HttpMessageConverter转换为指定格式后，写入到Response对象的body数据区</p>\n<p>@RestController</p>\n<p>​     </p>\n<p>@ModelAttribute 　　　</p>\n<p>　　在方法定义上使用 @ModelAttribute 注解：Spring MVC 在调用目标处理方法前，会先逐个调用在方法级上标注了@ModelAttribute 的方法</p>\n<p>　　在方法的入参前使用 @ModelAttribute 注解：可以从隐含对象中获取隐含的模型数据中获取对象，再将请求参数 –绑定到对象中，再传入入参将方法入参对象添加到模型中 </p>\n<p>@RequestParam　</p>\n<p>　　在处理方法入参处使用 @RequestParam 可以把请求参 数传递给请求方法</p>\n<p>@PathVariable</p>\n<p>　　绑定 URL 占位符到入参<br>@ExceptionHandler</p>\n<p>　　注解到方法上，出现异常时会执行该方法<br>@ControllerAdvice</p>\n<p>　　使一个Contoller成为全局的异常处理类，类中用@ExceptionHandler方法注解的方法可以处理所有Controller发生的异常</p>\n<h1 id=\"2-SpringMVC-HelloWorld\"><a href=\"#2-SpringMVC-HelloWorld\" class=\"headerlink\" title=\"2 SpringMVC-HelloWorld\"></a>2 SpringMVC-HelloWorld</h1><h2 id=\"2-1-新建-maven工程，添加web支持，引入各种-jar-包依赖\"><a href=\"#2-1-新建-maven工程，添加web支持，引入各种-jar-包依赖\" class=\"headerlink\" title=\"2.1.新建 maven工程，添加web支持，引入各种 jar 包依赖\"></a>2.1.新建 maven工程，添加web支持，引入各种 jar 包依赖</h2><p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182327.png\" loading=\"lazy\"><br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182403.png\" loading=\"lazy\"><br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182429.png\" loading=\"lazy\"><br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182452.png\" loading=\"lazy\"></p>\n<h2 id=\"2-2-引入jar包依赖\"><a href=\"#2-2-引入jar包依赖\" class=\"headerlink\" title=\"2.2 引入jar包依赖\"></a>2.2 引入jar包依赖</h2><pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-webmvc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.0.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><img src=\"https://www.leafii.top/upload/2019/11/image-a35dc902b8374b56956924395c4187e1.png\" alt=\"image.png\" loading=\"lazy\"></p>\n<h2 id=\"2-3-在-web-xml-中配置-DispatcherServlet\"><a href=\"#2-3-在-web-xml-中配置-DispatcherServlet\" class=\"headerlink\" title=\"2.3. 在 web.xml 中配置 DispatcherServlet\"></a>2.3. 在 web.xml 中配置 DispatcherServlet</h2><pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>web-app</span>\n        <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3.1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!-- 配置 SpringMVC 核心控制器： --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>springDispatcherServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>org.springframework.web.servlet.DispatcherServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- 配置 DispatcherServlet 的初始化參數：设置文件的路径和文件名称 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>init-param</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-name</span><span class=\"token punctuation\">></span></span>contextConfigLocation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-value</span><span class=\"token punctuation\">></span></span>classpath:springmvc.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-value</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>init-param</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>load-on-startup</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>load-on-startup</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>springDispatcherServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!--拦截所有请求--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>web-app</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>*<em>拦截所有请求应该将url-pattern的&#x2F;换成&#x2F;<em>，这样可以拦截一切请求</em></em><br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182539.png\" loading=\"lazy\"><br>新建对应的目录并且将其标记：<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182633.png\" loading=\"lazy\"></p>\n<h2 id=\"2-4-加入-SpringMVC-的配置文件：springmvc-xml\"><a href=\"#2-4-加入-SpringMVC-的配置文件：springmvc-xml\" class=\"headerlink\" title=\"2.4 加入 SpringMVC 的配置文件：springmvc.xml\"></a>2.4 加入 SpringMVC 的配置文件：springmvc.xml</h2><pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>context</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/context<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans\nhttp://www.springframework.org/schema/beans/spring-beans.xsd\nhttp://www.springframework.org/schema/context\nhttp://www.springframework.org/schema/context/spring-context.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- 设置扫描组件的包： --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>component-scan</span> <span class=\"token attr-name\">base-package</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>net.suncaper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"2-5-需要创建一个入口页面，index-jsp\"><a href=\"#2-5-需要创建一个入口页面，index-jsp\" class=\"headerlink\" title=\"2.5 需要创建一个入口页面，index.jsp\"></a>2.5 需要创建一个入口页面，index.jsp</h2><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;pageContext.request.contextPath&#125;/helloworld<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>HelloWorld<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"2-6-编写处理请求的处理器，并标识为处理器\"><a href=\"#2-6-编写处理请求的处理器，并标识为处理器\" class=\"headerlink\" title=\"2.6 编写处理请求的处理器，并标识为处理器\"></a>2.6 编写处理请求的处理器，并标识为处理器</h2><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>suncaper<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">/**\n * @author nedli\n */</span>\n<span class=\"token comment\">//1. 用@Controller告诉Spring MVC这是一个处理器，可以处理页面请求</span>\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//2. 标志此方法处理 /hello 请求</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//3. 返回.jsp页面的路径，很麻烦</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"/WEB-INF/views/hello.jsp\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h2 id=\"2-7-配置视图解析器（简化路径配置）\"><a href=\"#2-7-配置视图解析器（简化路径配置）\" class=\"headerlink\" title=\"2.7. 配置视图解析器（简化路径配置）\"></a>2.7. 配置视图解析器（简化路径配置）</h2><pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- 配置视图解析器：如何将控制器返回的结果字符串，转换为一个物理的视图文件（拼接页面地址）--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>internalResourceViewResolver<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prefix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/WEB-INF/views/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>suffix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.jsp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>这个时候Controller改为</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>suncaper<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">/**\n * @author nedli\n */</span>\n<span class=\"token comment\">//1. 用@Controller告诉Spring MVC这是一个处理器，可以处理页面请求</span>\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//2. 标志此方法处理 /hello 请求,使用hello也是一样的效果哦</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//3. 返回.jsp页面的路径</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h2 id=\"2-8-部署测试\"><a href=\"#2-8-部署测试\" class=\"headerlink\" title=\"2.8.部署测试\"></a>2.8.部署测试</h2><p><a href=\"http://localhost:8080/SpringMVC_01_HelloWorld/index.jsp\">http://localhost:8080/SpringMVC_01_HelloWorld&#x2F;index.jsp</a></p>\n<h1 id=\"3-HelloWorld-深度解析\"><a href=\"#3-HelloWorld-深度解析\" class=\"headerlink\" title=\"3. HelloWorld 深度解析\"></a>3. HelloWorld 深度解析</h1><h2 id=\"3-1-HelloWorld-请求流程图解：\"><a href=\"#3-1-HelloWorld-请求流程图解：\" class=\"headerlink\" title=\"3.1 HelloWorld 请求流程图解：\"></a>3.1 HelloWorld 请求流程图解：</h2><p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182714.png\" loading=\"lazy\"><br><strong>一般请求的映射路径名称和处理请求的方法名称最好一致（实质上方法名称任意）;</strong></p>\n<p><strong>经常有同学会出现配置上错误，把“&#x2F;WEB-INF&#x2F;views&#x2F;”配置成了 “&#x2F;WEB-INF&#x2F;views”;</strong></p>\n<h2 id=\"3-2-流程分析\"><a href=\"#3-2-流程分析\" class=\"headerlink\" title=\"3.2 流程分析\"></a>3.2 流程分析</h2><p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-7b7d814843a94025aeb8d2c6e5540777.png\" loading=\"lazy\"></p>\n<h1 id=\"基本步骤\"><a href=\"#基本步骤\" class=\"headerlink\" title=\"基本步骤:\"></a>基本步骤:</h1><ul>\n<li>客户端请求提交到 DispatcherServlet</li>\n<li>由 DispatcherServlet 控制器查询一个或多个 HandlerMapping，找到处理请求的 Controller</li>\n<li>DispatcherServlet 将请求提交到 Controller（也称为 Handler）</li>\n<li>Controller 调用业务逻辑处理后，返回 ModelAndView</li>\n<li>DispatcherServlet 查询一个或多个 ViewResoler 视图解析器，找到 ModelAndView 指定的视图</li>\n<li>视图负责将结果显示到客户端.</li>\n</ul>\n","more":"<h2 id=\"1-1-MVC模式\"><a href=\"#1-1-MVC模式\" class=\"headerlink\" title=\"1.1 MVC模式\"></a>1.1 MVC模式</h2>MVC 是一种使用 MVC（Model View Controller 模型-视图-控制器）设计创建 Web 应用程序的模式：<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517181909.png\"></li>\n<li>Model（模型）是应用程序中用于处理应用程序数据逻辑的部分。</li>\n<li>View（视图）是应用程序中处理数据显示的部分。</li>\n<li>Controller（控制器）是应用程序中处理用户交互的部分。<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182009.png\"></li>\n</ul>\n<p><strong>优点：耦合性低、重用性高、可维护性高。</strong></p>\n<h2 id=\"1-2-Spring-MVC-模式\"><a href=\"#1-2-Spring-MVC-模式\" class=\"headerlink\" title=\"1.2 Spring MVC 模式\"></a>1.2 Spring MVC 模式</h2><p>前端控制器是整个MVC框架中最为核心的一块，它主要用来拦截符合要求的外部请求，并把请求分发到不同的控制器去处理，根据控制器处理后的结果，生成相应的响应发送到客户端。</p>\n<p>Spring MVC使用Servlet来实现(DispatcherServlet)。DispatcherServlet 作为前置控制器是web服务器的入口，是spring mvc最重要的一个类。<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182136.png\"></p>\n<h2 id=\"1-3-SpringMVC-是什么\"><a href=\"#1-3-SpringMVC-是什么\" class=\"headerlink\" title=\"1.3 SpringMVC 是什么\"></a>1.3 SpringMVC 是什么</h2><p>1）一种轻量级的、基于 MVC 的 Web 层应用框架。偏前端而不是基于业务逻辑层。Spring框架的一个后续产品。</p>\n<p>2）Spring 框架结构图(新版本)：<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182239.png\"></p>\n<h2 id=\"1-4SpringMVC-能干什么\"><a href=\"#1-4SpringMVC-能干什么\" class=\"headerlink\" title=\"1.4SpringMVC 能干什么\"></a>1.4SpringMVC 能干什么</h2><ol>\n<li>天生与 Spring 框架集成，如：(IOC,AOP)</li>\n<li>支持 Restful 风格</li>\n<li>进行更简洁的 Web 层开发</li>\n<li>支持灵活的 URL 到页面控制器的映射</li>\n<li>非常容易与其他视图技术集成，如:Velocity、FreeMarker 等等</li>\n<li>因为模型数据不存放在特定的 API 里，而是放在一个 Model 里(Map 数据结构实现， 因此很容易被其他框架使用)</li>\n<li>非常灵活的数据验证、格式化和数据绑定机制、能使用任何对象进行数据绑定， 不必实现特定框架的 API</li>\n<li>更加简单、强大的异常处理</li>\n<li>对静态资源的支持</li>\n<li>支持灵活的本地化、主题等解析<h2 id=\"1-5-SpringMVC-常用组件\"><a href=\"#1-5-SpringMVC-常用组件\" class=\"headerlink\" title=\"1.5 SpringMVC 常用组件\"></a>1.5 SpringMVC 常用组件</h2></li>\n</ol>\n<ul>\n<li>DispatcherServlet：前端控制器</li>\n<li>Controller：处理器&#x2F;页面控制器，做的是 MVC 中的 C 的事情，但控制逻辑转移到前端控制器了，用于对请求进行处理</li>\n<li>HandlerMapping ：请求映射到处理器，找谁来处理，如果映射成功返回一个 HandlerExecutionChain 对象（包含一个 Handler 处理器(页面控制器)对象、多 个 HandlerInterceptor 拦截器对象）</li>\n<li>ViewResolver: 视图解析器，找谁来处理返回的页面。把逻辑视图解析为具体 的 View,进行这种策略模式，很容易更换其他视图技术； 如 InternalResourceViewResolver 将逻辑视图名映射为 JSP 视图</li>\n<li>LocalResolver：本地化、国际化</li>\n<li>MultipartResolver：文件上传解析器</li>\n<li>HandlerExceptionResolver：异常处理器<h2 id=\"1-6-SpringMVC常用注解\"><a href=\"#1-6-SpringMVC常用注解\" class=\"headerlink\" title=\"1.6 SpringMVC常用注解\"></a>1.6 SpringMVC常用注解</h2>@Controller</li>\n</ul>\n<p>　　负责注册一个bean 到spring 上下文中<br>@RequestMapping</p>\n<p>　　注解为控制器指定可以处理哪些 URL 请求<br>@RequestBody</p>\n<p>　　该注解用于读取Request请求的body部分数据，使用系统默认配置的HttpMessageConverter进行解析，然后把相应的数据绑定到要返回的对象上 ,再把HttpMessageConverter返回的对象数据绑定到 controller中方法的参数上<br>    浏览器发ajax请求，设置成contentType:”application&#x2F;json”,以json字符串的方式发送对象，服务器端通过@RequestBody把接受道德字符串转成java对象</p>\n<p>@ResponseBody</p>\n<p>　　 该注解用于将Controller的方法返回的对象，通过适当的HttpMessageConverter转换为指定格式后，写入到Response对象的body数据区</p>\n<p>@RestController</p>\n<p>​     </p>\n<p>@ModelAttribute 　　　</p>\n<p>　　在方法定义上使用 @ModelAttribute 注解：Spring MVC 在调用目标处理方法前，会先逐个调用在方法级上标注了@ModelAttribute 的方法</p>\n<p>　　在方法的入参前使用 @ModelAttribute 注解：可以从隐含对象中获取隐含的模型数据中获取对象，再将请求参数 –绑定到对象中，再传入入参将方法入参对象添加到模型中 </p>\n<p>@RequestParam　</p>\n<p>　　在处理方法入参处使用 @RequestParam 可以把请求参 数传递给请求方法</p>\n<p>@PathVariable</p>\n<p>　　绑定 URL 占位符到入参<br>@ExceptionHandler</p>\n<p>　　注解到方法上，出现异常时会执行该方法<br>@ControllerAdvice</p>\n<p>　　使一个Contoller成为全局的异常处理类，类中用@ExceptionHandler方法注解的方法可以处理所有Controller发生的异常</p>\n<h1 id=\"2-SpringMVC-HelloWorld\"><a href=\"#2-SpringMVC-HelloWorld\" class=\"headerlink\" title=\"2 SpringMVC-HelloWorld\"></a>2 SpringMVC-HelloWorld</h1><h2 id=\"2-1-新建-maven工程，添加web支持，引入各种-jar-包依赖\"><a href=\"#2-1-新建-maven工程，添加web支持，引入各种-jar-包依赖\" class=\"headerlink\" title=\"2.1.新建 maven工程，添加web支持，引入各种 jar 包依赖\"></a>2.1.新建 maven工程，添加web支持，引入各种 jar 包依赖</h2><p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182327.png\"><br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182403.png\"><br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182429.png\"><br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182452.png\"></p>\n<h2 id=\"2-2-引入jar包依赖\"><a href=\"#2-2-引入jar包依赖\" class=\"headerlink\" title=\"2.2 引入jar包依赖\"></a>2.2 引入jar包依赖</h2><pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-webmvc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.0.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><img src=\"https://www.leafii.top/upload/2019/11/image-a35dc902b8374b56956924395c4187e1.png\" alt=\"image.png\"></p>\n<h2 id=\"2-3-在-web-xml-中配置-DispatcherServlet\"><a href=\"#2-3-在-web-xml-中配置-DispatcherServlet\" class=\"headerlink\" title=\"2.3. 在 web.xml 中配置 DispatcherServlet\"></a>2.3. 在 web.xml 中配置 DispatcherServlet</h2><pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>web-app</span>\n        <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3.1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!-- 配置 SpringMVC 核心控制器： --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>springDispatcherServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>org.springframework.web.servlet.DispatcherServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- 配置 DispatcherServlet 的初始化參數：设置文件的路径和文件名称 --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>init-param</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-name</span><span class=\"token punctuation\">></span></span>contextConfigLocation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-value</span><span class=\"token punctuation\">></span></span>classpath:springmvc.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-value</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>init-param</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>load-on-startup</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>load-on-startup</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>springDispatcherServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!--拦截所有请求--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>web-app</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>*<em>拦截所有请求应该将url-pattern的&#x2F;换成&#x2F;<em>，这样可以拦截一切请求</em></em><br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182539.png\"><br>新建对应的目录并且将其标记：<br><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182633.png\"></p>\n<h2 id=\"2-4-加入-SpringMVC-的配置文件：springmvc-xml\"><a href=\"#2-4-加入-SpringMVC-的配置文件：springmvc-xml\" class=\"headerlink\" title=\"2.4 加入 SpringMVC 的配置文件：springmvc.xml\"></a>2.4 加入 SpringMVC 的配置文件：springmvc.xml</h2><pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>context</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/context<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans\nhttp://www.springframework.org/schema/beans/spring-beans.xsd\nhttp://www.springframework.org/schema/context\nhttp://www.springframework.org/schema/context/spring-context.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- 设置扫描组件的包： --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>component-scan</span> <span class=\"token attr-name\">base-package</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>net.suncaper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"2-5-需要创建一个入口页面，index-jsp\"><a href=\"#2-5-需要创建一个入口页面，index-jsp\" class=\"headerlink\" title=\"2.5 需要创建一个入口页面，index.jsp\"></a>2.5 需要创建一个入口页面，index.jsp</h2><pre class=\"language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;pageContext.request.contextPath&#125;/helloworld<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>HelloWorld<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"2-6-编写处理请求的处理器，并标识为处理器\"><a href=\"#2-6-编写处理请求的处理器，并标识为处理器\" class=\"headerlink\" title=\"2.6 编写处理请求的处理器，并标识为处理器\"></a>2.6 编写处理请求的处理器，并标识为处理器</h2><pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>suncaper<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">/**\n * @author nedli\n */</span>\n<span class=\"token comment\">//1. 用@Controller告诉Spring MVC这是一个处理器，可以处理页面请求</span>\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//2. 标志此方法处理 /hello 请求</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//3. 返回.jsp页面的路径，很麻烦</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"/WEB-INF/views/hello.jsp\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h2 id=\"2-7-配置视图解析器（简化路径配置）\"><a href=\"#2-7-配置视图解析器（简化路径配置）\" class=\"headerlink\" title=\"2.7. 配置视图解析器（简化路径配置）\"></a>2.7. 配置视图解析器（简化路径配置）</h2><pre class=\"language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- 配置视图解析器：如何将控制器返回的结果字符串，转换为一个物理的视图文件（拼接页面地址）--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>internalResourceViewResolver<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prefix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/WEB-INF/views/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>suffix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.jsp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>这个时候Controller改为</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">net<span class=\"token punctuation\">.</span>suncaper<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">/**\n * @author nedli\n */</span>\n<span class=\"token comment\">//1. 用@Controller告诉Spring MVC这是一个处理器，可以处理页面请求</span>\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//2. 标志此方法处理 /hello 请求,使用hello也是一样的效果哦</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//3. 返回.jsp页面的路径</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h2 id=\"2-8-部署测试\"><a href=\"#2-8-部署测试\" class=\"headerlink\" title=\"2.8.部署测试\"></a>2.8.部署测试</h2><p><a href=\"http://localhost:8080/SpringMVC_01_HelloWorld/index.jsp\">http://localhost:8080/SpringMVC_01_HelloWorld&#x2F;index.jsp</a></p>\n<h1 id=\"3-HelloWorld-深度解析\"><a href=\"#3-HelloWorld-深度解析\" class=\"headerlink\" title=\"3. HelloWorld 深度解析\"></a>3. HelloWorld 深度解析</h1><h2 id=\"3-1-HelloWorld-请求流程图解：\"><a href=\"#3-1-HelloWorld-请求流程图解：\" class=\"headerlink\" title=\"3.1 HelloWorld 请求流程图解：\"></a>3.1 HelloWorld 请求流程图解：</h2><p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/20200517182714.png\"><br><strong>一般请求的映射路径名称和处理请求的方法名称最好一致（实质上方法名称任意）;</strong></p>\n<p><strong>经常有同学会出现配置上错误，把“&#x2F;WEB-INF&#x2F;views&#x2F;”配置成了 “&#x2F;WEB-INF&#x2F;views”;</strong></p>\n<h2 id=\"3-2-流程分析\"><a href=\"#3-2-流程分析\" class=\"headerlink\" title=\"3.2 流程分析\"></a>3.2 流程分析</h2><p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-7b7d814843a94025aeb8d2c6e5540777.png\"></p>\n<h1 id=\"基本步骤\"><a href=\"#基本步骤\" class=\"headerlink\" title=\"基本步骤:\"></a>基本步骤:</h1><ul>\n<li>客户端请求提交到 DispatcherServlet</li>\n<li>由 DispatcherServlet 控制器查询一个或多个 HandlerMapping，找到处理请求的 Controller</li>\n<li>DispatcherServlet 将请求提交到 Controller（也称为 Handler）</li>\n<li>Controller 调用业务逻辑处理后，返回 ModelAndView</li>\n<li>DispatcherServlet 查询一个或多个 ViewResoler 视图解析器，找到 ModelAndView 指定的视图</li>\n<li>视图负责将结果显示到客户端.</li>\n</ul>","categories":[],"tags":[{"name":"Spring","path":"api/tags/Spring.json"}]}
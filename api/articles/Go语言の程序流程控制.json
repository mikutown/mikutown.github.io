{"title":"Go语言の程序流程控制","slug":"Go语言の程序流程控制","date":"2021-01-15T14:28:36.000Z","updated":"2021-01-15T17:35:06.041Z","comments":true,"path":"api/articles/Go语言の程序流程控制.json","excerpt":"Go语言の程序流程控制程序流程控制介绍在程序中，程序运行的流程控制决定程序是如何执行的，是我们必须掌握的，主要有三大流程控制语句。顺序控制分支控制循环控制","covers":["https://gitee.com/mikutown/pic/raw/master/img/image-20210115235239983.png","https://gitee.com/mikutown/pic/raw/master/img/image-20210116001333710.png","https://gitee.com/mikutown/pic/raw/master/img/image-20210116001729636.png","https://gitee.com/mikutown/pic/raw/master/img/image-20210116005439355.png","https://gitee.com/mikutown/pic/raw/master/img/image-20210116012330224.png","https://gitee.com/mikutown/pic/raw/master/img/image-20210116013022820.png"],"content":"<h1 id=\"Go语言の程序流程控制\"><a href=\"#Go语言の程序流程控制\" class=\"headerlink\" title=\"Go语言の程序流程控制\"></a>Go语言の程序流程控制</h1><h2 id=\"程序流程控制介绍\"><a href=\"#程序流程控制介绍\" class=\"headerlink\" title=\"程序流程控制介绍\"></a>程序流程控制介绍</h2><p>在程序中，程序运行的流程控制决定程序是如何执行的，是我们必须掌握的，主要有三大流程控制语句。</p>\n<ol>\n<li>顺序控制</li>\n<li>分支控制</li>\n<li>循环控制</li>\n</ol>\n<a id=\"more\"></a>\n\n<h2 id=\"顺序控制\"><a href=\"#顺序控制\" class=\"headerlink\" title=\"顺序控制\"></a>顺序控制</h2><p>​    程序从上到下逐行执行，中间没有任何判断和跳转。</p>\n<p>​    一个案例说明，必须下面的代码中，没有判断，也没有跳转，因此程序按照默认的流程执行，即顺序控制。</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> days <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">97</span>\n\t<span class=\"token keyword\">var</span> week <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> days <span class=\"token operator\">/</span> <span class=\"token number\">7</span>\n\t<span class=\"token keyword\">var</span> day <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> days <span class=\"token operator\">%</span> <span class=\"token number\">7</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d个星期零%d天\\n\"</span><span class=\"token punctuation\">,</span> week<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> huashi <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">134.2</span>\n\t<span class=\"token keyword\">var</span> sheshi <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">5.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>huashi <span class=\"token operator\">-</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%v 对应的摄氏温度=%\u001dv \\n\"</span><span class=\"token punctuation\">,</span> huashi<span class=\"token punctuation\">,</span> sheshi<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\">13个星期零6天\n134.2对应的摄氏温度&#x3D; 19 </code></pre>\n<h3 id=\"程序控制的流程图\"><a href=\"#程序控制的流程图\" class=\"headerlink\" title=\"程序控制的流程图\"></a>程序控制的流程图</h3><p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210115235239983.png\" alt=\"image-20210115235239983\" loading=\"lazy\"></p>\n<h3 id=\"顺序控制举例和注意事项\"><a href=\"#顺序控制举例和注意事项\" class=\"headerlink\" title=\"顺序控制举例和注意事项\"></a>顺序控制举例和注意事项</h3><p>​    Golang中定义变量时采用合法的前向引用。如：</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> num1 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token comment\">//声明了num1</span>\n  <span class=\"token keyword\">var</span> num2 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> num1 <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token comment\">//使用num1</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>num2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>错误形式：</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> num2 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> num1 <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token comment\">//使用num1</span>\n  <span class=\"token keyword\">var</span> num1 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token comment\">//声明num1 (❌)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>num2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h2 id=\"分支控制\"><a href=\"#分支控制\" class=\"headerlink\" title=\"分支控制\"></a>分支控制</h2><h3 id=\"分支控制的基本介绍\"><a href=\"#分支控制的基本介绍\" class=\"headerlink\" title=\"分支控制的基本介绍\"></a>分支控制的基本介绍</h3><p>分支控制就是让程序有选择执行。有下面三种形式</p>\n<ol>\n<li>单分支</li>\n<li>双分支</li>\n<li>多分枝</li>\n</ol>\n<h3 id=\"单分支控制\"><a href=\"#单分支控制\" class=\"headerlink\" title=\"单分支控制\"></a>单分支控制</h3><ul>\n<li>基本语法</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> 条件表达式<span class=\"token punctuation\">&#123;</span>\n  执行代码块\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p><strong>说明：当条件表达式为true时，就会执行{}的代码。注意{}是必须有的，就算你只写一行代码。</strong></p>\n<ul>\n<li>应用案例</li>\n</ul>\n<p>编写一个程序，可以输入人的年龄,如果该同志的年龄大于 18 岁,则输出 “你年龄大 于 18,要对自己的行为负责!”。      需求—【分析】—&gt;代码</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> age <span class=\"token builtin\">int</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入年龄：\"</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">if</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你年龄大于18，要对自己的行为负责！\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\">➜  main go run .&#x2F;main.go\n请输入年龄：\n10\n➜  main go run .&#x2F;main.go\n请输入年龄：\n29\n你年龄大于18，要对自己的行为负责！\n➜  main </code></pre>\n<ul>\n<li><p>单分支的流程图</p>\n<p>流程图可以用<strong>图形方式</strong>来更加清晰的描述程序执行的流程。</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210116001333710.png\" alt=\"image-20210116001333710\" loading=\"lazy\"></p>\n</li>\n<li><p>单分支的细节说明</p>\n</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> age <span class=\"token operator\">:=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你年龄大于18，要对自己的行为负责!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h3 id=\"双分支控制\"><a href=\"#双分支控制\" class=\"headerlink\" title=\"双分支控制\"></a>双分支控制</h3><ul>\n<li>基本语法</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> 条件表达式<span class=\"token punctuation\">&#123;</span>\n  执行代码块<span class=\"token number\">1</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n  执行代码块<span class=\"token number\">2</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p><strong>说明：当条件表达式成立，即执行代码块1，否则执行代码块2.{}也是必须有的。</strong></p>\n<ul>\n<li>应用案例</li>\n</ul>\n<p>编写一个程序,可以输入人的年龄,如果该同志的年龄大于 18 岁,则输出 “你年龄大于 18,要对 自己的行为负责!”。否则 ,输出”你的年龄不大这次放过你了.”</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> age <span class=\"token builtin\">int</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入年龄：\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">if</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token punctuation\">&#123;</span>\n\t  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你年龄大于18，要对自己的行为负责！\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你的年龄不大这次放过你了.\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\">➜  main go run .&#x2F;main.go\n请输入年龄：\n19\n你年龄大于18，要对自己的行为负责！\n➜  main go run .&#x2F;main.go\n请输入年龄：\n12\n你的年龄不大这次放过你了.</code></pre>\n<ul>\n<li>双分支流程图的分析</li>\n</ul>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210116001729636.png\" alt=\"image-20210116001729636\" loading=\"lazy\"></p>\n<ul>\n<li>对双分支的总结</li>\n</ul>\n<ol>\n<li>从上图看，条件表达式就是age&gt;18</li>\n<li>执行代码块1 就是 fmt.Prinltn(“你的年龄大于18”)…</li>\n<li>执行代码块2 就是 fmt.Println(“你的年龄不大”)…</li>\n<li>双分支<strong>只会执行其中的一个分支。</strong></li>\n</ol>\n<h3 id=\"单分支和双分支的案例\"><a href=\"#单分支和双分支的案例\" class=\"headerlink\" title=\"单分支和双分支的案例\"></a>单分支和双分支的案例</h3><ol>\n<li>对下列代码，若有输出，指出输出结果.</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> x <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n<span class=\"token keyword\">var</span> y <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hihihi\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x is =\"</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//输出结果是 hihihi</span></code></pre>\n<ol start=\"2\">\n<li>对下列代码，若有输出，指出输出结果.</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> x <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n<span class=\"token keyword\">if</span> x <span class=\"token operator\">></span> <span class=\"token number\">2</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//没有&#123;&#125; 所以编译错误哦</span></code></pre>\n<ol start=\"3\">\n<li>对下列代码，若有输出，指出输出结果.</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> x <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n<span class=\"token keyword\">if</span> x <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//编译错误，因为else不能换行</span></code></pre>\n<ol start=\"4\">\n<li>对下列代码，若有输出，指出输出结果.</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> x <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//输出ok 但是建议把if(x>2)写成if x > 2</span></code></pre>\n<ol start=\"5\">\n<li>编写程序，声明 2 个 int32 型变量并赋值。判断两数之和，如果大于等于 50，打印“hello world!</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> n1 <span class=\"token builtin\">int32</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n  <span class=\"token keyword\">var</span> n2 <span class=\"token builtin\">int32</span> <span class=\"token operator\">=</span> <span class=\"token number\">50</span>\n  <span class=\"token keyword\">if</span> n1 <span class=\"token operator\">+</span> n2 <span class=\"token operator\">>=</span><span class=\"token number\">50</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello,world\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<ol start=\"6\">\n<li>编写程序，声明 2 个 float64 型变量并赋值。判断第一个数大于 10.0，且第 2 个数小于 20.0，打 印两数之和。</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> n3 <span class=\"token builtin\">float64</span> <span class=\"token operator\">=</span> <span class=\"token number\">11.0</span>\n<span class=\"token keyword\">var</span> n4 <span class=\"token builtin\">float64</span> <span class=\"token operator\">=</span> <span class=\"token number\">17.0</span>\n<span class=\"token keyword\">if</span> n3 <span class=\"token operator\">></span> <span class=\"token number\">10.0</span> <span class=\"token operator\">&amp;&amp;</span> n4 <span class=\"token operator\">&lt;</span> <span class=\"token number\">20.0</span> <span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"和=\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>n3<span class=\"token operator\">+</span>n4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<ol start=\"7\">\n<li>定义两个变量 int32，判断二者的和，是否能被 3 又能被 5 整除，打印提示信息</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> num1 <span class=\"token builtin\">int32</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">var</span> num2 <span class=\"token builtin\">int32</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"能被3又能被5整除\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<ol start=\"8\">\n<li>判断一个年份是否是闰年，闰年的条件是符合下面二者之一:(1)年份能被4整除，但不能被100 整除;(2)能被 400 整除</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> year <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">2019</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>year <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> year <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">||</span> year <span class=\"token operator\">%</span> <span class=\"token number\">400</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">,</span> <span class=\"token string\">\"是闰年!``\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h3 id=\"多分支控制\"><a href=\"#多分支控制\" class=\"headerlink\" title=\"多分支控制\"></a>多分支控制</h3><ul>\n<li>基本语法</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> 条件表达式<span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n  执行代码块<span class=\"token number\">1</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">&#123;</span>\n  执行代码块<span class=\"token number\">2</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n  执行代码块n\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<ul>\n<li>说明：</li>\n</ul>\n<ol>\n<li>多分支的判断流程如下：<ol>\n<li>先判断条件表达式1是否成立，如果为真，就执行代码块1</li>\n<li>如果条件表达式1如果为假，就去判断条件表达式2是否成立，如果条件表达式2为真，就执行代码块2</li>\n<li>以此类推</li>\n<li>如果所有的条件表达式不成立，则执行else的语句块。</li>\n</ol>\n</li>\n<li>else 不是必须的</li>\n<li>多分支只能有一个执行入口。</li>\n</ol>\n<ul>\n<li>看一个多分支的流程图</li>\n</ul>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210116005439355.png\" alt=\"image-20210116005439355\" loading=\"lazy\"></p>\n<ul>\n<li>多分支的快速入门案例</li>\n</ul>\n<p>岳小鹏参加 Golang 考试，他和父亲岳不群达成承诺: 如果:</p>\n<p>​    成绩为 100 分时，奖励一辆 BMW; </p>\n<p>​    成绩为(80，99]时，奖励一台 iphone7plus; </p>\n<p>​    当成绩为[60,80]时，奖励一个 iPad; </p>\n<p>​    其它时，什么奖励也没有。 请从键盘输入岳小鹏的期末成绩，并加以判断</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> score <span class=\"token builtin\">int</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入成绩:\"</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>score<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> score <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"奖励BMW\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> score <span class=\"token operator\">></span> <span class=\"token number\">80</span> <span class=\"token operator\">&amp;&amp;</span> score <span class=\"token operator\">&lt;=</span> <span class=\"token number\">99</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"奖励一台iphone12 pro max\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> score <span class=\"token operator\">>=</span> <span class=\"token number\">60</span> <span class=\"token operator\">&amp;&amp;</span> score <span class=\"token operator\">&lt;=</span><span class=\"token number\">80</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"奖励一个iPad\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"啥也没\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<ul>\n<li><p>多分支的课堂练习</p>\n<p>案例演示2</p>\n</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> b <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token keyword\">if</span> b <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> b<span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>b<span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//c</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//输出结果是b</span>\n<span class=\"token comment\">//如果写成b=flase;能编译通过吗？如果能，结果是？（不能通过，if的条件表达式不是赋值语句)</span></code></pre>\n<p>​    案例演示3</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210116012330224.png\" alt=\"image-20210116012330224\" loading=\"lazy\"></p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"math\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">float64</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span>\n\t<span class=\"token keyword\">var</span> b <span class=\"token builtin\">float64</span> <span class=\"token operator\">=</span> <span class=\"token number\">4.0</span>\n\t<span class=\"token keyword\">var</span> c <span class=\"token builtin\">float64</span> <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span>\n\n\tm <span class=\"token operator\">:=</span> b <span class=\"token operator\">*</span> b <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">*</span> c\n\t<span class=\"token comment\">//多分支判断</span>\n\t<span class=\"token keyword\">if</span> m <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n\t  x1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">+</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a\n\t  x2 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">-</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a\n\t  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x1=%v x2=%v \\n\"</span><span class=\"token punctuation\">,</span> x1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> m <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">&#123;</span>\n\t  x1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">+</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a\n\t  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x1=%v\\n\"</span><span class=\"token punctuation\">,</span> x1<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无解...\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\">➜  main go run .&#x2F;main.go\nx1&#x3D;-4%                                                                                           \n➜  main go run .&#x2F;main.go\nx1&#x3D;-0.5857864376269049 x2&#x3D;-3.414213562373095%                                                    \n➜  main go run .&#x2F;main.go\nx1&#x3D;-0.5857864376269049 x2&#x3D;-3.414213562373095 \n➜  main </code></pre>\n<p>​    案例演示4</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210116013022820.png\" alt=\"image-20210116013022820\" loading=\"lazy\"></p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> height <span class=\"token builtin\">int32</span>\n<span class=\"token keyword\">var</span> money <span class=\"token builtin\">float32</span>\n<span class=\"token keyword\">var</span> handsome <span class=\"token builtin\">bool</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入身高（厘米）\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>height<span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入财富（千万）\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>money<span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入是否帅气（true or false）\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>handsome<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> height <span class=\"token operator\">></span> <span class=\"token number\">180</span> <span class=\"token operator\">&amp;&amp;</span> money <span class=\"token operator\">></span><span class=\"token number\">1.0</span> <span class=\"token operator\">&amp;&amp;</span> handsome <span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"一定要嫁给他！！！\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> height <span class=\"token operator\">></span> <span class=\"token number\">180</span> <span class=\"token operator\">||</span> money <span class=\"token operator\">></span><span class=\"token number\">1.0</span> <span class=\"token operator\">||</span> handsome<span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"勉勉强强嫁给他吧\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"不嫁......\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\">➜  main go run .&#x2F;main.go\n请输入年龄：\n10\n➜  main go run .&#x2F;main.go\n请输入年龄：\n29\n➜  main go run .&#x2F;main.go\n请输入身高（厘米）\n190\n请输入财富（千万）\n12\n请输入是否帅气（true or false）\ntrue\n一定要嫁给他！！！\n➜  main go run .&#x2F;main.go\n请输入身高（厘米）\n120\n请输入财富（千万）\n1\n请输入是否帅气（true or false）\nfalse\n不嫁......\n➜  main go run .&#x2F;main.go\n请输入身高（厘米）\n120\n请输入财富（千万）\n1.2\n请输入是否帅气（true or false）\nfalse\n勉勉强强嫁给他吧\n➜  main </code></pre>\n<h3 id=\"嵌套分支\"><a href=\"#嵌套分支\" class=\"headerlink\" title=\"嵌套分支\"></a>嵌套分支</h3><ul>\n<li>基本介绍</li>\n</ul>\n","more":"<h2 id=\"顺序控制\"><a href=\"#顺序控制\" class=\"headerlink\" title=\"顺序控制\"></a>顺序控制</h2><p>​    程序从上到下逐行执行，中间没有任何判断和跳转。</p>\n<p>​    一个案例说明，必须下面的代码中，没有判断，也没有跳转，因此程序按照默认的流程执行，即顺序控制。</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> days <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">97</span>\n\t<span class=\"token keyword\">var</span> week <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> days <span class=\"token operator\">/</span> <span class=\"token number\">7</span>\n\t<span class=\"token keyword\">var</span> day <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> days <span class=\"token operator\">%</span> <span class=\"token number\">7</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d个星期零%d天\\n\"</span><span class=\"token punctuation\">,</span> week<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> huashi <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">134.2</span>\n\t<span class=\"token keyword\">var</span> sheshi <span class=\"token builtin\">float32</span> <span class=\"token operator\">=</span> <span class=\"token number\">5.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>huashi <span class=\"token operator\">-</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%v 对应的摄氏温度=%\u001dv \\n\"</span><span class=\"token punctuation\">,</span> huashi<span class=\"token punctuation\">,</span> sheshi<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\">13个星期零6天\n134.2对应的摄氏温度&#x3D; 19 </code></pre>\n<h3 id=\"程序控制的流程图\"><a href=\"#程序控制的流程图\" class=\"headerlink\" title=\"程序控制的流程图\"></a>程序控制的流程图</h3><p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210115235239983.png\" alt=\"image-20210115235239983\"></p>\n<h3 id=\"顺序控制举例和注意事项\"><a href=\"#顺序控制举例和注意事项\" class=\"headerlink\" title=\"顺序控制举例和注意事项\"></a>顺序控制举例和注意事项</h3><p>​    Golang中定义变量时采用合法的前向引用。如：</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> num1 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token comment\">//声明了num1</span>\n  <span class=\"token keyword\">var</span> num2 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> num1 <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token comment\">//使用num1</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>num2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p>错误形式：</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> num2 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> num1 <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token comment\">//使用num1</span>\n  <span class=\"token keyword\">var</span> num1 <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token comment\">//声明num1 (❌)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>num2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h2 id=\"分支控制\"><a href=\"#分支控制\" class=\"headerlink\" title=\"分支控制\"></a>分支控制</h2><h3 id=\"分支控制的基本介绍\"><a href=\"#分支控制的基本介绍\" class=\"headerlink\" title=\"分支控制的基本介绍\"></a>分支控制的基本介绍</h3><p>分支控制就是让程序有选择执行。有下面三种形式</p>\n<ol>\n<li>单分支</li>\n<li>双分支</li>\n<li>多分枝</li>\n</ol>\n<h3 id=\"单分支控制\"><a href=\"#单分支控制\" class=\"headerlink\" title=\"单分支控制\"></a>单分支控制</h3><ul>\n<li>基本语法</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> 条件表达式<span class=\"token punctuation\">&#123;</span>\n  执行代码块\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p><strong>说明：当条件表达式为true时，就会执行{}的代码。注意{}是必须有的，就算你只写一行代码。</strong></p>\n<ul>\n<li>应用案例</li>\n</ul>\n<p>编写一个程序，可以输入人的年龄,如果该同志的年龄大于 18 岁,则输出 “你年龄大 于 18,要对自己的行为负责!”。      需求—【分析】—&gt;代码</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> age <span class=\"token builtin\">int</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入年龄：\"</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">if</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你年龄大于18，要对自己的行为负责！\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\">➜  main go run .&#x2F;main.go\n请输入年龄：\n10\n➜  main go run .&#x2F;main.go\n请输入年龄：\n29\n你年龄大于18，要对自己的行为负责！\n➜  main </code></pre>\n<ul>\n<li><p>单分支的流程图</p>\n<p>流程图可以用<strong>图形方式</strong>来更加清晰的描述程序执行的流程。</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210116001333710.png\" alt=\"image-20210116001333710\"></p>\n</li>\n<li><p>单分支的细节说明</p>\n</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> age <span class=\"token operator\">:=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你年龄大于18，要对自己的行为负责!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h3 id=\"双分支控制\"><a href=\"#双分支控制\" class=\"headerlink\" title=\"双分支控制\"></a>双分支控制</h3><ul>\n<li>基本语法</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> 条件表达式<span class=\"token punctuation\">&#123;</span>\n  执行代码块<span class=\"token number\">1</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n  执行代码块<span class=\"token number\">2</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<p><strong>说明：当条件表达式成立，即执行代码块1，否则执行代码块2.{}也是必须有的。</strong></p>\n<ul>\n<li>应用案例</li>\n</ul>\n<p>编写一个程序,可以输入人的年龄,如果该同志的年龄大于 18 岁,则输出 “你年龄大于 18,要对 自己的行为负责!”。否则 ,输出”你的年龄不大这次放过你了.”</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> age <span class=\"token builtin\">int</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入年龄：\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">if</span> age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token punctuation\">&#123;</span>\n\t  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你年龄大于18，要对自己的行为负责！\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你的年龄不大这次放过你了.\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\">➜  main go run .&#x2F;main.go\n请输入年龄：\n19\n你年龄大于18，要对自己的行为负责！\n➜  main go run .&#x2F;main.go\n请输入年龄：\n12\n你的年龄不大这次放过你了.</code></pre>\n<ul>\n<li>双分支流程图的分析</li>\n</ul>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210116001729636.png\" alt=\"image-20210116001729636\"></p>\n<ul>\n<li>对双分支的总结</li>\n</ul>\n<ol>\n<li>从上图看，条件表达式就是age&gt;18</li>\n<li>执行代码块1 就是 fmt.Prinltn(“你的年龄大于18”)…</li>\n<li>执行代码块2 就是 fmt.Println(“你的年龄不大”)…</li>\n<li>双分支<strong>只会执行其中的一个分支。</strong></li>\n</ol>\n<h3 id=\"单分支和双分支的案例\"><a href=\"#单分支和双分支的案例\" class=\"headerlink\" title=\"单分支和双分支的案例\"></a>单分支和双分支的案例</h3><ol>\n<li>对下列代码，若有输出，指出输出结果.</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> x <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n<span class=\"token keyword\">var</span> y <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hihihi\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x is =\"</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//输出结果是 hihihi</span></code></pre>\n<ol start=\"2\">\n<li>对下列代码，若有输出，指出输出结果.</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> x <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n<span class=\"token keyword\">if</span> x <span class=\"token operator\">></span> <span class=\"token number\">2</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//没有&#123;&#125; 所以编译错误哦</span></code></pre>\n<ol start=\"3\">\n<li>对下列代码，若有输出，指出输出结果.</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> x <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n<span class=\"token keyword\">if</span> x <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//编译错误，因为else不能换行</span></code></pre>\n<ol start=\"4\">\n<li>对下列代码，若有输出，指出输出结果.</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> x <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//输出ok 但是建议把if(x>2)写成if x > 2</span></code></pre>\n<ol start=\"5\">\n<li>编写程序，声明 2 个 int32 型变量并赋值。判断两数之和，如果大于等于 50，打印“hello world!</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> n1 <span class=\"token builtin\">int32</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n  <span class=\"token keyword\">var</span> n2 <span class=\"token builtin\">int32</span> <span class=\"token operator\">=</span> <span class=\"token number\">50</span>\n  <span class=\"token keyword\">if</span> n1 <span class=\"token operator\">+</span> n2 <span class=\"token operator\">>=</span><span class=\"token number\">50</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello,world\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<ol start=\"6\">\n<li>编写程序，声明 2 个 float64 型变量并赋值。判断第一个数大于 10.0，且第 2 个数小于 20.0，打 印两数之和。</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> n3 <span class=\"token builtin\">float64</span> <span class=\"token operator\">=</span> <span class=\"token number\">11.0</span>\n<span class=\"token keyword\">var</span> n4 <span class=\"token builtin\">float64</span> <span class=\"token operator\">=</span> <span class=\"token number\">17.0</span>\n<span class=\"token keyword\">if</span> n3 <span class=\"token operator\">></span> <span class=\"token number\">10.0</span> <span class=\"token operator\">&amp;&amp;</span> n4 <span class=\"token operator\">&lt;</span> <span class=\"token number\">20.0</span> <span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"和=\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>n3<span class=\"token operator\">+</span>n4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<ol start=\"7\">\n<li>定义两个变量 int32，判断二者的和，是否能被 3 又能被 5 整除，打印提示信息</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> num1 <span class=\"token builtin\">int32</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">var</span> num2 <span class=\"token builtin\">int32</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"能被3又能被5整除\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<ol start=\"8\">\n<li>判断一个年份是否是闰年，闰年的条件是符合下面二者之一:(1)年份能被4整除，但不能被100 整除;(2)能被 400 整除</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> year <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">2019</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>year <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> year <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">||</span> year <span class=\"token operator\">%</span> <span class=\"token number\">400</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">,</span> <span class=\"token string\">\"是闰年!``\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h3 id=\"多分支控制\"><a href=\"#多分支控制\" class=\"headerlink\" title=\"多分支控制\"></a>多分支控制</h3><ul>\n<li>基本语法</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> 条件表达式<span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n  执行代码块<span class=\"token number\">1</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">&#123;</span>\n  执行代码块<span class=\"token number\">2</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n  执行代码块n\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<ul>\n<li>说明：</li>\n</ul>\n<ol>\n<li>多分支的判断流程如下：<ol>\n<li>先判断条件表达式1是否成立，如果为真，就执行代码块1</li>\n<li>如果条件表达式1如果为假，就去判断条件表达式2是否成立，如果条件表达式2为真，就执行代码块2</li>\n<li>以此类推</li>\n<li>如果所有的条件表达式不成立，则执行else的语句块。</li>\n</ol>\n</li>\n<li>else 不是必须的</li>\n<li>多分支只能有一个执行入口。</li>\n</ol>\n<ul>\n<li>看一个多分支的流程图</li>\n</ul>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210116005439355.png\" alt=\"image-20210116005439355\"></p>\n<ul>\n<li>多分支的快速入门案例</li>\n</ul>\n<p>岳小鹏参加 Golang 考试，他和父亲岳不群达成承诺: 如果:</p>\n<p>​    成绩为 100 分时，奖励一辆 BMW; </p>\n<p>​    成绩为(80，99]时，奖励一台 iphone7plus; </p>\n<p>​    当成绩为[60,80]时，奖励一个 iPad; </p>\n<p>​    其它时，什么奖励也没有。 请从键盘输入岳小鹏的期末成绩，并加以判断</p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> score <span class=\"token builtin\">int</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入成绩:\"</span><span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>score<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> score <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"奖励BMW\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> score <span class=\"token operator\">></span> <span class=\"token number\">80</span> <span class=\"token operator\">&amp;&amp;</span> score <span class=\"token operator\">&lt;=</span> <span class=\"token number\">99</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"奖励一台iphone12 pro max\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> score <span class=\"token operator\">>=</span> <span class=\"token number\">60</span> <span class=\"token operator\">&amp;&amp;</span> score <span class=\"token operator\">&lt;=</span><span class=\"token number\">80</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"奖励一个iPad\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"啥也没\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<ul>\n<li><p>多分支的课堂练习</p>\n<p>案例演示2</p>\n</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> b <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token keyword\">if</span> b <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> b<span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>b<span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//c</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//输出结果是b</span>\n<span class=\"token comment\">//如果写成b=flase;能编译通过吗？如果能，结果是？（不能通过，if的条件表达式不是赋值语句)</span></code></pre>\n<p>​    案例演示3</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210116012330224.png\" alt=\"image-20210116012330224\"></p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"math\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> a <span class=\"token builtin\">float64</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span>\n\t<span class=\"token keyword\">var</span> b <span class=\"token builtin\">float64</span> <span class=\"token operator\">=</span> <span class=\"token number\">4.0</span>\n\t<span class=\"token keyword\">var</span> c <span class=\"token builtin\">float64</span> <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span>\n\n\tm <span class=\"token operator\">:=</span> b <span class=\"token operator\">*</span> b <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">*</span> c\n\t<span class=\"token comment\">//多分支判断</span>\n\t<span class=\"token keyword\">if</span> m <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n\t  x1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">+</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a\n\t  x2 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">-</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a\n\t  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x1=%v x2=%v \\n\"</span><span class=\"token punctuation\">,</span> x1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> m <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">&#123;</span>\n\t  x1 <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">+</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a\n\t  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x1=%v\\n\"</span><span class=\"token punctuation\">,</span> x1<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无解...\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\">➜  main go run .&#x2F;main.go\nx1&#x3D;-4%                                                                                           \n➜  main go run .&#x2F;main.go\nx1&#x3D;-0.5857864376269049 x2&#x3D;-3.414213562373095%                                                    \n➜  main go run .&#x2F;main.go\nx1&#x3D;-0.5857864376269049 x2&#x3D;-3.414213562373095 \n➜  main </code></pre>\n<p>​    案例演示4</p>\n<p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210116013022820.png\" alt=\"image-20210116013022820\"></p>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> height <span class=\"token builtin\">int32</span>\n<span class=\"token keyword\">var</span> money <span class=\"token builtin\">float32</span>\n<span class=\"token keyword\">var</span> handsome <span class=\"token builtin\">bool</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入身高（厘米）\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>height<span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入财富（千万）\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>money<span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入是否帅气（true or false）\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>handsome<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> height <span class=\"token operator\">></span> <span class=\"token number\">180</span> <span class=\"token operator\">&amp;&amp;</span> money <span class=\"token operator\">></span><span class=\"token number\">1.0</span> <span class=\"token operator\">&amp;&amp;</span> handsome <span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"一定要嫁给他！！！\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> height <span class=\"token operator\">></span> <span class=\"token number\">180</span> <span class=\"token operator\">||</span> money <span class=\"token operator\">></span><span class=\"token number\">1.0</span> <span class=\"token operator\">||</span> handsome<span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"勉勉强强嫁给他吧\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"不嫁......\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\">➜  main go run .&#x2F;main.go\n请输入年龄：\n10\n➜  main go run .&#x2F;main.go\n请输入年龄：\n29\n➜  main go run .&#x2F;main.go\n请输入身高（厘米）\n190\n请输入财富（千万）\n12\n请输入是否帅气（true or false）\ntrue\n一定要嫁给他！！！\n➜  main go run .&#x2F;main.go\n请输入身高（厘米）\n120\n请输入财富（千万）\n1\n请输入是否帅气（true or false）\nfalse\n不嫁......\n➜  main go run .&#x2F;main.go\n请输入身高（厘米）\n120\n请输入财富（千万）\n1.2\n请输入是否帅气（true or false）\nfalse\n勉勉强强嫁给他吧\n➜  main </code></pre>\n<h3 id=\"嵌套分支\"><a href=\"#嵌套分支\" class=\"headerlink\" title=\"嵌套分支\"></a>嵌套分支</h3><ul>\n<li>基本介绍</li>\n</ul>","categories":[],"tags":[{"name":"Go","path":"api/tags/Go.json"}]}
{"title":"蓝桥杯真题-回文日期","slug":"蓝桥杯真题-回文日期","date":"2023-04-05T08:01:19.000Z","updated":"2023-04-05T09:59:30.036Z","comments":true,"path":"api/articles/蓝桥杯真题-回文日期.json","excerpt":"题目2020 年春节期间，有一个特殊的日期引起了大家的注意：2020 年 2 月 2 日。因为如果将这个日期按 “yyyymmdd” 的格式写成一个 8 位数是 20200202，恰好是一个回文数。我们称这样的日期是回文日期。有人表示 20200202 是 “千年一遇” 的特殊日子。对此小明很不认同，因为不到 2 年之后就是下一个回文日期：20211202 即 2021 年 12 月 2 日。也有人表示 20200202 并不仅仅是一个回文日期，还是一个 ABABBABA 型的回文日期。对此小明也不认同，因为大约 100 年后就能遇到下一个 ABABBABA 型的回文日期：21211212 即 2121 年 12 月 12 日。算不上 “千年一遇”，顶多算 “千年两遇”。给定一个 8 位数的日期，请你计算该日期之后下一个回文日期和下一个 ABABBABA 型的回文日期各是哪一天。","covers":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>2020 年春节期间，有一个特殊的日期引起了大家的注意：2020 年 2 月 2 日。因为如果将这个日期按 “yyyymmdd” 的格式写成一个 8 位数是 20200202，恰好是一个回文数。我们称这样的日期是回文日期。</p>\n<p>有人表示 20200202 是 “千年一遇” 的特殊日子。对此小明很不认同，因为不到 2 年之后就是下一个回文日期：20211202 即 2021 年 12 月 2 日。</p>\n<p>也有人表示 20200202 并不仅仅是一个回文日期，还是一个 ABABBABA 型的回文日期。对此小明也不认同，因为大约 100 年后就能遇到下一个 ABABBABA 型的回文日期：21211212 即 2121 年 12 月 12 日。算不上 “千年一遇”，顶多算 “千年两遇”。</p>\n<p>给定一个 8 位数的日期，请你计算该日期之后下一个回文日期和下一个 ABABBABA 型的回文日期各是哪一天。</p>\n<span id=\"more\"></span>\n\n<h3 id=\"输入描述\"><a href=\"#输入描述\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入包含一个八位整数 <em>N</em>，表示日期。</p>\n<p>对于所有评测用例，10000101≤N≤89991231，保证 N 是一个合法日期的 8 位数表示。</p>\n<h3 id=\"输出描述\"><a href=\"#输出描述\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出两行，每行 1 个八位数。第一行表示下一个回文日期，第二行表示下一个 ABABBABA 型的回文日期。</p>\n<p><strong>输入输出样例</strong></p>\n<p><strong>示例</strong></p>\n<blockquote>\n<p>输入</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">20200202</code></pre>\n\n<blockquote>\n<p>输出</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">20211202\n21211212</code></pre>\n\n<p><strong>运行限制</strong></p>\n<ul>\n<li>最大运行时间：1s</li>\n<li>最大运行内存: 256M</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>（1）定义每个月的天数</li>\n<li>（2）计算年份</li>\n<li>（3）计算月份</li>\n<li>（4）计算第几天</li>\n<li>（5）判断是不是闰年</li>\n<li>（6）闰年二月天数为29</li>\n<li>（7）非闰年二月天数为28</li>\n<li>（8）判断是不是符合日期标准</li>\n</ul>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">#include &lt;iostream&gt;\n\nusing namespace std;\nbool isleap(int year)\n&#123;\n    return ((year%4&#x3D;&#x3D;0&amp;&amp;year%100!&#x3D;0)||year%400&#x3D;&#x3D;0); &#x2F;&#x2F; 判断是否是闰年\n&#125;\nbool legal(int n) &#x2F;&#x2F; 判断8位数是否是合规的日期\n&#123;\n    int year,month,day;\n    year&#x3D;n&#x2F;10000; &#x2F;&#x2F; 获取年月日的值\n    month&#x3D;(n%10000)&#x2F;100;\n    day&#x3D;n%100;\n    if(month&gt;12 || month&#x3D;&#x3D;0 || day&#x3D;&#x3D;0 || day&gt;31) &#x2F;&#x2F; 进行年月日的判断\n    return false;\n    if(month&#x3D;&#x3D;2) &#x2F;&#x2F; 2月针对闰年平年单独判断\n    &#123;\n        if(isleap(year)&#x3D;&#x3D;0&amp;&amp;day&gt;28)\n        return false;\n        if(isleap(year)&#x3D;&#x3D;1&amp;&amp;day&gt;29)\n        return false;\n    &#125;\n    if(month&#x3D;&#x3D;1||month&#x3D;&#x3D;3||month&#x3D;&#x3D;5||month&#x3D;&#x3D;7||month&#x3D;&#x3D;8||month&#x3D;&#x3D;10||month||12)\n    &#123;\n        if(day&gt;31)\n        return false;\n    &#125;\n    if(month&#x3D;&#x3D;4||month&#x3D;&#x3D;6||month&#x3D;&#x3D;9||month&#x3D;&#x3D;11)\n    &#123;\n        if(day&gt;30)\n        return false;\n    &#125;\n    return true;\n&#125;\nint main()\n&#123;\n    int n;\n    cin&gt;&gt;n; &#x2F;&#x2F; 获取输入\n    int flag&#x3D;0; &#x2F;&#x2F; 设置判断\n    for(int i&#x3D;n+1;i&lt;&#x3D;100000000;i++)\n    &#123;\n        int a1,a2,a3,a4,a5,a6,a7,a8; &#x2F;&#x2F; 用最笨的办法获取每一位的值\n        a8&#x3D;i&#x2F;10000000;\n        a7&#x3D;(i&#x2F;1000000)%10;\n        a6&#x3D;(i&#x2F;100000)%10;\n        a5&#x3D;(i&#x2F;10000)%10;\n        a4&#x3D;(i&#x2F;1000)%10;\n        a3&#x3D;(i&#x2F;100)%10;\n        a2&#x3D;(i&#x2F;10)%10;\n        a1&#x3D;i%10;\n        if(legal(i)&amp;&amp;flag&#x3D;&#x3D;0&amp;&amp;a1&#x3D;&#x3D;a8&amp;&amp;a2&#x3D;&#x3D;a7&amp;&amp;a3&#x3D;&#x3D;a6&amp;&amp;a4&#x3D;&#x3D;a5) &#x2F;&#x2F; 判断是否是普通回文日期\n        &#123;\n            cout&lt;&lt;i&lt;&lt;endl;\n            flag&#x3D;1;\n        &#125;\n        if(legal(i)&amp;&amp;a1&#x3D;&#x3D;a3&amp;&amp;a3&#x3D;&#x3D;a6&amp;&amp;a6&#x3D;&#x3D;a8&amp;&amp;a2&#x3D;&#x3D;a4&amp;&amp;a4&#x3D;&#x3D;a5&amp;&amp;a5&#x3D;&#x3D;a7) &#x2F;&#x2F; 判断是否是ABABBABA型回文日期\n        &#123;\n            cout&lt;&lt;i;\n            break;\n        &#125;\n    &#125;\n    return 0;\n&#125;</code></pre>\n\n","more":"<h3 id=\"输入描述\"><a href=\"#输入描述\" class=\"headerlink\" title=\"输入描述\"></a>输入描述</h3><p>输入包含一个八位整数 <em>N</em>，表示日期。</p>\n<p>对于所有评测用例，10000101≤N≤89991231，保证 N 是一个合法日期的 8 位数表示。</p>\n<h3 id=\"输出描述\"><a href=\"#输出描述\" class=\"headerlink\" title=\"输出描述\"></a>输出描述</h3><p>输出两行，每行 1 个八位数。第一行表示下一个回文日期，第二行表示下一个 ABABBABA 型的回文日期。</p>\n<p><strong>输入输出样例</strong></p>\n<p><strong>示例</strong></p>\n<blockquote>\n<p>输入</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">20200202</code></pre>\n\n<blockquote>\n<p>输出</p>\n</blockquote>\n<pre class=\"language-txt\" data-language=\"txt\"><code class=\"language-txt\">20211202\n21211212</code></pre>\n\n<p><strong>运行限制</strong></p>\n<ul>\n<li>最大运行时间：1s</li>\n<li>最大运行内存: 256M</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>（1）定义每个月的天数</li>\n<li>（2）计算年份</li>\n<li>（3）计算月份</li>\n<li>（4）计算第几天</li>\n<li>（5）判断是不是闰年</li>\n<li>（6）闰年二月天数为29</li>\n<li>（7）非闰年二月天数为28</li>\n<li>（8）判断是不是符合日期标准</li>\n</ul>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">#include &lt;iostream&gt;\n\nusing namespace std;\nbool isleap(int year)\n&#123;\n    return ((year%4&#x3D;&#x3D;0&amp;&amp;year%100!&#x3D;0)||year%400&#x3D;&#x3D;0); &#x2F;&#x2F; 判断是否是闰年\n&#125;\nbool legal(int n) &#x2F;&#x2F; 判断8位数是否是合规的日期\n&#123;\n    int year,month,day;\n    year&#x3D;n&#x2F;10000; &#x2F;&#x2F; 获取年月日的值\n    month&#x3D;(n%10000)&#x2F;100;\n    day&#x3D;n%100;\n    if(month&gt;12 || month&#x3D;&#x3D;0 || day&#x3D;&#x3D;0 || day&gt;31) &#x2F;&#x2F; 进行年月日的判断\n    return false;\n    if(month&#x3D;&#x3D;2) &#x2F;&#x2F; 2月针对闰年平年单独判断\n    &#123;\n        if(isleap(year)&#x3D;&#x3D;0&amp;&amp;day&gt;28)\n        return false;\n        if(isleap(year)&#x3D;&#x3D;1&amp;&amp;day&gt;29)\n        return false;\n    &#125;\n    if(month&#x3D;&#x3D;1||month&#x3D;&#x3D;3||month&#x3D;&#x3D;5||month&#x3D;&#x3D;7||month&#x3D;&#x3D;8||month&#x3D;&#x3D;10||month||12)\n    &#123;\n        if(day&gt;31)\n        return false;\n    &#125;\n    if(month&#x3D;&#x3D;4||month&#x3D;&#x3D;6||month&#x3D;&#x3D;9||month&#x3D;&#x3D;11)\n    &#123;\n        if(day&gt;30)\n        return false;\n    &#125;\n    return true;\n&#125;\nint main()\n&#123;\n    int n;\n    cin&gt;&gt;n; &#x2F;&#x2F; 获取输入\n    int flag&#x3D;0; &#x2F;&#x2F; 设置判断\n    for(int i&#x3D;n+1;i&lt;&#x3D;100000000;i++)\n    &#123;\n        int a1,a2,a3,a4,a5,a6,a7,a8; &#x2F;&#x2F; 用最笨的办法获取每一位的值\n        a8&#x3D;i&#x2F;10000000;\n        a7&#x3D;(i&#x2F;1000000)%10;\n        a6&#x3D;(i&#x2F;100000)%10;\n        a5&#x3D;(i&#x2F;10000)%10;\n        a4&#x3D;(i&#x2F;1000)%10;\n        a3&#x3D;(i&#x2F;100)%10;\n        a2&#x3D;(i&#x2F;10)%10;\n        a1&#x3D;i%10;\n        if(legal(i)&amp;&amp;flag&#x3D;&#x3D;0&amp;&amp;a1&#x3D;&#x3D;a8&amp;&amp;a2&#x3D;&#x3D;a7&amp;&amp;a3&#x3D;&#x3D;a6&amp;&amp;a4&#x3D;&#x3D;a5) &#x2F;&#x2F; 判断是否是普通回文日期\n        &#123;\n            cout&lt;&lt;i&lt;&lt;endl;\n            flag&#x3D;1;\n        &#125;\n        if(legal(i)&amp;&amp;a1&#x3D;&#x3D;a3&amp;&amp;a3&#x3D;&#x3D;a6&amp;&amp;a6&#x3D;&#x3D;a8&amp;&amp;a2&#x3D;&#x3D;a4&amp;&amp;a4&#x3D;&#x3D;a5&amp;&amp;a5&#x3D;&#x3D;a7) &#x2F;&#x2F; 判断是否是ABABBABA型回文日期\n        &#123;\n            cout&lt;&lt;i;\n            break;\n        &#125;\n    &#125;\n    return 0;\n&#125;</code></pre>","categories":[],"tags":[{"name":"算法","path":"api/tags/算法.json"},{"name":"蓝桥杯","path":"api/tags/蓝桥杯.json"}]}
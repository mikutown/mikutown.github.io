{"title":"Go语言の排序和查找","slug":"Go语言の排序和查找","date":"2021-01-28T09:32:11.000Z","updated":"2021-01-28T11:36:10.821Z","comments":true,"path":"api/articles/Go语言の排序和查找.json","excerpt":null,"covers":["https://gitee.com/mikutown/pic/raw/master/img/image-20210128180653235.png","https://gitee.com/mikutown/pic/raw/master/img/image-20210128193603403.png"],"content":"<h1 id=\"Go语言の排序和查找\"><a href=\"#Go语言の排序和查找\" class=\"headerlink\" title=\"Go语言の排序和查找\"></a>Go语言の排序和查找</h1><h2 id=\"排序的基本介绍\"><a href=\"#排序的基本介绍\" class=\"headerlink\" title=\"排序的基本介绍\"></a>排序的基本介绍</h2><p>排序是将一组数据，依指定的顺序进行排列的过程。</p>\n<p>排序的分类：</p>\n<ol>\n<li><p>内部排序：</p>\n<p>指将需要处理的所有数据都加载到内部存储器中进行排序。包括（交换式排序法，选择式排序法和插入式排序法）；</p>\n</li>\n<li><p>外部排序法：</p>\n<p>数据量过大，无法全部加载到内存中，需要借助外部存储进行排序。包括（合并排序法和直接合并排序法）。</p>\n</li>\n</ol>\n<p>冒泡排序（Bubble Sorting）的基本思想是：通过对待排序序列从后向前（从下标较大的元素开始），依次比较相邻元素的排序码，若发现逆序则交换，使排序码较小的元素逐渐从后部移向前部（从下标较大的单元移向下标较小的单元），就像水底下的气泡一样逐渐向上冒。</p>\n<p>因为排序的过程中，各元素不断接近自己的位置，如果一趟比较下来没有进行过交换，就说明序列有序，因此要在排序过程中设置一个标志flag判断元素是否进行过交换。从而减少不必要的比较（优化）。</p>\n<h2 id=\"冒泡排序的思路分析\"><a href=\"#冒泡排序的思路分析\" class=\"headerlink\" title=\"冒泡排序的思路分析\"></a>冒泡排序的思路分析</h2><p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210128180653235.png\" alt=\"image-20210128180653235\" loading=\"lazy\"></p>\n<h2 id=\"冒泡排序实现\"><a href=\"#冒泡排序实现\" class=\"headerlink\" title=\"冒泡排序实现\"></a>冒泡排序实现</h2><pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">BubbleSort</span><span class=\"token punctuation\">(</span>arr <span class=\"token operator\">*</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"排序前arr=\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ttemp <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token comment\">//用于交换的临时变量</span>\n\t<span class=\"token comment\">//冒泡排序--一步一步推导出来的</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token comment\">//交换</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\ttemp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"排序后arr=\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//定义数组</span>\n\tarr <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span><span class=\"token number\">34</span><span class=\"token punctuation\">&#125;</span>\n\t\n\t<span class=\"token function\">BubbleSort</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>arr<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main arr=\"</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">)</span> <span class=\"token comment\">//有序的哦</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h2 id=\"课后练习\"><a href=\"#课后练习\" class=\"headerlink\" title=\"课后练习\"></a>课后练习</h2><p>需要牢记冒泡排序的代码！能默写出来才行</p>\n<h2 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h2><ul>\n<li><p>介绍</p>\n<p>在Golang中，我们常用的查找有两种：</p>\n<ol>\n<li>顺序查找</li>\n<li>二分查找（数组有序）</li>\n</ol>\n</li>\n<li><p>案例演示：</p>\n<ol>\n<li>有一个数列：白眉鹰王、金毛狮王、紫衫龙王、青翼蝠王</li>\n</ol>\n<p>猜数游戏：从键盘中任意输入一个名称，判断数列中是否包含此名称【使用顺序查找】</p>\n<p>代码：</p>\n</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tnames <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"白眉鹰王\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"金毛狮王\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"紫衫龙王\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"青翼蝠王\"</span><span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">var</span> heroName <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入要查找的人名...\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>heroName<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">//按顺序查找 第一种方式</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> heroName <span class=\"token operator\">==</span> names<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"找到%v，下标为%v \\n\"</span><span class=\"token punctuation\">,</span> heroName<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">break</span>\n\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有找到%v \\n\"</span><span class=\"token punctuation\">,</span> heroName<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">//顺序查找 第二种方式 （推荐）</span>\n\tindex <span class=\"token operator\">:=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> heroName <span class=\"token operator\">==</span> names<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tindex <span class=\"token operator\">=</span> i <span class=\"token comment\">//赋值</span>\n\t\t\t<span class=\"token keyword\">break</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span> index <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"找到%v, 下标为%v\\n\"</span><span class=\"token punctuation\">,</span> heroName<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有找到\"</span><span class=\"token punctuation\">,</span>heroName<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\"> ~&#x2F;go&#x2F;src&#x2F;go_code&#x2F;chapter08&#x2F;demo02&#x2F;main  go run .&#x2F;main.go\n请输入要查找的人名...\n金毛狮王\n找到金毛狮王，下标为1 \n找到金毛狮王, 下标为1</code></pre>\n<ol start=\"2\">\n<li>请对一个有序数组进行二分查找 {1,8,10,89,1000,1234},输入一个数看看该数组是否存在此数，并且求出下标，如果没有就提示“没有这个数”。【使用到递归】</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token comment\">//\"time\"</span>\n\t<span class=\"token comment\">//\"math/rand\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">BinaryFind</span><span class=\"token punctuation\">(</span>arr <span class=\"token operator\">*</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>leftIndex <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>rightIndex <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>findVal <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> leftIndex <span class=\"token operator\">></span> rightIndex <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"找不到哦找不到哦\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> \n\t<span class=\"token punctuation\">&#125;</span>\n\tmiddle <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span>leftIndex <span class=\"token operator\">+</span> rightIndex<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> findVal <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">BinaryFind</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> leftIndex<span class=\"token punctuation\">,</span> middle <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> findVal<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> findVal <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">BinaryFind</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> middle <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rightIndex<span class=\"token punctuation\">,</span> findVal<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这个数字的下标位置在\"</span><span class=\"token punctuation\">,</span>middle<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> arrs <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">89</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span><span class=\"token number\">1234</span><span class=\"token punctuation\">&#125;</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个数：\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">var</span> num <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>num<span class=\"token punctuation\">)</span>\n\t<span class=\"token function\">BinaryFind</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>arrs<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>arrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\"> ~&#x2F;go&#x2F;src&#x2F;go_code&#x2F;chapter08&#x2F;demo03&#x2F;main  go run .&#x2F;main.go\n请输入一个数：\n1001\n找不到哦找不到哦\n ~&#x2F;go&#x2F;src&#x2F;go_code&#x2F;chapter08&#x2F;demo03&#x2F;main  go run .&#x2F;main.go\n请输入一个数：\n1000\n这个数字的下标位置在 4</code></pre>\n<h2 id=\"二维数组的介绍\"><a href=\"#二维数组的介绍\" class=\"headerlink\" title=\"二维数组的介绍\"></a>二维数组的介绍</h2><p>如你所见 就是二维数组罢了</p>\n<h2 id=\"二维数组应用场景\"><a href=\"#二维数组应用场景\" class=\"headerlink\" title=\"二维数组应用场景\"></a>二维数组应用场景</h2><p>比如开发了一个五子棋游戏，棋盘就需要二维数组来表示。如图<img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210128193603403.png\" alt=\"image-20210128193603403\" loading=\"lazy\"></p>\n","more":"<h1 id=\"Go语言の排序和查找\"><a href=\"#Go语言の排序和查找\" class=\"headerlink\" title=\"Go语言の排序和查找\"></a>Go语言の排序和查找</h1><h2 id=\"排序的基本介绍\"><a href=\"#排序的基本介绍\" class=\"headerlink\" title=\"排序的基本介绍\"></a>排序的基本介绍</h2><p>排序是将一组数据，依指定的顺序进行排列的过程。</p>\n<p>排序的分类：</p>\n<ol>\n<li><p>内部排序：</p>\n<p>指将需要处理的所有数据都加载到内部存储器中进行排序。包括（交换式排序法，选择式排序法和插入式排序法）；</p>\n</li>\n<li><p>外部排序法：</p>\n<p>数据量过大，无法全部加载到内存中，需要借助外部存储进行排序。包括（合并排序法和直接合并排序法）。</p>\n</li>\n</ol>\n<p>冒泡排序（Bubble Sorting）的基本思想是：通过对待排序序列从后向前（从下标较大的元素开始），依次比较相邻元素的排序码，若发现逆序则交换，使排序码较小的元素逐渐从后部移向前部（从下标较大的单元移向下标较小的单元），就像水底下的气泡一样逐渐向上冒。</p>\n<p>因为排序的过程中，各元素不断接近自己的位置，如果一趟比较下来没有进行过交换，就说明序列有序，因此要在排序过程中设置一个标志flag判断元素是否进行过交换。从而减少不必要的比较（优化）。</p>\n<h2 id=\"冒泡排序的思路分析\"><a href=\"#冒泡排序的思路分析\" class=\"headerlink\" title=\"冒泡排序的思路分析\"></a>冒泡排序的思路分析</h2><p><img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210128180653235.png\" alt=\"image-20210128180653235\"></p>\n<h2 id=\"冒泡排序实现\"><a href=\"#冒泡排序实现\" class=\"headerlink\" title=\"冒泡排序实现\"></a>冒泡排序实现</h2><pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">BubbleSort</span><span class=\"token punctuation\">(</span>arr <span class=\"token operator\">*</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"排序前arr=\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ttemp <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token comment\">//用于交换的临时变量</span>\n\t<span class=\"token comment\">//冒泡排序--一步一步推导出来的</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token comment\">//交换</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\ttemp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"排序后arr=\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//定义数组</span>\n\tarr <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span><span class=\"token number\">34</span><span class=\"token punctuation\">&#125;</span>\n\t\n\t<span class=\"token function\">BubbleSort</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>arr<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main arr=\"</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">)</span> <span class=\"token comment\">//有序的哦</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<h2 id=\"课后练习\"><a href=\"#课后练习\" class=\"headerlink\" title=\"课后练习\"></a>课后练习</h2><p>需要牢记冒泡排序的代码！能默写出来才行</p>\n<h2 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h2><ul>\n<li><p>介绍</p>\n<p>在Golang中，我们常用的查找有两种：</p>\n<ol>\n<li>顺序查找</li>\n<li>二分查找（数组有序）</li>\n</ol>\n</li>\n<li><p>案例演示：</p>\n<ol>\n<li>有一个数列：白眉鹰王、金毛狮王、紫衫龙王、青翼蝠王</li>\n</ol>\n<p>猜数游戏：从键盘中任意输入一个名称，判断数列中是否包含此名称【使用顺序查找】</p>\n<p>代码：</p>\n</li>\n</ul>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tnames <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"白眉鹰王\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"金毛狮王\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"紫衫龙王\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"青翼蝠王\"</span><span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">var</span> heroName <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入要查找的人名...\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>heroName<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">//按顺序查找 第一种方式</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> heroName <span class=\"token operator\">==</span> names<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"找到%v，下标为%v \\n\"</span><span class=\"token punctuation\">,</span> heroName<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">break</span>\n\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有找到%v \\n\"</span><span class=\"token punctuation\">,</span> heroName<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">//顺序查找 第二种方式 （推荐）</span>\n\tindex <span class=\"token operator\">:=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> heroName <span class=\"token operator\">==</span> names<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tindex <span class=\"token operator\">=</span> i <span class=\"token comment\">//赋值</span>\n\t\t\t<span class=\"token keyword\">break</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span> index <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"找到%v, 下标为%v\\n\"</span><span class=\"token punctuation\">,</span> heroName<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有找到\"</span><span class=\"token punctuation\">,</span>heroName<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\"> ~&#x2F;go&#x2F;src&#x2F;go_code&#x2F;chapter08&#x2F;demo02&#x2F;main  go run .&#x2F;main.go\n请输入要查找的人名...\n金毛狮王\n找到金毛狮王，下标为1 \n找到金毛狮王, 下标为1</code></pre>\n<ol start=\"2\">\n<li>请对一个有序数组进行二分查找 {1,8,10,89,1000,1234},输入一个数看看该数组是否存在此数，并且求出下标，如果没有就提示“没有这个数”。【使用到递归】</li>\n</ol>\n<pre class=\"language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token comment\">//\"time\"</span>\n\t<span class=\"token comment\">//\"math/rand\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">BinaryFind</span><span class=\"token punctuation\">(</span>arr <span class=\"token operator\">*</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>leftIndex <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>rightIndex <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>findVal <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> leftIndex <span class=\"token operator\">></span> rightIndex <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"找不到哦找不到哦\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> \n\t<span class=\"token punctuation\">&#125;</span>\n\tmiddle <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span>leftIndex <span class=\"token operator\">+</span> rightIndex<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> findVal <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">BinaryFind</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> leftIndex<span class=\"token punctuation\">,</span> middle <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> findVal<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> findVal <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">BinaryFind</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> middle <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> rightIndex<span class=\"token punctuation\">,</span> findVal<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这个数字的下标位置在\"</span><span class=\"token punctuation\">,</span>middle<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> arrs <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">89</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span><span class=\"token number\">1234</span><span class=\"token punctuation\">&#125;</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个数：\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">var</span> num <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>num<span class=\"token punctuation\">)</span>\n\t<span class=\"token function\">BinaryFind</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>arrs<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>arrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">&#125;</span></code></pre>\n<pre class=\"language-none\"><code class=\"language-none\"> ~&#x2F;go&#x2F;src&#x2F;go_code&#x2F;chapter08&#x2F;demo03&#x2F;main  go run .&#x2F;main.go\n请输入一个数：\n1001\n找不到哦找不到哦\n ~&#x2F;go&#x2F;src&#x2F;go_code&#x2F;chapter08&#x2F;demo03&#x2F;main  go run .&#x2F;main.go\n请输入一个数：\n1000\n这个数字的下标位置在 4</code></pre>\n<h2 id=\"二维数组的介绍\"><a href=\"#二维数组的介绍\" class=\"headerlink\" title=\"二维数组的介绍\"></a>二维数组的介绍</h2><p>如你所见 就是二维数组罢了</p>\n<h2 id=\"二维数组应用场景\"><a href=\"#二维数组应用场景\" class=\"headerlink\" title=\"二维数组应用场景\"></a>二维数组应用场景</h2><p>比如开发了一个五子棋游戏，棋盘就需要二维数组来表示。如图<img src=\"https://gitee.com/mikutown/pic/raw/master/img/image-20210128193603403.png\" alt=\"image-20210128193603403\"></p>\n","categories":[],"tags":[{"name":"Go","path":"api/tags/Go.json"}]}
{"title":"leetcode1154.一年中的第几天","slug":"leetcode1154-一年中的第几天","date":"2023-12-18T13:54:42.000Z","updated":"2023-12-18T13:55:35.310Z","comments":true,"path":"api/articles/leetcode1154-一年中的第几天.json","excerpt":"题目给你一个字符串 date ，按 YYYY-MM-DD 格式表示一个 现行公元纪年法 日期。返回该日期是当年的第几天。","covers":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>给你一个字符串 <code>date</code> ，按 <code>YYYY-MM-DD</code> 格式表示一个 <a href=\"https://baike.baidu.com/item/%E5%85%AC%E5%85%83/17855\">现行公元纪年法</a> 日期。返回该日期是当年的第几天。</p>\n<span id=\"more\"></span> \n\n<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：date &#x3D; &quot;2019-01-09&quot;\n输出：9\n解释：给定日期是2019年的第九天。</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：date &#x3D; &quot;2019-02-10&quot;\n输出：41</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>date.length == 10</code></li>\n<li><code>date[4] == date[7] == &#39;-&#39;</code>，其他的 <code>date[i]</code> 都是数字</li>\n<li><code>date</code> 表示的范围从 1900 年 1 月 1 日至 2019 年 12 月 31 日</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\nprivate:\n    bool judgeIsRun(int year) &#123;\n        return ((year % 4 &#x3D;&#x3D; 0 &amp;&amp; year % 100 !&#x3D; 0) || (year%400&#x3D;&#x3D;0 &amp;&amp; year % 3200 !&#x3D; 0) || year % 172800 &#x3D;&#x3D; 0);\n    &#125;\npublic:\n    int dayOfYear(string date) &#123;\n        int year &#x3D; stoi(date.substr(0, 4));\n        int month &#x3D; stoi(date.substr(5, 2));\n        int day &#x3D; stoi(date.substr(8,2));\n        &#x2F;&#x2F; 以平年为默认初始化12个月的天数\n        vector&lt;int&gt; dayOfMonth&#123;31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31&#125;;\n        &#x2F;&#x2F; 判断是否为闰年，这决定了2月的天数\n        if (judgeIsRun(year)) dayOfMonth[1] &#x3D; 29;\n        int result &#x3D; 0;\n        for (int i &#x3D; 0; i &lt;&#x3D; month - 1; i++) &#123;\n            if (i &lt; month - 1) result +&#x3D; dayOfMonth[i];\n            else result +&#x3D; day;\n        &#125;\n        return result;\n    &#125;\n&#125;;</code></pre>\n\n","more":"<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：date &#x3D; &quot;2019-01-09&quot;\n输出：9\n解释：给定日期是2019年的第九天。</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：date &#x3D; &quot;2019-02-10&quot;\n输出：41</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>date.length == 10</code></li>\n<li><code>date[4] == date[7] == &#39;-&#39;</code>，其他的 <code>date[i]</code> 都是数字</li>\n<li><code>date</code> 表示的范围从 1900 年 1 月 1 日至 2019 年 12 月 31 日</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\nprivate:\n    bool judgeIsRun(int year) &#123;\n        return ((year % 4 &#x3D;&#x3D; 0 &amp;&amp; year % 100 !&#x3D; 0) || (year%400&#x3D;&#x3D;0 &amp;&amp; year % 3200 !&#x3D; 0) || year % 172800 &#x3D;&#x3D; 0);\n    &#125;\npublic:\n    int dayOfYear(string date) &#123;\n        int year &#x3D; stoi(date.substr(0, 4));\n        int month &#x3D; stoi(date.substr(5, 2));\n        int day &#x3D; stoi(date.substr(8,2));\n        &#x2F;&#x2F; 以平年为默认初始化12个月的天数\n        vector&lt;int&gt; dayOfMonth&#123;31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31&#125;;\n        &#x2F;&#x2F; 判断是否为闰年，这决定了2月的天数\n        if (judgeIsRun(year)) dayOfMonth[1] &#x3D; 29;\n        int result &#x3D; 0;\n        for (int i &#x3D; 0; i &lt;&#x3D; month - 1; i++) &#123;\n            if (i &lt; month - 1) result +&#x3D; dayOfMonth[i];\n            else result +&#x3D; day;\n        &#125;\n        return result;\n    &#125;\n&#125;;</code></pre>","categories":[],"tags":[{"name":"leetcode","path":"api/tags/leetcode.json"},{"name":"算法","path":"api/tags/算法.json"}]}
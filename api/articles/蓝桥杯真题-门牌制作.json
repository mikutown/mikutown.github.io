{"title":"蓝桥杯真题-门牌制作","slug":"蓝桥杯真题-门牌制作","date":"2023-04-03T08:29:27.000Z","updated":"2023-04-03T09:44:15.250Z","comments":true,"path":"api/articles/蓝桥杯真题-门牌制作.json","excerpt":"题目小蓝要为一条街的住户制作门牌号。这条街一共有 2020 位住户，门牌号从 1 到 2020 编号。小蓝制作门牌的方法是先制作 0 到 9 这几个数字字符，最后根据需要将字符粘贴到门牌上，例如门牌 1017 需要依次粘贴字符 1、0、1、7，即需要 1 个字符 0，2 个字符 1，1 个字符 7。请问要制作所有的 11 到 20202020 号门牌，总共需要多少个字符 2？运行限制最大运行时间：1s最大运行内存: 128M","covers":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>小蓝要为一条街的住户制作门牌号。</p>\n<p>这条街一共有 2020 位住户，门牌号从 1 到 2020 编号。</p>\n<p>小蓝制作门牌的方法是先制作 0 到 9 这几个数字字符，最后根据需要将字符粘贴到门牌上，例如门牌 1017 需要依次粘贴字符 1、0、1、7，即需要 1 个字符 0，2 个字符 1，1 个字符 7。</p>\n<p>请问要制作所有的 11 到 20202020 号门牌，总共需要多少个字符 2？</p>\n<p><strong>运行限制</strong></p>\n<ul>\n<li>最大运行时间：1s</li>\n<li>最大运行内存: 128M</li>\n</ul>\n<span id=\"more\"></span>\n\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>暴力解法</li>\n</ul>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">#include &lt;iostream&gt;\nusing namespace std;\nint main()\n&#123;\n    int result &#x3D; 0; &#x2F;&#x2F; 初始化需要数字2的个数为0\n    for (int i &#x3D; 1; i &lt;&#x3D; 2020; i++) &#123; &#x2F;&#x2F; 循环，从1到2020\n        int temp &#x3D; i; &#x2F;&#x2F; 令temp&#x3D;i，方便后续判断字符2个数的操作\n        while (temp &gt; 0) &#123;\n            if (temp % 10 &#x3D;&#x3D; 2) &#123; &#x2F;&#x2F; 如果temp中最后一位是2\n                result++; &#x2F;&#x2F; result自增\n            &#125;\n            temp &#x2F;&#x3D; 10; &#x2F;&#x2F; temp&#x2F;&#x3D;10去掉最后一位数字\n        &#125;\n    &#125;\n    printf(&quot;%d&quot;, result);&#x2F;&#x2F; 输出结果\n    return 0;\n&#125;</code></pre>\n\n","more":"<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>暴力解法</li>\n</ul>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">#include &lt;iostream&gt;\nusing namespace std;\nint main()\n&#123;\n    int result &#x3D; 0; &#x2F;&#x2F; 初始化需要数字2的个数为0\n    for (int i &#x3D; 1; i &lt;&#x3D; 2020; i++) &#123; &#x2F;&#x2F; 循环，从1到2020\n        int temp &#x3D; i; &#x2F;&#x2F; 令temp&#x3D;i，方便后续判断字符2个数的操作\n        while (temp &gt; 0) &#123;\n            if (temp % 10 &#x3D;&#x3D; 2) &#123; &#x2F;&#x2F; 如果temp中最后一位是2\n                result++; &#x2F;&#x2F; result自增\n            &#125;\n            temp &#x2F;&#x3D; 10; &#x2F;&#x2F; temp&#x2F;&#x3D;10去掉最后一位数字\n        &#125;\n    &#125;\n    printf(&quot;%d&quot;, result);&#x2F;&#x2F; 输出结果\n    return 0;\n&#125;</code></pre>","categories":[],"tags":[{"name":"算法","path":"api/tags/算法.json"},{"name":"蓝桥杯","path":"api/tags/蓝桥杯.json"}]}
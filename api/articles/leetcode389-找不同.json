{"title":"leetcode389.找不同","slug":"leetcode389-找不同","date":"2023-09-12T12:29:07.000Z","updated":"2023-09-12T12:30:20.077Z","comments":true,"path":"api/articles/leetcode389-找不同.json","excerpt":"题目给定两个字符串 s 和 t ，它们只包含小写字母。字符串 t 由字符串 s 随机重排，然后在随机位置添加一个字母。请找出在 t 中被添加的字母。","covers":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>给定两个字符串 <code>s</code> 和 <code>t</code> ，它们只包含小写字母。</p>\n<p>字符串 <code>t</code> 由字符串 <code>s</code> 随机重排，然后在随机位置添加一个字母。</p>\n<p>请找出在 <code>t</code> 中被添加的字母。</p>\n <span id=\"more\"></span>\n\n<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;abcd&quot;, t &#x3D; &quot;abcde&quot;\n输出：&quot;e&quot;\n解释：&#39;e&#39; 是那个被添加的字母。</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;&quot;, t &#x3D; &quot;y&quot;\n输出：&quot;y&quot;</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>0 &lt;= s.length &lt;= 1000</code></li>\n<li><code>t.length == s.length + 1</code></li>\n<li><code>s</code> 和 <code>t</code> 只包含小写字母</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>用数组辅助计数的暴力解法</li>\n</ul>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    char findTheDifference(string s, string t) &#123;\n        vector&lt;int&gt; s_cnt(26,0);\n        vector&lt;int&gt; t_cnt(26,0); &#x2F;&#x2F; 使用数组存储字符串中不同字母的个数\n        char result; &#x2F;&#x2F; 初始化答案字符\n        &#x2F;&#x2F; 分别统计不同字符串的字符个数\n        for (int i &#x3D; 0; i &lt; s.size(); i++) &#123;\n            int index &#x3D; int(s[i] - &#39;a&#39;);\n            ++s_cnt[index];\n        &#125;\n        for (int j &#x3D; 0; j &lt; t.size(); j++) &#123;\n            int index &#x3D; int(t[j] - &#39;a&#39;);\n            ++t_cnt[index];\n        &#125;\n        &#x2F;&#x2F; 对比个数，不同的索引与&#39;a&#39;相加就是需要的答案。\n        for (int i &#x3D; 0; i &lt; 26; i++) &#123;\n            if (s_cnt[i] !&#x3D; t_cnt[i]) &#123;\n                result &#x3D; &#39;a&#39; + i;\n            &#125;\n        &#125;\n        return result; &#x2F;&#x2F; 返回答案\n    &#125;\n&#125;;</code></pre>\n\n<ul>\n<li>位运算</li>\n</ul>\n<p>如果将两个字符串拼接成一个字符串，则问题转换成求字符串中出现奇数次的字符。我们使用异或操作来找到两个字符串中不同的字符，因为相同的字符异或后会抵消，最终剩下的是不同的字符。</p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    char findTheDifference(string s, string t) &#123;\n        char result &#x3D; 0;\n        \n        &#x2F;&#x2F; 异或操作会消除相同的字符，最终结果将是不同字符的ASCII码值\n        for (char c : s) &#123;\n            result ^&#x3D; c;\n        &#125;\n        \n        for (char c : t) &#123;\n            result ^&#x3D; c;\n        &#125;\n        \n        return result;\n    &#125;\n&#125;;</code></pre>\n","more":"<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;abcd&quot;, t &#x3D; &quot;abcde&quot;\n输出：&quot;e&quot;\n解释：&#39;e&#39; 是那个被添加的字母。</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;&quot;, t &#x3D; &quot;y&quot;\n输出：&quot;y&quot;</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>0 &lt;= s.length &lt;= 1000</code></li>\n<li><code>t.length == s.length + 1</code></li>\n<li><code>s</code> 和 <code>t</code> 只包含小写字母</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>用数组辅助计数的暴力解法</li>\n</ul>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    char findTheDifference(string s, string t) &#123;\n        vector&lt;int&gt; s_cnt(26,0);\n        vector&lt;int&gt; t_cnt(26,0); &#x2F;&#x2F; 使用数组存储字符串中不同字母的个数\n        char result; &#x2F;&#x2F; 初始化答案字符\n        &#x2F;&#x2F; 分别统计不同字符串的字符个数\n        for (int i &#x3D; 0; i &lt; s.size(); i++) &#123;\n            int index &#x3D; int(s[i] - &#39;a&#39;);\n            ++s_cnt[index];\n        &#125;\n        for (int j &#x3D; 0; j &lt; t.size(); j++) &#123;\n            int index &#x3D; int(t[j] - &#39;a&#39;);\n            ++t_cnt[index];\n        &#125;\n        &#x2F;&#x2F; 对比个数，不同的索引与&#39;a&#39;相加就是需要的答案。\n        for (int i &#x3D; 0; i &lt; 26; i++) &#123;\n            if (s_cnt[i] !&#x3D; t_cnt[i]) &#123;\n                result &#x3D; &#39;a&#39; + i;\n            &#125;\n        &#125;\n        return result; &#x2F;&#x2F; 返回答案\n    &#125;\n&#125;;</code></pre>\n\n<ul>\n<li>位运算</li>\n</ul>\n<p>如果将两个字符串拼接成一个字符串，则问题转换成求字符串中出现奇数次的字符。我们使用异或操作来找到两个字符串中不同的字符，因为相同的字符异或后会抵消，最终剩下的是不同的字符。</p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    char findTheDifference(string s, string t) &#123;\n        char result &#x3D; 0;\n        \n        &#x2F;&#x2F; 异或操作会消除相同的字符，最终结果将是不同字符的ASCII码值\n        for (char c : s) &#123;\n            result ^&#x3D; c;\n        &#125;\n        \n        for (char c : t) &#123;\n            result ^&#x3D; c;\n        &#125;\n        \n        return result;\n    &#125;\n&#125;;</code></pre>","categories":[],"tags":[{"name":"leetcode","path":"api/tags/leetcode.json"},{"name":"算法","path":"api/tags/算法.json"}]}
{"title":"Mybatis返回结果の查询案例","slug":"Mybatis返回结果の查询案例","date":"2020-04-21T13:22:56.000Z","updated":"2022-05-20T09:45:45.454Z","comments":true,"path":"api/articles/Mybatis返回结果の查询案例.json","excerpt":"准备工作将之前的项目复制一份，改名，然后将对应的pom文件中的<br>  [Figure]  改成新的项目名称","covers":["http://cdn.leafii.top/img/20220520174529.png"],"content":"<h4 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h4><ol>\n<li>将之前的项目复制一份，改名，然后将对应的pom文件中的<br> <img src=\"http://cdn.leafii.top/img/20220520174529.png\" loading=\"lazy\"><br> 改成新的项目名称</li>\n</ol>\n  <span id=\"more\"></span>\n\n<ol start=\"2\">\n<li><p>将新的项目导入到idea中，直接打开pom文件 一直点下一步即可<br> <strong>注意：在编写测试方法时，测试类的名字为UserMapperTest，测试方法的方法名为testXxxx，这样取名符合编程规范</strong></p>\n</li>\n<li><p>数据库：</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span>  <span class=\"token keyword\">database</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span>         <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span>  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'用户名称'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>birthday<span class=\"token punctuation\">`</span></span>  <span class=\"token keyword\">date</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'生日'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>sex<span class=\"token punctuation\">`</span></span>       <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'性别'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>address<span class=\"token punctuation\">`</span></span>   <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'地址'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token operator\">=</span><span class=\"token number\">27</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王五'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'广州'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王六'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王八'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></li>\n</ol>\n<h1 id=\"Mybatis-案例\"><a href=\"#Mybatis-案例\" class=\"headerlink\" title=\"Mybatis 案例\"></a>Mybatis 案例</h1><h2 id=\"案例1：返回单一实体对象\"><a href=\"#案例1：返回单一实体对象\" class=\"headerlink\" title=\"案例1：返回单一实体对象\"></a>案例1：返回单一实体对象</h2><ul>\n<li><p>Mapper接口方法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     1.返回单一实体对象</span>\n     <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>Mapper.xml</p>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--1.返回单一实体对象--></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectById<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_int<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>baseResultMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select  id, username ,birthday,sex , address from user where id = #&#123;id&#125;\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n</li>\n<li><p>test方法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//除了主体部分的代码 之后的案例将会省略</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MybatisTest</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">UserMapper</span> userMapper <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">InputStream</span> inputstream <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Before</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">before</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            inputstream <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sqlSession <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>inputstream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            userMapper <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//     1.返回单一实体对象</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//关闭资源</span>\n    <span class=\"token annotation punctuation\">@After</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">after</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sqlSession<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>inputstream<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                inputstream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li><p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username ,birthday,sex , address from user where id &#x3D; ? \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 1(Integer)\nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 1, 张三, 2018-07-10, 1, 北京\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 1\nUser&#123;id&#x3D;1, username&#x3D;&#39;张三&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;北京&#39;&#125;</code></pre></li>\n</ul>\n<h2 id=\"案例2：返回集合实体对象\"><a href=\"#案例2：返回集合实体对象\" class=\"headerlink\" title=\"案例2：返回集合实体对象\"></a>案例2：返回集合实体对象</h2><ul>\n<li><p>Mapper接口方法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     2.返回集合实体对象</span>\n     <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectAllUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>Mapper.xml</p>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--2.返回集合实体对象--></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectAllUser<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>baseResultMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select  id, username ,birthday,sex , address from user\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n</li>\n<li><p>test方法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//除了主体部分的代码 之后的案例将会省略</span>\n    <span class=\"token comment\">//     2.返回集合实体对象</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectAllUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectAllUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> u <span class=\"token operator\">:</span>\n                users<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li><p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username ,birthday,sex , address from user \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: \nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 1, 张三, 2018-07-10, 1, 北京\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 2, 李四, 2018-07-10, 0, 上海\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 3, 王五, 2018-07-10, 1, 广州\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 4, 王六, 2018-07-10, 1, 深圳\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5, 王八, 2018-07-10, 1, 上海\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 5\nUser&#123;id&#x3D;1, username&#x3D;&#39;张三&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;北京&#39;&#125;\nUser&#123;id&#x3D;2, username&#x3D;&#39;李四&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;0&#39;, address&#x3D;&#39;上海&#39;&#125;\nUser&#123;id&#x3D;3, username&#x3D;&#39;王五&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;广州&#39;&#125;\nUser&#123;id&#x3D;4, username&#x3D;&#39;王六&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;深圳&#39;&#125;\nUser&#123;id&#x3D;5, username&#x3D;&#39;王八&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;上海&#39;&#125;</code></pre>\n<p><strong>以上的两个例子之前有相似的讲解，比较简单</strong></p>\n</li>\n</ul>\n<hr>\n<h2 id=\"案例3：返回Map形式的集合\"><a href=\"#案例3：返回Map形式的集合\" class=\"headerlink\" title=\"案例3：返回Map形式的集合\"></a>案例3：返回Map形式的集合</h2><ul>\n<li><p>Mapper接口方法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     3.返回Map形式的集合 </span>\n<span class=\"token comment\">//@MapKey确定了与User在Map中绑定的元素对象</span>\n    <span class=\"token annotation punctuation\">@MapKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectAllMapUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>Mapper.xml</p>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--3.返回Map形式的集合--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectAllMapUser<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>baseResultMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select  id, username ,birthday,sex , address from user\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n</li>\n<li><p>test方法<br>返回为map的好处就是可以快速索引主键 此时的主键是id<br><strong>使用map的优势 如果用list 就得一个一个的遍历 但是如果使用map</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     3.返回Map形式的集合</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectAllMapUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userMap <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectAllMapUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//遍历map</span>\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> keys <span class=\"token operator\">=</span> userMap<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> key<span class=\"token operator\">:</span>keys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">+</span><span class=\"token string\">\"-->\"</span> <span class=\"token operator\">+</span> userMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//example</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----打印id为4的用户----\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4\"</span><span class=\"token operator\">+</span><span class=\"token string\">\"-->\"</span> <span class=\"token operator\">+</span> userMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li><p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username ,birthday,sex , address from user \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: \nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 1, 张三, 2018-07-10, 1, 北京\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 2, 李四, 2018-07-10, 0, 上海\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 3, 王五, 2018-07-10, 1, 广州\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 4, 王六, 2018-07-10, 1, 深圳\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5, 王八, 2018-07-10, 1, 上海\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 5\n1--&gt;User&#123;id&#x3D;1, username&#x3D;&#39;张三&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;北京&#39;&#125;\n2--&gt;User&#123;id&#x3D;2, username&#x3D;&#39;李四&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;0&#39;, address&#x3D;&#39;上海&#39;&#125;\n3--&gt;User&#123;id&#x3D;3, username&#x3D;&#39;王五&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;广州&#39;&#125;\n4--&gt;User&#123;id&#x3D;4, username&#x3D;&#39;王六&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;深圳&#39;&#125;\n5--&gt;User&#123;id&#x3D;5, username&#x3D;&#39;王八&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;上海&#39;&#125;\n-----打印id为4的用户----\n4--&gt;User&#123;id&#x3D;4, username&#x3D;&#39;王六&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;深圳&#39;&#125;\n-----------------------\n</code></pre></li>\n</ul>\n<h2 id=\"案例4：返回Map形式的数据行\"><a href=\"#案例4：返回Map形式的数据行\" class=\"headerlink\" title=\"案例4\t：返回Map形式的数据行\"></a>案例4\t：返回Map形式的数据行</h2><ul>\n<li>Mapper接口方法<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     4.返回Map形式的数据行</span>\n     <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span><span class=\"token function\">selectAllMapCol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></li>\n<li>Mapper.xml<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--4.返回Map形式的数据行--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectAllMapCol<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select  id, username ,birthday,sex , address from user\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>test方法<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     4.返回Map形式的数据行</span>\n    <span class=\"token comment\">/*原来的3方法，list 返回的是一个User对象\n    *现在把每一行 返回为Map形式\n    * 在resultType中写map或者HashMap都可以\n    *\n    */</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectAllMapCol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> maps <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectAllMapCol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">:</span>\n                maps<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> cols <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> col <span class=\"token operator\">:</span>\n                    cols<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>col<span class=\"token operator\">+</span><span class=\"token string\">\":\"</span><span class=\"token operator\">+</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username ,birthday,sex , address from user \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: \nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 1, 张三, 2018-07-10, 1, 北京\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 2, 李四, 2018-07-10, 0, 上海\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 3, 王五, 2018-07-10, 1, 广州\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 4, 王六, 2018-07-10, 1, 深圳\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5, 王八, 2018-07-10, 1, 上海\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 5\nbirthday:2018-07-10\taddress:北京\tsex:1\tid:1\tusername:张三\t\nbirthday:2018-07-10\taddress:上海\tsex:0\tid:2\tusername:李四\t\nbirthday:2018-07-10\taddress:广州\tsex:1\tid:3\tusername:王五\t\nbirthday:2018-07-10\taddress:深圳\tsex:1\tid:4\tusername:王六\t\nbirthday:2018-07-10\taddress:上海\tsex:1\tid:5\tusername:王八\t</code></pre></li>\n</ul>\n","more":"<ol start=\"2\">\n<li><p>将新的项目导入到idea中，直接打开pom文件 一直点下一步即可<br> <strong>注意：在编写测试方法时，测试类的名字为UserMapperTest，测试方法的方法名为testXxxx，这样取名符合编程规范</strong></p>\n</li>\n<li><p>数据库：</p>\n<pre class=\"language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span>  <span class=\"token keyword\">database</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> mybatisdemo<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span>         <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span>  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'用户名称'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>birthday<span class=\"token punctuation\">`</span></span>  <span class=\"token keyword\">date</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'生日'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>sex<span class=\"token punctuation\">`</span></span>       <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'性别'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>address<span class=\"token punctuation\">`</span></span>   <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'地址'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token operator\">=</span><span class=\"token number\">27</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'北京'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王五'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'广州'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王六'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王八'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2018-07-10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上海'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></li>\n</ol>\n<h1 id=\"Mybatis-案例\"><a href=\"#Mybatis-案例\" class=\"headerlink\" title=\"Mybatis 案例\"></a>Mybatis 案例</h1><h2 id=\"案例1：返回单一实体对象\"><a href=\"#案例1：返回单一实体对象\" class=\"headerlink\" title=\"案例1：返回单一实体对象\"></a>案例1：返回单一实体对象</h2><ul>\n<li><p>Mapper接口方法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     1.返回单一实体对象</span>\n     <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>Mapper.xml</p>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--1.返回单一实体对象--></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectById<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_int<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>baseResultMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select  id, username ,birthday,sex , address from user where id = #&#123;id&#125;\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n</li>\n<li><p>test方法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//除了主体部分的代码 之后的案例将会省略</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MybatisTest</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">UserMapper</span> userMapper <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">InputStream</span> inputstream <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token annotation punctuation\">@Before</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">before</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            inputstream <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sqlSession <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>inputstream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            userMapper <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//     1.返回单一实体对象</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//关闭资源</span>\n    <span class=\"token annotation punctuation\">@After</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">after</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sqlSession<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>inputstream<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n                inputstream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li><p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username ,birthday,sex , address from user where id &#x3D; ? \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: 1(Integer)\nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 1, 张三, 2018-07-10, 1, 北京\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 1\nUser&#123;id&#x3D;1, username&#x3D;&#39;张三&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;北京&#39;&#125;</code></pre></li>\n</ul>\n<h2 id=\"案例2：返回集合实体对象\"><a href=\"#案例2：返回集合实体对象\" class=\"headerlink\" title=\"案例2：返回集合实体对象\"></a>案例2：返回集合实体对象</h2><ul>\n<li><p>Mapper接口方法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     2.返回集合实体对象</span>\n     <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectAllUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>Mapper.xml</p>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--2.返回集合实体对象--></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectAllUser<span class=\"token punctuation\">\"</span></span>  <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>baseResultMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select  id, username ,birthday,sex , address from user\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n</li>\n<li><p>test方法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//除了主体部分的代码 之后的案例将会省略</span>\n    <span class=\"token comment\">//     2.返回集合实体对象</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectAllUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectAllUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> u <span class=\"token operator\">:</span>\n                users<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li><p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username ,birthday,sex , address from user \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: \nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 1, 张三, 2018-07-10, 1, 北京\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 2, 李四, 2018-07-10, 0, 上海\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 3, 王五, 2018-07-10, 1, 广州\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 4, 王六, 2018-07-10, 1, 深圳\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5, 王八, 2018-07-10, 1, 上海\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 5\nUser&#123;id&#x3D;1, username&#x3D;&#39;张三&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;北京&#39;&#125;\nUser&#123;id&#x3D;2, username&#x3D;&#39;李四&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;0&#39;, address&#x3D;&#39;上海&#39;&#125;\nUser&#123;id&#x3D;3, username&#x3D;&#39;王五&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;广州&#39;&#125;\nUser&#123;id&#x3D;4, username&#x3D;&#39;王六&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;深圳&#39;&#125;\nUser&#123;id&#x3D;5, username&#x3D;&#39;王八&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;上海&#39;&#125;</code></pre>\n<p><strong>以上的两个例子之前有相似的讲解，比较简单</strong></p>\n</li>\n</ul>\n<hr>\n<h2 id=\"案例3：返回Map形式的集合\"><a href=\"#案例3：返回Map形式的集合\" class=\"headerlink\" title=\"案例3：返回Map形式的集合\"></a>案例3：返回Map形式的集合</h2><ul>\n<li><p>Mapper接口方法</p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     3.返回Map形式的集合 </span>\n<span class=\"token comment\">//@MapKey确定了与User在Map中绑定的元素对象</span>\n    <span class=\"token annotation punctuation\">@MapKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectAllMapUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n<li><p>Mapper.xml</p>\n<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--3.返回Map形式的集合--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectAllMapUser<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>baseResultMap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select  id, username ,birthday,sex , address from user\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre>\n</li>\n<li><p>test方法<br>返回为map的好处就是可以快速索引主键 此时的主键是id<br><strong>使用map的优势 如果用list 就得一个一个的遍历 但是如果使用map</strong></p>\n<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     3.返回Map形式的集合</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectAllMapUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> userMap <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectAllMapUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//遍历map</span>\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> keys <span class=\"token operator\">=</span> userMap<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> key<span class=\"token operator\">:</span>keys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">+</span><span class=\"token string\">\"-->\"</span> <span class=\"token operator\">+</span> userMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//example</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----打印id为4的用户----\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4\"</span><span class=\"token operator\">+</span><span class=\"token string\">\"-->\"</span> <span class=\"token operator\">+</span> userMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li><p>运行结果</p>\n<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username ,birthday,sex , address from user \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: \nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 1, 张三, 2018-07-10, 1, 北京\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 2, 李四, 2018-07-10, 0, 上海\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 3, 王五, 2018-07-10, 1, 广州\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 4, 王六, 2018-07-10, 1, 深圳\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5, 王八, 2018-07-10, 1, 上海\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 5\n1--&gt;User&#123;id&#x3D;1, username&#x3D;&#39;张三&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;北京&#39;&#125;\n2--&gt;User&#123;id&#x3D;2, username&#x3D;&#39;李四&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;0&#39;, address&#x3D;&#39;上海&#39;&#125;\n3--&gt;User&#123;id&#x3D;3, username&#x3D;&#39;王五&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;广州&#39;&#125;\n4--&gt;User&#123;id&#x3D;4, username&#x3D;&#39;王六&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;深圳&#39;&#125;\n5--&gt;User&#123;id&#x3D;5, username&#x3D;&#39;王八&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;上海&#39;&#125;\n-----打印id为4的用户----\n4--&gt;User&#123;id&#x3D;4, username&#x3D;&#39;王六&#39;, birthday&#x3D;Tue Jul 10 00:00:00 CST 2018, sex&#x3D;&#39;1&#39;, address&#x3D;&#39;深圳&#39;&#125;\n-----------------------\n</code></pre></li>\n</ul>\n<h2 id=\"案例4：返回Map形式的数据行\"><a href=\"#案例4：返回Map形式的数据行\" class=\"headerlink\" title=\"案例4\t：返回Map形式的数据行\"></a>案例4\t：返回Map形式的数据行</h2><ul>\n<li>Mapper接口方法<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     4.返回Map形式的数据行</span>\n     <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span><span class=\"token function\">selectAllMapCol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></li>\n<li>Mapper.xml<pre class=\"language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--4.返回Map形式的数据行--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectAllMapCol<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select  id, username ,birthday,sex , address from user\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre></li>\n<li>test方法<pre class=\"language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//     4.返回Map形式的数据行</span>\n    <span class=\"token comment\">/*原来的3方法，list 返回的是一个User对象\n    *现在把每一行 返回为Map形式\n    * 在resultType中写map或者HashMap都可以\n    *\n    */</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSelectAllMapCol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> maps <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectAllMapCol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">:</span>\n                maps<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> cols <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> col <span class=\"token operator\">:</span>\n                    cols<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>col<span class=\"token operator\">+</span><span class=\"token string\">\":\"</span><span class=\"token operator\">+</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span></code></pre></li>\n<li>运行结果<pre class=\"language-none\"><code class=\"language-none\">DEBUG [main] - &#x3D;&#x3D;&gt;  Preparing: select id, username ,birthday,sex , address from user \nDEBUG [main] - &#x3D;&#x3D;&gt; Parameters: \nTRACE [main] - &lt;&#x3D;&#x3D;    Columns: id, username, birthday, sex, address\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 1, 张三, 2018-07-10, 1, 北京\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 2, 李四, 2018-07-10, 0, 上海\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 3, 王五, 2018-07-10, 1, 广州\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 4, 王六, 2018-07-10, 1, 深圳\nTRACE [main] - &lt;&#x3D;&#x3D;        Row: 5, 王八, 2018-07-10, 1, 上海\nDEBUG [main] - &lt;&#x3D;&#x3D;      Total: 5\nbirthday:2018-07-10\taddress:北京\tsex:1\tid:1\tusername:张三\t\nbirthday:2018-07-10\taddress:上海\tsex:0\tid:2\tusername:李四\t\nbirthday:2018-07-10\taddress:广州\tsex:1\tid:3\tusername:王五\t\nbirthday:2018-07-10\taddress:深圳\tsex:1\tid:4\tusername:王六\t\nbirthday:2018-07-10\taddress:上海\tsex:1\tid:5\tusername:王八\t</code></pre></li>\n</ul>","categories":[],"tags":[{"name":"Mybatis","path":"api/tags/Mybatis.json"}]}
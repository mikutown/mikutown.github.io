{"title":"leetcode162.寻找峰值","slug":"leetcode162-寻找峰值","date":"2024-01-17T01:30:42.000Z","updated":"2024-01-17T01:32:00.287Z","comments":true,"path":"api/articles/leetcode162-寻找峰值.json","excerpt":"题目峰值元素是指其值严格大于左右相邻值的元素。给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。你可以假设 nums[-1] = nums[n] = -∞ 。你必须实现时间复杂度为 O(log n) 的算法来解决此问题。","covers":null,"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>峰值元素是指其值严格大于左右相邻值的元素。</p>\n<p>给你一个整数数组 <code>nums</code>，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 <strong>任何一个峰值</strong> 所在位置即可。</p>\n<p>你可以假设 <code>nums[-1] = nums[n] = -∞</code> 。</p>\n<p>你必须实现时间复杂度为 <code>O(log n)</code> 的算法来解决此问题。</p>\n<span id=\"more\"></span> \n\n<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：nums &#x3D; [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：nums &#x3D; [1,2,1,3,5,6,4]\n输出：1 或 5 \n解释：你的函数可以返回索引 1，其峰值元素为 2；\n     或者返回索引 5， 其峰值元素为 6。</code></pre>\n\n <!--more-->\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n<li><code>-231 &lt;= nums[i] &lt;= 231 - 1</code></li>\n<li>对于所有有效的 <code>i</code> 都有 <code>nums[i] != nums[i + 1]</code></li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>直接求解</li>\n</ul>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    int findPeakElement(vector&lt;int&gt;&amp; nums) &#123;\n        int n &#x3D; nums.size();\n        &#x2F;&#x2F; 可以假设 nums[-1] &#x3D; nums[n] &#x3D; -∞ \n        &#x2F;&#x2F; 排除只有一个元素的场景\n        if (n &#x3D;&#x3D; 1) return 0;\n        for (int i &#x3D; 0; i &lt; n; i++) &#123;\n            &#x2F;&#x2F; 为了符合假设，对首尾进行判断\n            if (i &#x3D;&#x3D; 0) &#123;\n                if (nums[i] &gt; nums[i+1]) return i;\n            &#125;\n            else if (i &#x3D;&#x3D; n - 1) &#123;\n                if (nums[i] &gt; nums[i - 1]) return i;\n            &#125;\n            else &#123;\n                &#x2F;&#x2F; 常规判断\n                if (nums[i] &gt; nums[i - 1] &amp;&amp; nums[i] &gt; nums[i + 1]) return i;\n            &#125;\n        &#125;\n        return 0;\n    &#125;\n&#125;;</code></pre>\n\n","more":"<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：nums &#x3D; [1,2,3,1]\n输出：2\n解释：3 是峰值元素，你的函数应该返回其索引 2。</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：nums &#x3D; [1,2,1,3,5,6,4]\n输出：1 或 5 \n解释：你的函数可以返回索引 1，其峰值元素为 2；\n     或者返回索引 5， 其峰值元素为 6。</code></pre>\n\n <!--more-->\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n<li><code>-231 &lt;= nums[i] &lt;= 231 - 1</code></li>\n<li>对于所有有效的 <code>i</code> 都有 <code>nums[i] != nums[i + 1]</code></li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>直接求解</li>\n</ul>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    int findPeakElement(vector&lt;int&gt;&amp; nums) &#123;\n        int n &#x3D; nums.size();\n        &#x2F;&#x2F; 可以假设 nums[-1] &#x3D; nums[n] &#x3D; -∞ \n        &#x2F;&#x2F; 排除只有一个元素的场景\n        if (n &#x3D;&#x3D; 1) return 0;\n        for (int i &#x3D; 0; i &lt; n; i++) &#123;\n            &#x2F;&#x2F; 为了符合假设，对首尾进行判断\n            if (i &#x3D;&#x3D; 0) &#123;\n                if (nums[i] &gt; nums[i+1]) return i;\n            &#125;\n            else if (i &#x3D;&#x3D; n - 1) &#123;\n                if (nums[i] &gt; nums[i - 1]) return i;\n            &#125;\n            else &#123;\n                &#x2F;&#x2F; 常规判断\n                if (nums[i] &gt; nums[i - 1] &amp;&amp; nums[i] &gt; nums[i + 1]) return i;\n            &#125;\n        &#125;\n        return 0;\n    &#125;\n&#125;;</code></pre>","categories":[],"tags":[{"name":"leetcode","path":"api/tags/leetcode.json"},{"name":"算法","path":"api/tags/算法.json"}]}
{"title":"leetcode940.不同的子序列II","slug":"leetcode940-不同的子序列II","date":"2023-09-01T08:36:44.000Z","updated":"2023-09-01T08:44:12.267Z","comments":true,"path":"api/articles/leetcode940-不同的子序列II.json","excerpt":"题目给定一个字符串 s，计算 s 的 不同非空子序列 的个数。因为结果可能很大，所以返回答案需要对 10^9 + 7 取余 。字符串的 子序列 是经由原字符串删除一些（也可能不删除）字符但不改变剩余字符相对位置的一个新字符串。例如，&quot;ace&quot; 是 &quot;***a***b***c***d***e***&quot; 的一个子序列，但 &quot;aec&quot; 不是。","covers":["http://cdn.leafii.top/img/image-20230901164319947.png"],"content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>给定一个字符串 <code>s</code>，计算 <code>s</code> 的 <strong>不同非空子序列</strong> 的个数。因为结果可能很大，所以返回答案需要对 <strong><code>10^9 + 7</code> 取余</strong> 。</p>\n<p>字符串的 <strong>子序列</strong> 是经由原字符串删除一些（也可能不删除）字符但不改变剩余字符相对位置的一个新字符串。</p>\n<ul>\n<li>例如，<code>&quot;ace&quot;</code> 是 <code>&quot;***a***b***c***d***e***&quot;</code> 的一个子序列，但 <code>&quot;aec&quot;</code> 不是。</li>\n</ul>\n <span id=\"more\"></span>\n\n<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;abc&quot;\n输出：7\n解释：7 个不同的子序列分别是 &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;ab&quot;, &quot;ac&quot;, &quot;bc&quot;, 以及 &quot;abc&quot;。</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;aba&quot;\n输出：6\n解释：6 个不同的子序列分别是 &quot;a&quot;, &quot;b&quot;, &quot;ab&quot;, &quot;ba&quot;, &quot;aa&quot; 以及 &quot;aba&quot;。</code></pre>\n\n<p><strong>示例 3：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;aaa&quot;\n输出：3\n解释：3 个不同的子序列分别是 &quot;a&quot;, &quot;aa&quot; 以及 &quot;aaa&quot;。</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 2000</code></li>\n<li><code>s</code> 仅由小写英文字母组成</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>动态规划</li>\n</ul>\n<p>思路：</p>\n<p><img src=\"http://cdn.leafii.top/img/image-20230901164319947.png\" alt=\"**image-20230901164319947**\" loading=\"lazy\"></p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    int distinctSubseqII(string s) &#123;\n        vector&lt;int&gt; last(26, -1);\n        \n        int n &#x3D; s.size();\n        vector&lt;int&gt; f(n, 1);\n        for (int i &#x3D; 0; i &lt; n; ++i) &#123;\n            for (int j &#x3D; 0; j &lt; 26; ++j) &#123;\n                if (last[j] !&#x3D; -1) &#123;\n                    f[i] &#x3D; (f[i] + f[last[j]]) % mod;\n                &#125;\n            &#125;\n            last[s[i] - &#39;a&#39;] &#x3D; i;\n        &#125;\n        \n        int ans &#x3D; 0;\n        for (int i &#x3D; 0; i &lt; 26; ++i) &#123;\n            if (last[i] !&#x3D; -1) &#123;\n                ans &#x3D; (ans + f[last[i]]) % mod;\n            &#125;\n        &#125;\n        return ans;\n    &#125;\n\nprivate:\n    static constexpr int mod &#x3D; 1000000007;\n&#125;;\n</code></pre>\n\n\n\n<hr>\n<p>作者：力扣官方题解<br>链接：<a href=\"https://leetcode.cn/problems/distinct-subsequences-ii/solutions/1888523/bu-tong-de-zi-xu-lie-ii-by-leetcode-solu-k2h5/\">https://leetcode.cn/problems/distinct-subsequences-ii/solutions/1888523/bu-tong-de-zi-xu-lie-ii-by-leetcode-solu-k2h5/</a><br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n","more":"<p><strong>示例 1：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;abc&quot;\n输出：7\n解释：7 个不同的子序列分别是 &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;ab&quot;, &quot;ac&quot;, &quot;bc&quot;, 以及 &quot;abc&quot;。</code></pre>\n\n<p><strong>示例 2：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;aba&quot;\n输出：6\n解释：6 个不同的子序列分别是 &quot;a&quot;, &quot;b&quot;, &quot;ab&quot;, &quot;ba&quot;, &quot;aa&quot; 以及 &quot;aba&quot;。</code></pre>\n\n<p><strong>示例 3：</strong></p>\n<pre class=\"language-none\"><code class=\"language-none\">输入：s &#x3D; &quot;aaa&quot;\n输出：3\n解释：3 个不同的子序列分别是 &quot;a&quot;, &quot;aa&quot; 以及 &quot;aaa&quot;。</code></pre>\n\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 2000</code></li>\n<li><code>s</code> 仅由小写英文字母组成</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><ul>\n<li>动态规划</li>\n</ul>\n<p>思路：</p>\n<p><img src=\"http://cdn.leafii.top/img/image-20230901164319947.png\" alt=\"**image-20230901164319947**\"></p>\n<pre class=\"language-C++\" data-language=\"C++\"><code class=\"language-C++\">class Solution &#123;\npublic:\n    int distinctSubseqII(string s) &#123;\n        vector&lt;int&gt; last(26, -1);\n        \n        int n &#x3D; s.size();\n        vector&lt;int&gt; f(n, 1);\n        for (int i &#x3D; 0; i &lt; n; ++i) &#123;\n            for (int j &#x3D; 0; j &lt; 26; ++j) &#123;\n                if (last[j] !&#x3D; -1) &#123;\n                    f[i] &#x3D; (f[i] + f[last[j]]) % mod;\n                &#125;\n            &#125;\n            last[s[i] - &#39;a&#39;] &#x3D; i;\n        &#125;\n        \n        int ans &#x3D; 0;\n        for (int i &#x3D; 0; i &lt; 26; ++i) &#123;\n            if (last[i] !&#x3D; -1) &#123;\n                ans &#x3D; (ans + f[last[i]]) % mod;\n            &#125;\n        &#125;\n        return ans;\n    &#125;\n\nprivate:\n    static constexpr int mod &#x3D; 1000000007;\n&#125;;\n</code></pre>\n\n\n\n<hr>\n<p>作者：力扣官方题解<br>链接：<a href=\"https://leetcode.cn/problems/distinct-subsequences-ii/solutions/1888523/bu-tong-de-zi-xu-lie-ii-by-leetcode-solu-k2h5/\">https://leetcode.cn/problems/distinct-subsequences-ii/solutions/1888523/bu-tong-de-zi-xu-lie-ii-by-leetcode-solu-k2h5/</a><br>来源：力扣（LeetCode）<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>","categories":[],"tags":[{"name":"leetcode","path":"api/tags/leetcode.json"},{"name":"算法","path":"api/tags/算法.json"},{"name":"序列","path":"api/tags/序列.json"}]}